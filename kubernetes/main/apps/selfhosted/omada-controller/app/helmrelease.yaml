---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.0.1/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app omada-controller
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  test:
    enable: false
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  values:
    controllers:
      omada-controller:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: mbentley/omada-controller
              tag: 5.13@sha256:74be1f2839b20302467499bcb39e2d5490e48e917e569f42178fe00e4a30d0b1
            env:
              TZ: America/New_York
              MANAGE_HTTP_PORT: "8088"
              MANAGE_HTTPS_PORT: "8043"
              PORTAL_HTTP_PORT: "8088"
              PORTAL_HTTPS_PORT: "8843"
              PGID: "568"
              PUID: "568"
              SHOW_SERVER_LOGS: "true"
              SHOW_MONGODB_LOGS: "true"
            resources:
              requests:
                memory: 1200Mi
                cpu: 1200m
              limits:
                memory: 2000Mi

    service:
      app:
        controller: omada-controller
        enabled: true
        ports:
          http:
            enabled: true
            port: 8043
            targetPort: 8043
            protocol: TCP

      controller:
        controller: omada-controller
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: "10.45.0.11"
        externalTrafficPolicy: Local
        ports:
          mgmt-8088-tcp:
            port: 8088
            targetPort: 8088
            protocol: TCP
          # mgmt-8043-tcp:
          #   enabled: true
          #   port: 8043
          #   protocol: TCP
          #   targetPort: 8043
          portal-8843-tcp:
            port: 8843
            protocol: TCP
            targetPort: 8843
          eap-discovery:
            port: 29810
            protocol: UDP
            targetPort: 29810
          old-eap-mgmt:
            port: 29811
            protocol: TCP
            targetPort: 29811
          old-eap-adopt:
            port: 29812
            protocol: TCP
            targetPort: 29812
          old-eap-upgrade:
            port: 29813
            protocol: TCP
            targetPort: 29813
          eap-adopt:
            port: 29814
            protocol: TCP
            targetPort: 29814
          init-check:
            port: 27001
            protocol: UDP
            targetPort: 27001
          old-init-info:
            port: 27002
            protocol: TCP
            targetPort: 27002
          old-db-access:
            port: 27017
            protocol: TCP
            targetPort: 27017
          db-access:
            port: 27217
            protocol: TCP
            targetPort: 27217

    ingress:
      app:
        className: "internal-nginx"
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
          nginx.ingress.kubernetes.io/use-regex: "true"
          nginx.ingress.kubernetes.io/upstream-vhost: "omada.greyrock.casa:8043"
          nginx.ingress.kubernetes.io/proxy-redirect-from: "~https://(.+):8043/(.+)/login$"
          nginx.ingress.kubernetes.io/proxy-redirect-to: "https://$1/$2/login"
          hajimari.io/enable: "true"
          hajimari.io/instance: "todd"
          hajimari.io/icon: "router-wireless-settings"

        hosts:
          - host: &hostName omada.greyrock.casa
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *hostName

    persistence:
      config:
        existingClaim: omada-controller-config
        advancedMounts:
          omada-controller:
            app:
              - path: /opt/tplink/EAPController/data
      work:
        existingClaim: omada-controller-work
        advancedMounts:
          omada-controller:
            app:
              - path: /opt/tplink/EAPController/work
      logs:
        existingClaim: omada-controller-logs
        advancedMounts:
          omada-controller:
            app:
              - path: /opt/tplink/EAPController/logs
      backups:
        type: nfs
        server: nas.greyrock.io
        path: /tank/Backup/omada-controller
        advancedMounts:
          omada-controller:
            app:
              - path: /opt/tplink/EAPController/data/autobackup
