---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: tandoor
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: tandoor-secret
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        SECRET_KEY: "{{ .tandoor_secret_key }}"
        # LDAP
        LDAP_AUTH: "1"
        AUTH_LDAP_ALWAYS_UPDATE_USER: "1"
        AUTH_LDAP_BIND_DN: "{{ .authentik_greyrock_bind_dn }}"
        AUTH_LDAP_BIND_PASSWORD: "{{ .authentik_greyrock_bind_dn_password }}"
        AUTH_LDAP_SERVER_URI: ldap://ak-outpost-ldap-outpost.security.svc.cluster.local
        AUTH_LDAP_USER_SEARCH_BASE_DN: "dc=ldap,dc=greyrock,dc=casa"
        AUTH_LDAP_USER_SEARCH_FILTER_STR: "(&(objectClass=user)(cn=%(user)s)(memberOf=cn=Grey Rock Members,ou=groups,dc=ldap,dc=greyrock,dc=casa))"
  dataFrom:
    - extract:
        key: Authentik
      rewrite:
        - regexp:
            source: "(.*)"
            target: "authentik_$1"
    - extract:
        key: tandoor
      rewrite:
        - regexp:
            source: "(.*)"
            target: "tandoor_$1"
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: tandoor-db
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: crunchy-pgo-secrets
    kind: ClusterSecretStore
  target:
    name: tandoor-db-secret
    template:
      type: Opaque
      data:
        DB_ENGINE: django.db.backends.postgresql
        POSTGRES_HOST: '{{ index . "pgbouncer-host" }}'
        POSTGRES_PORT: '{{ index . "pgbouncer-port" }}'
        POSTGRES_USER: '{{ index . "user" }}'
        POSTGRES_PASSWORD: '{{ index . "password" }}'
        POSTGRES_DB: '{{ index . "dbname" }}'
  dataFrom:
    - extract:
        key: postgres-pguser-tandoor
