---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumnetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: dragonfly-cluster
spec:
  endpointSelector:
    matchLabels:
      dragonflydb.io/cluster: dragonfly
  ingress:
    # allow dragonfly pods to talk to each other
    - fromEndpoints:
        - matchLabels:
            dragonflydb.io/cluster: dragonfly

    # allow operator to connect
    - fromEndpoints:
        - matchLabels:
            app.kubernetes.io/name: dragonfly-operator

    # allow labelled pods to connect to dragonfly
    - fromEndpoints:
        - matchLabels:
            db.home.arpa/dragonfly: "dragonfly"
          matchExpressions:
            - key: io.kubernetes.pod.namespace
              operator: Exists
      toPorts:
        - ports:
            - port: "6379"

  egress:
    # allow dragonfly pods to talk to each other
    - toEndpoints:
        - matchLabels:
            dragonflydb.io/cluster: dragonfly

    # connections to operator
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/name: dragonfly-operator
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumclusterwidenetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: apps-to-dragonfly
spec:
  endpointSelector:
    matchLabels:
      db.home.arpa/dragonfly: "dragonfly"
  egress:
    # Connections to dragonfly cluster
    - toEndpoints:
        - matchLabels:
            dragonflydb.io/cluster: dragonfly
            io.kubernetes.pod.namespace: database
      toPorts:
        - ports:
            - port: "6379"
              protocol: "TCP"
