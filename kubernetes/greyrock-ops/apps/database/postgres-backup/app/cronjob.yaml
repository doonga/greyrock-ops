---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup
  namespace: database
spec:
  schedule: "0 4 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          automountServiceAccountToken: false
          enableServiceLinks: false
          securityContext:
            runAsUser: 568
            runAsGroup: 100
            fsGroup: 100
            supplementalGroups:
              - 65541

          containers:
            - name: postgres-backup
              image: docker.io/prodrigestivill/postgres-backup-local:15@sha256:9a08323f39ff6cf0244b1462686d56a0911f8e41a23febf07b59840eacee9361
              imagePullPolicy: IfNotPresent
              command:
                - "/backup.sh"
              env:
                - name: POSTGRES_HOST
                  value: postgres-v15-ro.database.svc.cluster.local
                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                      name: cloudnative-pg-postgres-superuser
                      key: username
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: cloudnative-pg-postgres-superuser
                      key: password
                - name: POSTGRES_DB
                  value: "home-assistant,miniflux,teslamate,invidious"
              volumeMounts:
                - name: nas-backups
                  mountPath: /backups

            - name: zalando-postgres-backup
              image: docker.io/prodrigestivill/postgres-backup-local:15@sha256:9a08323f39ff6cf0244b1462686d56a0911f8e41a23febf07b59840eacee9361
              imagePullPolicy: IfNotPresent
              command:
                - "/backup.sh"
              env:
                - name: POSTGRES_HOST
                  value: postgres.database.svc.cluster.local
                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                      name: postgres.postgres.credentials.postgresql.acid.zalan.do
                      key: username
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: postgres.postgres.credentials.postgresql.acid.zalan.do
                      key: password
                - name: POSTGRES_DB
                  value: "immich"
              volumeMounts:
                - name: nas-backups
                  mountPath: /backups

          restartPolicy: OnFailure

          volumes:
            - name: nas-backups
              nfs:
                server: "nas.private.greyrock.io"
                path: /tank/backup/databases/postgresql
