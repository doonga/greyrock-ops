---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  chart:
    spec:
      chart: grafana
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
      version: 6.56.5
  interval: 30m
  timeout: 20m
  values:
    replicas: 1

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            disableDeletion: false
            editable: true
            folder: ""
            options:
              path: /var/lib/grafana/dashboards/default
            orgId: 1
            type: file
          - name: node-exporter
            disableDeletion: false
            editable: true
            folder: "node-exporter"
            options:
              path: /var/lib/grafana/dashboards/node-exporter
            orgId: 1
            type: file

    dashboards:
      default:
        speedtest-exporter-hub:
          gnetId: 13665
          revision: 4
          datasource:
            - name: "DS_PROMETHEUS"
              value: Prometheus

        # Ref: https://grafana.com/grafana/dashboards/12309-bind9-exporter-dns/
        bind:
          gnetId: 12309
          revision: 4
          datasource: Prometheus

      node-exporter:
        # Ref: https://grafana.com/grafana/dashboards/1860-node-exporter-full/
        node-exporter:
          gnetId: 1860
          revision: 29
          datasource: Prometheus

    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - access: proxy
            isDefault: true
            name: Prometheus
            type: prometheus
            url: http://thanos-query.monitoring:9090
          - access: proxy
            name: Loki
            type: loki
            url: http://loki-gateway.monitoring.svc.cluster.local:80
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://alertmanager.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
          - name: TeslaMate
            type: postgres
            access: proxy
            url: postgres.database.svc.cluster.local:5432
            user: teslamate-zV0DCd
            secureJsonData:
              password: $TESLAMATE_POSTGRES_PASSWORD
              sslmode: disable
            jsonData:
              postgresVersion: 1000
              sslmode: disable
              database: teslamate
        deleteDatasources:
          - name: Loki
            orgId: 1
          - name: Alertmanager
            orgId: 1

    deploymentStrategy:
      type: Recreate

    env:
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_GRAFANA_NET_URL: https://grafana.net
      GF_LOG_FILTERS: rendering:debug
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_PATHS_DATA: /var/lib/grafana/data
      GF_PATHS_LOGS: /var/log/grafana
      GF_PATHS_PLUGINS: /var/lib/grafana/plugins
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_SECURITY_ALLOW_EMBEDDING: true
      GF_SECURITY_COOKIE_SAMESITE: grafana
      GF_SERVER_ROOT_URL: "https://grafana.greyrock.tech"

    envFromSecret: grafana-secrets

    grafana.ini:
      analytics:
        check_for_updates: false
      auth:
        oauth_auto_login: true
      auth.basic:
        enabled: false

      auth.generic_oauth:
        enabled: true
        name: Auth0
        scopes: "openid profile email"
        client_id: # Set by env vars
        client_secret: # Set by env vars
        auth_url: # Set by env vars
        token_url: # Set by env vars
        api_url: # Set by env vars
        use_pkce: true

      auth.generic_oauth.group_mapping:
        role_attribute_path: |
          contains("https://greyrock/groups"[*], 'grafana-admin') && 'Admin' || contains("https://greyrock/groups"[*], 'grafana-viewer') && 'Viewer'
        org_id: 1

      grafana_net:
        url: https://grafana.net
      log:
        mode: console
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      server:
        root_url: https://grafana.greyrock.tech

    imageRenderer:
      enabled: true

    ingress:
      enabled: true
      ingressClassName: nginx
      hosts:
        - &host grafana.greyrock.tech
      tls:
        - hosts:
            - *host

    persistence:
      enabled: false

    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel

    podAnnotations:
      configmap.reloader.stakater.com/reload: grafana
      secret.reloader.stakater.com/reload: grafana-secrets

    rbac:
      pspEnabled: false

    resources:
      limits:
        memory: 219M
      requests:
        cpu: 23m
        memory: 127M

    serviceMonitor:
      enabled: true

    sidecar:
      dashboards:
        enabled: true
        labelValue: ""
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        searchNamespace: ALL
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        labelValue: ""
        searchNamespace: ALL
      logLevel: INFO
