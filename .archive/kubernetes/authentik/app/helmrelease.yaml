---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: authentik
spec:
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: 2024.2.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
  values:
    global:
      podAnnotations:
        secret.reloader.stakater.com/reload: authentik-secret, authentik-db-secret
      deploymentStrategy:
        type: RollingUpdate
      envFrom:
        - secretRef:
            name: authentik-secret
        - secretRef:
            name: authentik-db-secret

    authentik:
      log_level: info
      redis:
        host: "authentik-redis.security.svc.cluster.local"
        password: ""
        db: 1

    envFrom:
      - secretRef:
          name: authentik-secret
      - secretRef:
          name: authentik-db-secret

    envValueFrom:
      AUTHENTIK_REDIS__PASSWORD:
        secretKeyRef:
          name: authentik-redis-secret
          key: AUTHENTIK_REDIS_PASSWORD

    ingress:
      enabled: true
      ingressClassName: external-nginx
      annotations:
        external-dns.alpha.kubernetes.io/target: ingress-ext.greyrock.casa
        nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
      hosts:
        - host: "${HOSTNAME}"
          paths:
            - path: /
      tls:
        - hosts:
            - "${HOSTNAME}"

    postgresql:
      enabled: false

    prometheus:
      rules:
        enabled: true

    redis:
      enabled: false

    server:
      podAnnotations:
        secret.reloader.stakater.com/reload:
      autoscaling:
        enabled: true
        minReplicas: 1
      ingress:
        enabled: true
        ingressClassName: external-nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: ingress-ext.greyrock.casa
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        hosts:
          - "${HOSTNAME}"
        tls:
          - hosts:
              - "${HOSTNAME}"
      metrics:
        prometheus:
          serviceMonitor:
            enabled: true

    worker:
      autoscaling:
        enabled: true
        minReplicas: 1
