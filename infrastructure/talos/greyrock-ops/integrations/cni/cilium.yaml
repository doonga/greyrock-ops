# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: greyrock-ops
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: greyrock-ops\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUt6NEpodUZab0lueFgxSXhQT084am93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05URXpNRFkwT0ZvWERUSTJNRFl3TkRFegpNRFkwT0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE0cXgvempUS2ZGS2Rrc0RURkJYZmI3Tk9PSkF4dUo2SnBSQU5nbUpCdVgwNEpsNFQKcDB4MGNBWDAzRjlpWktJRW02djVuZHVOVHFEdFZsZUxNMS82VmRTc1dSNTN1Uy9sTUlGSXZ6TmRRODhQRlF4KwpaWDB1bDVLUEQ4K3ErbFVsWXZHMk9PQzAzNXBWUkVPN3BlQmkxL2lQQVRCcTZ4aVpDdDZBUUhSYml1L0sxNHdTCkFBbm1YbmRpVGV4ZHk3SWNpVlgrU0psalg2Nzk2cGpPTUtrRjZFM3NnK1FiekNwZEorMFkvYjVRL1orc3Z0UHUKc0xvbnFoekZxTTdFRE5pemZKbS9DME1LSXBaQi9jeHUzUFFEV1R4RUFNSjJkQkdscTVqL1AzSzA5bng3RklwaQplS2pvWE42bW5GRE9yM2ROcUpZczh3VFJGR2R0SlY5L0RlcnFCd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR1hyYkNWb2s4aVg5M3pqMDNZWE13K0xmaG5CTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0ZrYTVhNThFOG82OWRoVVpIUk9RYkNZb2taTklIZUplMys4dW4xZVJWckdTdWlXSEFleWR6CmQ5MGVUdVF3MDdoQ0lTMCtIMTRSUHhSdDFmdllVS0tzWlN6ZWNlWHdyaVFqV1Nnc1RBTE15b2tVT3U1Z3Ixc0kKQ0d6TlNsbzQzQUNjeld0N05Gd2ZyVnhNUVQxSnNiS3ByaWJrbXo0aGdUYXdjWkR0d1U5YjBDSTEyNzFteWZnUwpmSk5RMkNDNkRHT3RqS2Q1Wjdlbnp5cTRnWGljeDJuamw5QnkxMmJlZzlkTDNoSWJROHE3MVRHL2htQm9TOVVZCmQvV1BWWDIvTjRZYmVYQ3dFZ2l5SFdyUzMrNTc2ZStCYTFHL3dSbkJUaTk4MXVNRERXanJLY0hVQjVodjBrV1QKbVFqQW8rRlNGb2Q3WkFJdVU3T1Y1aDRXbW9iSnBNNk4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNHF4L3pqVEtmRktka3NEVEZCWGZiN05PT0pBeHVKNkpwUkFOZ21KQnVYMDRKbDRUCnAweDBjQVgwM0Y5aVpLSUVtNnY1bmR1TlRxRHRWbGVMTTEvNlZkU3NXUjUzdVMvbE1JRkl2ek5kUTg4UEZReCsKWlgwdWw1S1BEOCtxK2xVbFl2RzJPT0MwMzVwVlJFTzdwZUJpMS9pUEFUQnE2eGlaQ3Q2QVFIUmJpdS9LMTR3UwpBQW5tWG5kaVRleGR5N0ljaVZYK1NKbGpYNjc5NnBqT01La0Y2RTNzZytRYnpDcGRKKzBZL2I1US9aK3N2dFB1CnNMb25xaHpGcU03RUROaXpmSm0vQzBNS0lwWkIvY3h1M1BRRFdUeEVBTUoyZEJHbHE1ai9QM0swOW54N0ZJcGkKZUtqb1hONm1uRkRPcjNkTnFKWXM4d1RSRkdkdEpWOS9EZXJxQndJREFRQUJBb0lCQVFEUWpweHRFdjkzRWVCdgpaVUVReXVzdzhBNDVWdHFZbmkzUkZJc0pldlEwQVhXSFA2bmZsU1hRNkhvWnhSMVhzQWFEWU9FamtCMWN5ZzUxCkVjays5TUQwOWQrNWc2SHVYcFlHWWYyWUJsOTZnMm5DR1NPMnAwNFdJYi9GY1hKRUw5RmRUejQwNlBNaWhQS04KQTdFRWR3Y2E1VlJXYU1FSEhETzczMnFyWXlQVEdRQk9tenpCNHBPMlNXclc0VnJndlBGR3VvdFBoQmhOQ1hmRwpLcUFHNjk0dFpvY2pNMzFCMER5MFNaT3lDOVBwcUN5U1g5d0I4S2xSbjRWY25Ua0l2QXB0S2JRTmRnK1c0c3pPCk1WM2JSc2plM2svRUJ5ZFAvMFNoekF2NkJvRlNXZ2hqcWN3bHlLR3ZPQm1BRjVVUktFUHBDanBGVkNBWUdvZG0KaThvbUhCZ1JBb0dCQVA3M1BlMTNnZnpMN2piKzd5akszRTJidW93ekVMcHRlV2QrcDFCZnVUQjNETzc1REV6Nwo4U3ZtSXpxQ0xYRi9xck01MGpsZXBoUW5iaWx1TlUwbVVlM3BwbDhqWnpEbXdlbm5vRGRnR3I4NmJxV3YxL0Z3CkNKcmxBMkdRRVFjK0RuOXpZT251amtFNzZMQWlPOHAvcE9EaDV1SVdwbnVFVE9Bc1BodHFveTZwQW9HQkFPT1gKNFBmRzBkSG5mZjZVc2Y2ZlJBRTBjdFFrZEgreEk2NUtuVWZzOHZ6ZGRNaUl1TW5KRURtc2NXd2s2c1dZdW85TAphUVovOXgzU1ZTL3BvcGJzcjdYbUU4UlhUWTAxcDZQaXowL2lSNW9lYkxEVVRWN2ZtenZLTS9ZeDlvRGpjWkUyCmZ6dzJhYzd5c2JOUDVmckwvZHhGT0xqMkpVS1NYMWFxRHBkbEx6RXZBb0dCQU9SWS9KNmNKTkFLdUp1S3NSa2cKcmpQWG9EaUdWNW9RQitZNEdaTXpXQUZlN2pkczE2WnZFaTBWM1VFK2E0SzJLMlIvQ1plVi9Eb2FvbC82czBRWQphTklpSzM0VGtBek03cWtWYUhtUDJnU2dTWTZjc1ZNcjJwa1hPSEw5ZXpLNFVuVzFHUHdLU2wrRVR6N0lPakovCkpXUy9EWEE1aHZzaW4xTTZiSmxUWlRpWkFvR0JBSUl4ZGI0SC9Dc3BVOGY0WThJV2RaNkMxRlZLN1dIR2dYVEkKdGlSWkJiOWxKOU0zY3czcmVONmxLTlVHWVU3YnlZMERSSGMxYUxXa2hwcTcrZ2lBS1J2VEcrZXJVVy9BQzhBUwpsU2xMZGs1UnJUZVNteGYwcmlhTHl5SEEveFJJQjhWYitYa0dYNHpGQktaZ3hGeXRxUEVDb0NvZWxMMzZZWk9BCkFJeldreUo5QW9HQUhIZkFMQlJiS0tzMG9uOCtqRzZpaE5sWnliMzlFQlRsLzVCQ0lOWTliSk9aRFU4WUdMZGcKanJUTE5PMEpWc2hoUkU0WENyTzN1eVp4THBYdVpxRnpBYkhnWFlxNDQvb1lFZVZFV0prbU8vTDNabWdyWjhVSQpCQ1dURElpWEM5K3pnWThad01IdXBwcERDMXE3ejRQeVhINzExSnorQnluM1I1a1dPKy9JLzJZPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUt6NEpodUZab0lueFgxSXhQT084am93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05URXpNRFkwT0ZvWERUSTJNRFl3TkRFegpNRFkwT0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE0cXgvempUS2ZGS2Rrc0RURkJYZmI3Tk9PSkF4dUo2SnBSQU5nbUpCdVgwNEpsNFQKcDB4MGNBWDAzRjlpWktJRW02djVuZHVOVHFEdFZsZUxNMS82VmRTc1dSNTN1Uy9sTUlGSXZ6TmRRODhQRlF4KwpaWDB1bDVLUEQ4K3ErbFVsWXZHMk9PQzAzNXBWUkVPN3BlQmkxL2lQQVRCcTZ4aVpDdDZBUUhSYml1L0sxNHdTCkFBbm1YbmRpVGV4ZHk3SWNpVlgrU0psalg2Nzk2cGpPTUtrRjZFM3NnK1FiekNwZEorMFkvYjVRL1orc3Z0UHUKc0xvbnFoekZxTTdFRE5pemZKbS9DME1LSXBaQi9jeHUzUFFEV1R4RUFNSjJkQkdscTVqL1AzSzA5bng3RklwaQplS2pvWE42bW5GRE9yM2ROcUpZczh3VFJGR2R0SlY5L0RlcnFCd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR1hyYkNWb2s4aVg5M3pqMDNZWE13K0xmaG5CTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0ZrYTVhNThFOG82OWRoVVpIUk9RYkNZb2taTklIZUplMys4dW4xZVJWckdTdWlXSEFleWR6CmQ5MGVUdVF3MDdoQ0lTMCtIMTRSUHhSdDFmdllVS0tzWlN6ZWNlWHdyaVFqV1Nnc1RBTE15b2tVT3U1Z3Ixc0kKQ0d6TlNsbzQzQUNjeld0N05Gd2ZyVnhNUVQxSnNiS3ByaWJrbXo0aGdUYXdjWkR0d1U5YjBDSTEyNzFteWZnUwpmSk5RMkNDNkRHT3RqS2Q1Wjdlbnp5cTRnWGljeDJuamw5QnkxMmJlZzlkTDNoSWJROHE3MVRHL2htQm9TOVVZCmQvV1BWWDIvTjRZYmVYQ3dFZ2l5SFdyUzMrNTc2ZStCYTFHL3dSbkJUaTk4MXVNRERXanJLY0hVQjVodjBrV1QKbVFqQW8rRlNGb2Q3WkFJdVU3T1Y1aDRXbW9iSnBNNk4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNHF4L3pqVEtmRktka3NEVEZCWGZiN05PT0pBeHVKNkpwUkFOZ21KQnVYMDRKbDRUCnAweDBjQVgwM0Y5aVpLSUVtNnY1bmR1TlRxRHRWbGVMTTEvNlZkU3NXUjUzdVMvbE1JRkl2ek5kUTg4UEZReCsKWlgwdWw1S1BEOCtxK2xVbFl2RzJPT0MwMzVwVlJFTzdwZUJpMS9pUEFUQnE2eGlaQ3Q2QVFIUmJpdS9LMTR3UwpBQW5tWG5kaVRleGR5N0ljaVZYK1NKbGpYNjc5NnBqT01La0Y2RTNzZytRYnpDcGRKKzBZL2I1US9aK3N2dFB1CnNMb25xaHpGcU03RUROaXpmSm0vQzBNS0lwWkIvY3h1M1BRRFdUeEVBTUoyZEJHbHE1ai9QM0swOW54N0ZJcGkKZUtqb1hONm1uRkRPcjNkTnFKWXM4d1RSRkdkdEpWOS9EZXJxQndJREFRQUJBb0lCQVFEUWpweHRFdjkzRWVCdgpaVUVReXVzdzhBNDVWdHFZbmkzUkZJc0pldlEwQVhXSFA2bmZsU1hRNkhvWnhSMVhzQWFEWU9FamtCMWN5ZzUxCkVjays5TUQwOWQrNWc2SHVYcFlHWWYyWUJsOTZnMm5DR1NPMnAwNFdJYi9GY1hKRUw5RmRUejQwNlBNaWhQS04KQTdFRWR3Y2E1VlJXYU1FSEhETzczMnFyWXlQVEdRQk9tenpCNHBPMlNXclc0VnJndlBGR3VvdFBoQmhOQ1hmRwpLcUFHNjk0dFpvY2pNMzFCMER5MFNaT3lDOVBwcUN5U1g5d0I4S2xSbjRWY25Ua0l2QXB0S2JRTmRnK1c0c3pPCk1WM2JSc2plM2svRUJ5ZFAvMFNoekF2NkJvRlNXZ2hqcWN3bHlLR3ZPQm1BRjVVUktFUHBDanBGVkNBWUdvZG0KaThvbUhCZ1JBb0dCQVA3M1BlMTNnZnpMN2piKzd5akszRTJidW93ekVMcHRlV2QrcDFCZnVUQjNETzc1REV6Nwo4U3ZtSXpxQ0xYRi9xck01MGpsZXBoUW5iaWx1TlUwbVVlM3BwbDhqWnpEbXdlbm5vRGRnR3I4NmJxV3YxL0Z3CkNKcmxBMkdRRVFjK0RuOXpZT251amtFNzZMQWlPOHAvcE9EaDV1SVdwbnVFVE9Bc1BodHFveTZwQW9HQkFPT1gKNFBmRzBkSG5mZjZVc2Y2ZlJBRTBjdFFrZEgreEk2NUtuVWZzOHZ6ZGRNaUl1TW5KRURtc2NXd2s2c1dZdW85TAphUVovOXgzU1ZTL3BvcGJzcjdYbUU4UlhUWTAxcDZQaXowL2lSNW9lYkxEVVRWN2ZtenZLTS9ZeDlvRGpjWkUyCmZ6dzJhYzd5c2JOUDVmckwvZHhGT0xqMkpVS1NYMWFxRHBkbEx6RXZBb0dCQU9SWS9KNmNKTkFLdUp1S3NSa2cKcmpQWG9EaUdWNW9RQitZNEdaTXpXQUZlN2pkczE2WnZFaTBWM1VFK2E0SzJLMlIvQ1plVi9Eb2FvbC82czBRWQphTklpSzM0VGtBek03cWtWYUhtUDJnU2dTWTZjc1ZNcjJwa1hPSEw5ZXpLNFVuVzFHUHdLU2wrRVR6N0lPakovCkpXUy9EWEE1aHZzaW4xTTZiSmxUWlRpWkFvR0JBSUl4ZGI0SC9Dc3BVOGY0WThJV2RaNkMxRlZLN1dIR2dYVEkKdGlSWkJiOWxKOU0zY3czcmVONmxLTlVHWVU3YnlZMERSSGMxYUxXa2hwcTcrZ2lBS1J2VEcrZXJVVy9BQzhBUwpsU2xMZGs1UnJUZVNteGYwcmlhTHl5SEEveFJJQjhWYitYa0dYNHpGQktaZ3hGeXRxUEVDb0NvZWxMMzZZWk9BCkFJeldreUo5QW9HQUhIZkFMQlJiS0tzMG9uOCtqRzZpaE5sWnliMzlFQlRsLzVCQ0lOWTliSk9aRFU4WUdMZGcKanJUTE5PMEpWc2hoUkU0WENyTzN1eVp4THBYdVpxRnpBYkhnWFlxNDQvb1lFZVZFV0prbU8vTDNabWdyWjhVSQpCQ1dURElpWEM5K3pnWThad01IdXBwcERDMXE3ejRQeVhINzExSnorQnluM1I1a1dPKy9JLzJZPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUt6NEpodUZab0lueFgxSXhQT084am93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05URXpNRFkwT0ZvWERUSTJNRFl3TkRFegpNRFkwT0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE0cXgvempUS2ZGS2Rrc0RURkJYZmI3Tk9PSkF4dUo2SnBSQU5nbUpCdVgwNEpsNFQKcDB4MGNBWDAzRjlpWktJRW02djVuZHVOVHFEdFZsZUxNMS82VmRTc1dSNTN1Uy9sTUlGSXZ6TmRRODhQRlF4KwpaWDB1bDVLUEQ4K3ErbFVsWXZHMk9PQzAzNXBWUkVPN3BlQmkxL2lQQVRCcTZ4aVpDdDZBUUhSYml1L0sxNHdTCkFBbm1YbmRpVGV4ZHk3SWNpVlgrU0psalg2Nzk2cGpPTUtrRjZFM3NnK1FiekNwZEorMFkvYjVRL1orc3Z0UHUKc0xvbnFoekZxTTdFRE5pemZKbS9DME1LSXBaQi9jeHUzUFFEV1R4RUFNSjJkQkdscTVqL1AzSzA5bng3RklwaQplS2pvWE42bW5GRE9yM2ROcUpZczh3VFJGR2R0SlY5L0RlcnFCd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR1hyYkNWb2s4aVg5M3pqMDNZWE13K0xmaG5CTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0ZrYTVhNThFOG82OWRoVVpIUk9RYkNZb2taTklIZUplMys4dW4xZVJWckdTdWlXSEFleWR6CmQ5MGVUdVF3MDdoQ0lTMCtIMTRSUHhSdDFmdllVS0tzWlN6ZWNlWHdyaVFqV1Nnc1RBTE15b2tVT3U1Z3Ixc0kKQ0d6TlNsbzQzQUNjeld0N05Gd2ZyVnhNUVQxSnNiS3ByaWJrbXo0aGdUYXdjWkR0d1U5YjBDSTEyNzFteWZnUwpmSk5RMkNDNkRHT3RqS2Q1Wjdlbnp5cTRnWGljeDJuamw5QnkxMmJlZzlkTDNoSWJROHE3MVRHL2htQm9TOVVZCmQvV1BWWDIvTjRZYmVYQ3dFZ2l5SFdyUzMrNTc2ZStCYTFHL3dSbkJUaTk4MXVNRERXanJLY0hVQjVodjBrV1QKbVFqQW8rRlNGb2Q3WkFJdVU3T1Y1aDRXbW9iSnBNNk4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUlVcFFFZGVuSzlzOG5HMkpSQzIxdmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05URXpNRFkwT0ZvWERUSTJNRFl3TkRFegpNRFkwT0Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXJtcEh0OU9mV3FiRUF3b3ExZWVUWlNSVlJPeWQKN1BoK1FoQnIzMGtycklMeU0yeXd0SGxrajV6N21DWFR6bWJWZC9EZG1yaSs1bUNCeTIrT2JmRVVhbHNKSkd2cAozbkMrOXlocWI5Skl2aXA5OUZRSjlpUmViZy96SmUxN2RBNkVJQzMwODlIeXhZNHdNNkg1WFBBeUNydWFYa1BkCkk5Q1VWZUZlanN3azZLYTlGc01qcnBRQ2dZL3o0aGFHS0huRUttUE9MNkRvbkZaQnlKR1RnYllPWFlKWDJSUXoKRnIrWVlsRjJlUFFIWm9VcC9xcS9Qb3dScnB3aEF6OG9aMExqeWFyZzhKVXZEQUtRbG9YblJhUHJXeHJGT0FUVAp5Q3dudnU5Z0ZPTkxQSnFNYmFFOGFaN2VQQURWTnh2cXhlZUFUQnBEU1VCWWxnZ2o3Rlc4ZytnUDhRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUmw2MndsYUpQSWwvZDg0OU4yRnpNUAppMzRad1RBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBS20rcTlFK1FmK2s0SmpmMERRUXRHRGZ0SVVmYTV5ek5sVGxnV0x3NWh5QWVpRTAKWU1jUE9UL3dvanBEZTZycEZwOEd6aXJNbW5BSEU4NGsyaG9IZTQrcUJqQjJkb25ScGxlTmxySEhlWTFkSE82Sgp4cFJtMTRPOGRrcWkxcVJWMm0vNkpySHZrb0RFN20zNVZSZC9zWklsak1EUGxBcCtMdkRNNDRhNXVweWgwWFdGCmNrdXArZmhrSWFYWTluTFpQR25iN0NpWlZ3OHpzUVBObERIaEU2WjNCOVZCVDNiSmc4b3d3MDB0VU1JRWpIWlkKc2dXMUY5UjBXeG4ydzJ1SVFKTGZ6YTlQR29tbzhDNG95WXk2VThkUmlkYVpWU0pFZy8xOVhwMUVZaEwyUlhRMAoyeGlVK3dzdzZQMTg1d1JOSlVOVkFRVWJvT3NFWHRFT2RDRjNjRDg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcm1wSHQ5T2ZXcWJFQXdvcTFlZVRaU1JWUk95ZDdQaCtRaEJyMzBrcnJJTHlNMnl3CnRIbGtqNXo3bUNYVHptYlZkL0RkbXJpKzVtQ0J5MitPYmZFVWFsc0pKR3ZwM25DKzl5aHFiOUpJdmlwOTlGUUoKOWlSZWJnL3pKZTE3ZEE2RUlDMzA4OUh5eFk0d002SDVYUEF5Q3J1YVhrUGRJOUNVVmVGZWpzd2s2S2E5RnNNagpycFFDZ1kvejRoYUdLSG5FS21QT0w2RG9uRlpCeUpHVGdiWU9YWUpYMlJRekZyK1lZbEYyZVBRSFpvVXAvcXEvClBvd1JycHdoQXo4b1owTGp5YXJnOEpVdkRBS1Fsb1huUmFQcld4ckZPQVRUeUN3bnZ1OWdGT05MUEpxTWJhRTgKYVo3ZVBBRFZOeHZxeGVlQVRCcERTVUJZbGdnajdGVzhnK2dQOFFJREFRQUJBb0lCQURYVi9sOGloaXlRRHk2MQpBN1hVN2kwcEF0enNnRzYxNFJyNVFLTENUaVhJb1lQNEI2OGRUVW42OWJubjZ6SHBrZmljczNwZmppVkVJcXd0CnVmUDdsd2FoSlBoR0N3RXJJZmJlVmNSQVQwM0xoZWRWeldGWnBvQW9raS9oMXRwaTVLdWVJOTdpcmlJR21xQkYKWGRndkYvTXlKeHJ6cloyeGN5ZnpFYUhZSjRoYjlNeUdhUGgwSzlMRkhmVEhGSEVJd09pNU1uSytuRjNxSk51RgpyVXdPcGZtdWFhRlNucjlEQ0ZwUytRNFV3WStSb1BodHBJK1IyQ0dDeFZ3eGszMkZ2M2VpbUZ1NzhNTDRQWG9UCmtYeVVGTU9XVytTTDlpdTZNM0xZV25rTng1aGRPZVltYUhYWEU0NjZmZFFpbXdNaFEycXhldjMrZTVkT09PV0UKQWo2NTZrVUNnWUVBMGdkdXNyS3BQd20ySjBoc0dncVhaZFlwZk43YWtJMVV6c0FPUFdLZVlKQ2pkcWRuUkVIRwphSDY4QkJIbUdObFlmY2p3WnE0SklTTHNEVUJaYnFLWFptZW5wallXTDAxVmpLUlRUcUNwb2FBUHIzMmxOOUtxClVuT0FlTERIV0RDTEt4MGhSQlg0SnJPWmlSMnpVWUNGRVZBS3czbVAyQkkxYUlNeWdWeUJhRXNDZ1lFQTFKZEwKS0t5dWdsVkhIZy85alFmOUM4L05zbDVEcmIxWk55RFVVWlRtUmVLVTlSRGV6a2pWWjBBam1Nam44aDIzK1NPMgpRaXpJdjdyK2FmU2xOc1lwQU5CYUJLWXJFR21vcTBmTDBTeEVJNHF2eGJMSVFmOXpDWUpPNkdLNkFOMWFOTmIwCjJFU3NhQnlsREE1NEZqRmZrUW8vaXNCL1VSL1A4Z1ZRdmVqbE96TUNnWUVBcm9vc3JXYWFEZUFGTjJvUkpDY1AKSURzMDZTZk9IUGpHdExhWVh0MFkzd2owUDBQcEpxayt1Rkl4NzNQc2MxUVVIUndpNUVIWEptbCtINWtOZVVxMwpaUXZaSCtDczJReDhmcytFeDcvdW1IbUs3MzBNRTNNSHhsTmtQV2d6a1k5dDZCdGlMTkhSRW1DSXhKRWhGeWNsCjduaEZLYU5aTGVnYjZFbTNiQmV6RnpjQ2dZRUFseVYyRDFZdXdJVm5DYzJ1cEkyd2NLeHUvOGtiYnpRM2NRV0wKVHZHQmd1QmtyWlF3QlJRdGZicFJWTGhLaUk1dWxkaTVKWFYzeVRGbTN1aE1hcFFhNVBROWZCNjBjWGZkcnVGZAozTHNQT3dISWxOUFdvMjIrV1YxblFydW1xU1MzbE9mYnJzT3NuRno1VDRnZUF4RlpjK0tJYU5zUjZoaW5ITmlBCm5uVXVQWmNDZ1lBanNEOVBDY01KOFR0SVcyaEJYeUpreHZ2TGVjQVFielJCb2M2dTNEbGpRbTRmWHlRWVUyUXIKdlhMUWJxL1o3UnBySkowMlJXdmhjeFlHcXFhaE9zQnJxQTZ6Wm5kS2h3UXFrNkxtVFZHa0RKQWJCc0IxS2E2ZgorS25XdTdLZmlOejJveGpuaityRXpvaW5VZThsU3lDR2ZROFV2VVREbEZxNFUxTDRmdVltM2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUt6NEpodUZab0lueFgxSXhQT084am93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05URXpNRFkwT0ZvWERUSTJNRFl3TkRFegpNRFkwT0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE0cXgvempUS2ZGS2Rrc0RURkJYZmI3Tk9PSkF4dUo2SnBSQU5nbUpCdVgwNEpsNFQKcDB4MGNBWDAzRjlpWktJRW02djVuZHVOVHFEdFZsZUxNMS82VmRTc1dSNTN1Uy9sTUlGSXZ6TmRRODhQRlF4KwpaWDB1bDVLUEQ4K3ErbFVsWXZHMk9PQzAzNXBWUkVPN3BlQmkxL2lQQVRCcTZ4aVpDdDZBUUhSYml1L0sxNHdTCkFBbm1YbmRpVGV4ZHk3SWNpVlgrU0psalg2Nzk2cGpPTUtrRjZFM3NnK1FiekNwZEorMFkvYjVRL1orc3Z0UHUKc0xvbnFoekZxTTdFRE5pemZKbS9DME1LSXBaQi9jeHUzUFFEV1R4RUFNSjJkQkdscTVqL1AzSzA5bng3RklwaQplS2pvWE42bW5GRE9yM2ROcUpZczh3VFJGR2R0SlY5L0RlcnFCd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR1hyYkNWb2s4aVg5M3pqMDNZWE13K0xmaG5CTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0ZrYTVhNThFOG82OWRoVVpIUk9RYkNZb2taTklIZUplMys4dW4xZVJWckdTdWlXSEFleWR6CmQ5MGVUdVF3MDdoQ0lTMCtIMTRSUHhSdDFmdllVS0tzWlN6ZWNlWHdyaVFqV1Nnc1RBTE15b2tVT3U1Z3Ixc0kKQ0d6TlNsbzQzQUNjeld0N05Gd2ZyVnhNUVQxSnNiS3ByaWJrbXo0aGdUYXdjWkR0d1U5YjBDSTEyNzFteWZnUwpmSk5RMkNDNkRHT3RqS2Q1Wjdlbnp5cTRnWGljeDJuamw5QnkxMmJlZzlkTDNoSWJROHE3MVRHL2htQm9TOVVZCmQvV1BWWDIvTjRZYmVYQ3dFZ2l5SFdyUzMrNTc2ZStCYTFHL3dSbkJUaTk4MXVNRERXanJLY0hVQjVodjBrV1QKbVFqQW8rRlNGb2Q3WkFJdVU3T1Y1aDRXbW9iSnBNNk4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lRR1VHZkNlNjdxcHl2azk4VDJ0T1NhekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpBMU1UTXdOalE0V2hjTk1qWXdOakEwTVRNdwpOalE0V2pBdk1TMHdLd1lEVlFRRERDUXFMbWR5WlhseWIyTnJMVzl3Y3k1b2RXSmliR1V0WjNKd1l5NWphV3hwCmRXMHVhVzh3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRENZVmtUcVp4WkFXeEUKVW84b25uU1lXRTFMVFRYc2R2Y3hvNkdGaE1nUUlwZThVOFhhMi84dHhUWDQrUlIxU0krSUUzSXVXZWkrejZXKwpxZFBMMU9ZTk01cWJObWdRRU4rejlZRHNzT3R1QzJKTW8xSmxZUmRjdnhUYmlKcEY3QzdGNnB2V1V4WnEvYll3CkgwNTdleUZzWUgvbUVSZTJyM2U3dUI3Nm5qY0ZGK1hlZy8zVDBuaWhpeFl0ZmpZajNMNGxsYnFPaGw3MzFPMU4KTFFsZk5EWG5EdmZLSHNTci80dnJ3SHgvMWcvUnl3bytVMTY0UWV1aDQvY2ZmQjRuT3FzUUtwOXFpN2RTV1dabQozcVozRjdGd2RsaHliTjJjUWpiM0RFSG5weWcrcURXZHNOYTc2S2M1WlI1aTl2dTlDMmhOQ1U5R0ZzTG5tWjJaCktiQ0c1N3ZwQWdNQkFBR2pnWkl3Z1k4d0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGR1hyYkNWbwprOGlYOTN6ajAzWVhNdytMZmhuQk1DOEdBMVVkRVFRb01DYUNKQ291WjNKbGVYSnZZMnN0YjNCekxtaDFZbUpzClpTMW5jbkJqTG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUZ3Zlg5S2w0T00yN0N4RWIKWjVHYjVycDE4REFUOGcxK3k2VEZqVVBNNGZ2WkZzZzFuMnphc2MrUXYraXdWa3hKdWl2RTkzT3lCWktlYTdxbgpjMlVpRk40RnVTZitRb2k1K0I1VEZTN2syVmp3SmNFdlBHRXZTM1R0M2ovb0RZTEVCY1paV2dPRnN1Z3p2cmxQCmUwMkdOaEExN3gwMmtzYTB2YUpPS3BVazZwR1JSMlBwNnBhYnVZQWh0bkhtYXJ2SmhRZjZVWW5aWFQzd0dMaXgKWVNINERvRlFLcnZyc0pWUXpTQnpvTkdWbndFNzRqS1daQlphWGRFOEN2OGF5SUNJVjdETzBkSEdNbWdEalI3ZAptT0hjdWZvNkdJcU9KQVhxVVVBMkV3eE92MTRWbVpUYVFMeGpxSTJJb3ZRbDQvMEFhM3YwMGxVTFdtT1Uyem93CnlSV2srdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd21GWkU2bWNXUUZzUkZLUEtKNTBtRmhOUzAwMTdIYjNNYU9oaFlUSUVDS1h2RlBGCjJ0di9MY1UxK1BrVWRVaVBpQk55TGxub3ZzK2x2cW5UeTlUbURUT2FtelpvRUJEZnMvV0E3TERyYmd0aVRLTlMKWldFWFhMOFUyNGlhUmV3dXhlcWIxbE1XYXYyMk1COU9lM3NoYkdCLzVoRVh0cTkzdTdnZStwNDNCUmZsM29QOQowOUo0b1lzV0xYNDJJOXkrSlpXNmpvWmU5OVR0VFMwSlh6UTE1dzczeWg3RXEvK0w2OEI4ZjlZUDBjc0tQbE5lCnVFSHJvZVAzSDN3ZUp6cXJFQ3FmYW91M1VsbG1adDZtZHhleGNIWlljbXpkbkVJMjl3eEI1NmNvUHFnMW5iRFcKdStpbk9XVWVZdmI3dlF0b1RRbFBSaGJDNTVtZG1TbXdodWU3NlFJREFRQUJBb0lCQUNHYmVTNDRIZ3NaZnVHVgpNS0ZDUEVCMnkrNWdEQm0xTytuK001Z0ZMQjMyRFN3SGcrYmlNSTEyVW0yWWl4djREckRsUTlHVncvTHhyZU40Ck0yRkRqdjdyVkNqUDBGQXV5cTZ2bkxuUG9QVG16UGtaSjg3VmFaZWtoZk9xKzVscFMzRDJyamp4SnFnYTg1d0EKWGE1bHpKS1RZS21qZk9rZUQyS0tZL2pLMEJKMkVQWkkxSE5nZC9DZGZIOE54aWk0NUNlN1NqNWdmOTFJUVFXeQp2ZmZDOGFjcVduYnloTlFBMDkzRXFiWWZRTisyeXZhQ3VnOHpFSEUxZklsTEtTV0F4YUNsOFNQVG0rSFNHMnl2Ckd3U2F5ZWQxbWVtK3NRUktvMXlMM3QzSTBEVWpNdFpMMlAvZVZrc1I4cjVHelBGeE8yREJueElGUVlLSFRiYnAKRGlRZ1pvRUNnWUVBNzlnU2pHcm5ZZ2JqbmgvalIxTldZM1ZubDM0TEdEYlBTVllnMnVqUEl5TllERHhHc1duSwo1czQrMzF5SmU5a0ZpQUJQeVdXQmEyU1RmV0tQblFYdlc0YUxUZEd5NFo2ZFY5NFJwZ2FtcElvWFhxWmFVMnlnCm4yTU5HTDhMcXVXZHJKL04zeTlucGs1dVZ6d2k0TE4weG5EOWsxaWNjdXJDbU90N3dvWmVZbEVDZ1lFQXozbEoKbUZyMUxoOFZoREluaGdwRlp3aE9GWGlTb2NraFZSM3ZiYVMyVko3TU1EcksvNy9JNFQ1NjNzdzBVRGRvRW1hTgplamFrdzlUTklGSC9vWElMQWlXL3VNTHJydzc4elcwb1g4UGhxaGg0ZVllT29CUTJGSlNVTWx5WjBXVDd6aDFqCllOYU9TTmdwUnZvbWJkdUVmb1pJZzB1ZGJySStEeGJEbmlIVGdoa0NnWUFqWEJtdjlmclM2dTBYM04rbkhsUTQKS1pEeU5yVHdCdlNjZlVRdXdlLzM0RGdVNWJZT1plaHlDcW9lU0FoRTZBUDJ2d1VFVGlDOGNvR0VGTW5UZnBLQgpUZDZ2eEdDNC9xZDMwdGVMUUtQRTBrOEx0ejdOMmMvOGI1LzRyQUhPV2pmYXdWeWFzT1I1RWtzV05WbDNBejRPCkc0NW04TU52OWNobXZ5RHAxdUdIWVFLQmdBS05OVkNBWGQrUlZreG42WUNHZzgvK2xDZERjbG8zQlFmczlGTGUKNGJjc3RNb3JEdkFTUmNBdmFvZHU3MzNGRUt5WlFrZ3NmOTVBc2IwaUJRalJSRDFraFhVYVFKZklrV2RkWGsrLwpNdmxLajhDKzRBd3I4M1pSVlhsQkZrc3krTDNTTXJTd0x0UEtoTWR3c0NSTnZOVnBoVjdJQVVtcE80WW4rNFBvCldwZVJBb0dCQU1yTUJVTmtQSXQwblY3L0ZuUGNyV1RNS3NuZEdJTzN2NHloK2tITkw0WjlIQTJQVklmQi9yQ3YKM0cvWkRtSDNJS3BYTFZHeFZUSHpYOVNGWU9HMGYrN0I4VWJWUC9uR0luRklwZENxdUN0K0l4UEQvMm5CQVJWcQpIV2ZYbmRYQjRnRzVCdE40bEswWFdac0dSQ1pPTHlNMFdyZVRpODJZOVhMam91UDdUR0w0Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: d4e6d069c450e80f3258be04d2f0e9e4bba3e39afe1cd81a5201af0879902879
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.3@sha256:fa7003cbfdf8358cb71786afebc711b26e5e44a2ed99bd4944930bba915b8910
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 157ff778ffd2a3446cb197d94c0a19ddbc5ad72cbbeb4232c1f5873d02aa515e
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.3@sha256:19e4aae5ff72cd9fbcb7d2d16a1570533320a478acc015fc91a4d41a177cadf6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=false --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
