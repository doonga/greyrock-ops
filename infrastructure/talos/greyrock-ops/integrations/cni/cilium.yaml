# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: greyrock-ops
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "true"
  enable-bpf-clock-probe: "true"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution http icmp
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  mesh-auth-enabled: "true"
  mesh-auth-expired-gc-interval: 15m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: greyrock-ops\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTzloMmMybjlsT3hHbmlYbkZuaGF1ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpJd01UUXdOalV4V2hjTk1qWXdOakU1TVRRdwpOalV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2xmS0pBTWxwaVdyV1VRN2RQamxIQ0VaU3I4akJDTk9EMFVZengraUxWa01XeUZFMEsKQ2tVYWtncTBrb2JZZlZTMzE5TjdMUXdENG5OZVMwYlI5bmZhcWMzbFhESFZiRHFjVVNtOHVjWFlwT1owM2RsSAp2RFBqd2ZHTTFxdW9OUHMwZGVjZHlrejZGMGMwQ1RPcXpLYmVqQmdCUjlNVml4eklPdGltQ3lNRUVwVFhVT2tLCkxRbkoycUJ3WHVNcWpxUWhad0ZuWG42RFU1Z0Q1RkVWbU1MSHlObUkyNHhrNWxWWTc2MVVxSUFnemdlSnFYNlQKQ2FiTzNDWFZNRHVKZU5uL0czYVdIZmR4VnIvNm16Q1FSWnRxOEZyWEt2TEJHd3pQVkdWUXJCMFZhb1dXYTJPMQpoYXhENUcrdXlxV1NMYkpEQmFQbGRGQVVDQWpVN1htL0xDVzlBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU3a2l0NDR4NHdVM0k4ZmY2MGZyK2szN1ZuWXd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFHUUVSaGxvMWlDYldZWjdQSmVZVXQ5Wlp3OXNHZGVhUlNIRlJpSVNyeDFhZllrdGlCN3gvQjVDCi9mWmVnRE43TElYU2FsalYyS2xTMXA4V2pDZ2VMdTlPMFdVZG5aZm5XTmdnNm11ZHNJVG0wWmhEdmUxUTZUV3kKSGZXbjgydGt3N01zYzZ4djZsVFBHU2YyRXVLS05FVkFGeWEzWW45UUpzWWNhS1FGZ2RrcFJ4TW5YZzg0RlQ2NwpuOXlMd3NoUjd2MTFYZEk4UXI2VTE0QU5KZkoyWWdsQSs2RWl0c2NWYWhFN3pGOG95QjJwdFNraVZYLzZvcFFQClMvL3dxbU5oTXIwTi9yMS9ucStyZEVRd3cyOXYzeWRJY1FaaWx3N25wOGtOQXRIZ1JBR1V3dUNxcHEvekE1ZksKTkxYeTllNzBaZTgyT3lHT29BcUlhQllhWkVDVGUrST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcFh5aVFESmFZbHExbEVPM1Q0NVJ3aEdVcS9Jd1FqVGc5RkdNOGZvaTFaREZzaFJOCkNncEZHcElLdEpLRzJIMVV0OWZUZXkwTUErSnpYa3RHMGZaMzJxbk41Vnd4MVd3Nm5GRXB2TG5GMktUbWROM1oKUjd3ejQ4SHhqTmFycURUN05IWG5IY3BNK2hkSE5Ba3pxc3ltM293WUFVZlRGWXNjeURyWXBnc2pCQktVMTFEcApDaTBKeWRxZ2NGN2pLbzZrSVdjQloxNStnMU9ZQStSUkZaakN4OGpaaU51TVpPWlZXTyt0VktpQUlNNEhpYWwrCmt3bW16dHdsMVRBN2lYaloveHQybGgzM2NWYS8rcHN3a0VXYmF2QmExeXJ5d1JzTXoxUmxVS3dkRldxRmxtdGoKdFlXc1ErUnZyc3Fsa2kyeVF3V2o1WFJRRkFnSTFPMTV2eXdsdlFJREFRQUJBb0lCQUdkdGZmcWhmZHY2MVlIVQowTHpvTmpFVXk5YXJoMzNaanI4a09QTURZc0lYdVhlVE9KTU4yQ0xESSsyM3BvK254VXNobVF0akhCOVJhTW1HClFyejNUZkZjTDFNcVMvc1hxWW9KTUF6RUR1TllMTERkOXU3ZXNZK25wMUJlMnVwR01ycVc5ZHVvbEhPNkdNWnMKK2QzR0NvVU5DZlBDOENxR3gzWmRVUXAxNjJ5ZkxzRXBRVlBzeHBRUWVpaWxyT1RvM1BvanFZVWdDNFFicmxYMQpPWU1OclhUNk1UU1U4VDQ3UEtjUXhjTFNpUXpCV3FhL29scVBGYit4UWF3NXBLM0VHUndkR0J5d1B6T1hmVnY0CkErZDJXaDg5WUpRWG5NckdjYXZmODcyLzU0Y3BBV1YvS3FaUDJyd25EblpyTTNUVXhJVk1abzhNem5oZ3AyeFIKNGtSckFBRUNnWUVBMlJuc3JBWkxPM0RZaDFnNmRrbEtQeXViYjhiYVowaHhrM2M3dTFrVDMzdFVNaDlWSFA4UQozOVRFTXFqWm1WdjNSalQwNzAyYytQai9POVVsNjl5WFRLcTROV2V3MXhZQ2RFMmpxWjRtdFNYNUpIbVZJbTdhCkVhNzRoZjZWYnVvaGpYOGJZaCtaVVlnWm1GY1NXNHFFQXljOFVha0haUXE5ZmljbGYvdXlONlVDZ1lFQXd5TTkKMHFIK2NMNFFhTHkrU21udVlmRDl2dmpiTDgzV2dLT2k0Mko1WW50b2FsSGkvNjJPU29COFppWU9iVitTNks0awpHazYzTFZmUnRKMnJaOVE1NkxweTdaN0dKdTdKbHZRN3VsbGJTaUpyTnFnSXRVNXZBTS9aUmxYRURCLzdVTXpvCnRJMG9XUTc3TE1JbzA5UnBVMWg3REJDQklqUXlWOHc1RlovTEdqa0NnWUJBSi9nWDBmaFRoWUtIWkp4S0xsaGgKbUpwamlza3A4bStWMjR0c1R1T2ZqRXVTVUU0UHRwU2ZBTHBHR2ozTG96RE1yNE9lWURvK0hSOFg2R0kvZEQzRgo2MEZxanN6a2t0MkF6eHpKV0RJcUlDR2pGTWJzbVFPYWJER0hMM2VyZ2tjT0VIemdIMlJvZ3FiRnJSMkFyY3RiClB6SUZFOFZhcDdUZDNlV29ENUpYL1FLQmdCcEtuMFBINjc1SS9YRC9MU3hkaFc3UXgzOTVqQjZ1dngzcDdrSncKdkNZV3RvVE1yNmIvUFZLd2FSSmlRa05lUXk3eWQ0N0wyRVpWdEwxL0dOOE9heGIrT0Fub0FJNnlVWnJ6SVRFRQpaUlpoK013T2E4M3gyV2JrbWtPdHZwSmJwTUxJT1BwS29vc05SNjVLSXJJWHhuRWlWTUhWWDNDNlU2WWNyL3hICjRWZVJBb0dCQU0vMVQ0Kys1d2tzUXE3dE5Fdjd0U2MwdVZtcHFQWGwzVm15ZjFjMGl6b0cwblNkcSt3Y2JpRC8KTllnKzlNYWdCR0Z5UGY3WExINVAvSTlpc05heDdzSzZVUWhxUE9XZ2JXVEFBaVlEb2NkVURzcXlTcVBkVS9CbgpSR29NSVJhcEdkQlVIdXpkYlJFUVFDNkVSSjEzLzJUZFFXU2ZiLy8yUE5FOXdJQUZoWXNjCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTzloMmMybjlsT3hHbmlYbkZuaGF1ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpJd01UUXdOalV4V2hjTk1qWXdOakU1TVRRdwpOalV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2xmS0pBTWxwaVdyV1VRN2RQamxIQ0VaU3I4akJDTk9EMFVZengraUxWa01XeUZFMEsKQ2tVYWtncTBrb2JZZlZTMzE5TjdMUXdENG5OZVMwYlI5bmZhcWMzbFhESFZiRHFjVVNtOHVjWFlwT1owM2RsSAp2RFBqd2ZHTTFxdW9OUHMwZGVjZHlrejZGMGMwQ1RPcXpLYmVqQmdCUjlNVml4eklPdGltQ3lNRUVwVFhVT2tLCkxRbkoycUJ3WHVNcWpxUWhad0ZuWG42RFU1Z0Q1RkVWbU1MSHlObUkyNHhrNWxWWTc2MVVxSUFnemdlSnFYNlQKQ2FiTzNDWFZNRHVKZU5uL0czYVdIZmR4VnIvNm16Q1FSWnRxOEZyWEt2TEJHd3pQVkdWUXJCMFZhb1dXYTJPMQpoYXhENUcrdXlxV1NMYkpEQmFQbGRGQVVDQWpVN1htL0xDVzlBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU3a2l0NDR4NHdVM0k4ZmY2MGZyK2szN1ZuWXd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFHUUVSaGxvMWlDYldZWjdQSmVZVXQ5Wlp3OXNHZGVhUlNIRlJpSVNyeDFhZllrdGlCN3gvQjVDCi9mWmVnRE43TElYU2FsalYyS2xTMXA4V2pDZ2VMdTlPMFdVZG5aZm5XTmdnNm11ZHNJVG0wWmhEdmUxUTZUV3kKSGZXbjgydGt3N01zYzZ4djZsVFBHU2YyRXVLS05FVkFGeWEzWW45UUpzWWNhS1FGZ2RrcFJ4TW5YZzg0RlQ2NwpuOXlMd3NoUjd2MTFYZEk4UXI2VTE0QU5KZkoyWWdsQSs2RWl0c2NWYWhFN3pGOG95QjJwdFNraVZYLzZvcFFQClMvL3dxbU5oTXIwTi9yMS9ucStyZEVRd3cyOXYzeWRJY1FaaWx3N25wOGtOQXRIZ1JBR1V3dUNxcHEvekE1ZksKTkxYeTllNzBaZTgyT3lHT29BcUlhQllhWkVDVGUrST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU9iZFIzT1IwbysvMWcwdG1XNUNQell3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZeU1ERTBNRFkxTVZvWERUSTJNRFl4T1RFMApNRFkxTVZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXpYOWtMaFQvcWk0Y0x6UWtFY0w3YzFmQVJlNWMKQzk3QzN5RWp4b1FnWmJxaFVnYjk5OWlLWW1JdWNnNk5tNGdNTzdxeFRWRjFjcmxxTXhiaWVRQkl3WTNvR2ppSwoxWC95UmxFTXg2MkNCb3l4YnVPL0hGSHo5aTZIYmRtQkRRa0NuU3FCZkJTWUhDaHRuUEZFbVppNjNuTjVBbm5YCk1XZmhNSnNSTWhNMU9DeHNkb3VxRmdjQkFodVlGa29mSXhJWFdyV3pmM29maHJ3RVlxdUtEZUZhOFlBb1BrK0IKY1JOTW04cFUvWG1ZS2djTUZHVFFsL2ZVa3NuWVZRdk1VUWxBVE02dGtOdC9wK3BCNmdObm9pdS9XUnkrTTIvSAppL3hybmV6NzVHK0dhcnlic2hrUmdKSnMvN1d1elRnT3BLbFJRR2dXRTArNnNkYnRRazNjWTFZM0l3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVHVTSzNqakhqQlRjang5L3JSK3Y2VApmdFdkakRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRnRZZEF0NGx6bGtNbEYreGtJTkFLeGkwYXhObisxTTJNL3I0YUtzQ1NYVk5zbU0KckhPYTBsSk04SmFjVjhIdEt5V3JiYVQyVS9sWGg3SU9RK3BhNkxGZWIveEZlbVVVbjVoQURFclBWSjhzWVVlcApkdjFRLzl6VTlSaWt0MEgrSXQ5eU00ODZuWFVkc0J5K2lsL1VzK3ErdXRpbExBaG5kZG1lZ0RWZGRmWGtkT2dBCmdKQWhjLzVWUE1qOXFkMEZiWG1yZDI1QnNlZmtTemMwTzlnS1gzQVZtN3gxY3pPVEJaVEhUWUdOcjIxM0ZuRUkKSml6d2F5MEdLTWdVMFJINXVyNWpUVHFCWllTV2tPaS9rZGtZVjJBb2ZhSnlCVmIrajZENDQ3MmJnNzNBVFR2TQpSZ2Z0V0NTOXlnZHNNdzgzNEdUdkFqOWdnR082dS9EejgydC9zR1U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBelg5a0xoVC9xaTRjTHpRa0VjTDdjMWZBUmU1Y0M5N0MzeUVqeG9RZ1picWhVZ2I5Cjk5aUtZbUl1Y2c2Tm00Z01PN3F4VFZGMWNybHFNeGJpZVFCSXdZM29HamlLMVgveVJsRU14NjJDQm95eGJ1Ty8KSEZIejlpNkhiZG1CRFFrQ25TcUJmQlNZSENodG5QRkVtWmk2M25ONUFublhNV2ZoTUpzUk1oTTFPQ3hzZG91cQpGZ2NCQWh1WUZrb2ZJeElYV3JXemYzb2ZocndFWXF1S0RlRmE4WUFvUGsrQmNSTk1tOHBVL1htWUtnY01GR1RRCmwvZlVrc25ZVlF2TVVRbEFUTTZ0a050L3ArcEI2Z05ub2l1L1dSeStNMi9IaS94cm5lejc1RytHYXJ5YnNoa1IKZ0pKcy83V3V6VGdPcEtsUlFHZ1dFMCs2c2RidFFrM2NZMVkzSXdJREFRQUJBb0lCQURQNEtaKzEwOHA0Q3N5dApSUW53NDZLUjZLQkczYVJxMjZHT1FmdnNZajBYNjhCUTRGMlR0N3VWMU9VblpReVdaWEdkajBWY2VuVmZDc3FNCjJRMTgwdW1RTjhpWjBCS2FYdTBGaGxQaFAyYmtvZUxIV2dlUmVqOGlHVUhncGRCa0hQTWVVc3pNY0lOK2Zlb1kKNGg1dUQ2UStVN1lhbGg5NmcrckU3SjViV1RReEk5RUVYQzZQYlp1UGw4enBVZlNDd09DOUFVd0M5clAwTG53bgppZ1JWbllTVVd0Wkd6WWtsSjNNdnkyd21wUHZOcUFCRGRmNHllSjg2TWFNYllZOVRYQmVDUyt3cVYxWG5NbW1BCkdwWStpTTd0TE5ZcDYrTmdQREtHRkpEK0htaUFPVjhOcVptTlBpZjNCMmt1MkVpL1NtU2x4dFJnaGpiODcwSkQKOHY1VWplRUNnWUVBN1VTNzB3NldMUW5JejNMMDl1WmptdFFnMTl3NlJLZHgyTVFqaFZ1TUIvTmx5bjhYd1lDUQpSSGQzSEViTUJyVXNEY0prbW9ncWdjRVYvaElaSlQ2eEFUSDRSQm03bGswWE1OT3AxOFBZbmY4aS9TZFJHanlLCkxrQlh0ZFRIN3FlNGVheG9HQ1h2WXZ6R1MwTk5Mdlg3WTVBelFBM3hYL1dWZCtKVG9IVmtnV2tDZ1lFQTNiaVAKR211d3hYZHNwbWJ6N1d2M1J0L2tML3pGREpnQ1AyS0NIWWtaTmd0RHpSSXkxME41K0tqc2x2Y1dGcCs1SzRRbApmbHFOak42U1lpcEh6NWM2RXdKRnlSbGROV0FwR0czRCs1VW4zWlZScFJIU3RwNmVzeFVUYXpVVnV5OWY2ZzY2CkErWjRpVndLSHEyQU5uYXQ0VVZSZXhMQk11eGw4QmJlY1dZVzFxc0NnWUVBdnMzNmVhVU9VZE8vZ0V4REFOYVAKblRBZjVWZCtLRDI3eVFVYVI2RXlRQ2FWWWozSWZkMEVwM3FtOTc5YlRiMmVXc1pNSHhXSGtXY1VaNGhvWGxKSApCOTRHZDhWMTNFM01hNENiNGg3bDhWRCs4elFOL1pwWHlSQUhPUHVQZUxXNkhXYnZJeFJHcVlUN2RnVCthZGg0CnZEMTNhWGlNOW8xSkVPcWFNN3lVQVprQ2dZQno3VDJWV04weVFnRGkrRTF0dzlla2pRZW9ONGRuMEVyTWpWcnUKeW5JT0dkRzNkVjV6d3VvUkkzR2dkVXh0UTlIemVNS0owQnJXbnNEMjVwaHBaKzZMWmRMTEZLSHhlSGZFT0JBUwppS2d4YVJNcE5hcHdwWHJnczVKVnFZblZOeTMxR1FJVmEvbDJDRk9hT3FrZzBPaVZNa01xRUdKSGwrYXNvNmhtCnJqUWV4UUtCZ1FEa21McDVOVHdLVWMyR1BvYWJhVk93cm5VQURKaDRGQjZKcjRQcVdxYmxvNlhVUHFqMndVVlMKbkRTTDF0OXk5cHNXczJJQi9JNHMrQWpHYUFaWndJcE1mY2hpSW1hUEF3VTBpL1Q4NHJQODVoSlh5SksyZXZIbgpIUldIUTIwUHdOU0NDOUlUQ3ZBcVhmVWgwamphenN3MlgvSWNtcERYZnh5YkJNTndxL2NkcWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTzloMmMybjlsT3hHbmlYbkZuaGF1ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpJd01UUXdOalV4V2hjTk1qWXdOakU1TVRRdwpOalV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2xmS0pBTWxwaVdyV1VRN2RQamxIQ0VaU3I4akJDTk9EMFVZengraUxWa01XeUZFMEsKQ2tVYWtncTBrb2JZZlZTMzE5TjdMUXdENG5OZVMwYlI5bmZhcWMzbFhESFZiRHFjVVNtOHVjWFlwT1owM2RsSAp2RFBqd2ZHTTFxdW9OUHMwZGVjZHlrejZGMGMwQ1RPcXpLYmVqQmdCUjlNVml4eklPdGltQ3lNRUVwVFhVT2tLCkxRbkoycUJ3WHVNcWpxUWhad0ZuWG42RFU1Z0Q1RkVWbU1MSHlObUkyNHhrNWxWWTc2MVVxSUFnemdlSnFYNlQKQ2FiTzNDWFZNRHVKZU5uL0czYVdIZmR4VnIvNm16Q1FSWnRxOEZyWEt2TEJHd3pQVkdWUXJCMFZhb1dXYTJPMQpoYXhENUcrdXlxV1NMYkpEQmFQbGRGQVVDQWpVN1htL0xDVzlBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU3a2l0NDR4NHdVM0k4ZmY2MGZyK2szN1ZuWXd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFHUUVSaGxvMWlDYldZWjdQSmVZVXQ5Wlp3OXNHZGVhUlNIRlJpSVNyeDFhZllrdGlCN3gvQjVDCi9mWmVnRE43TElYU2FsalYyS2xTMXA4V2pDZ2VMdTlPMFdVZG5aZm5XTmdnNm11ZHNJVG0wWmhEdmUxUTZUV3kKSGZXbjgydGt3N01zYzZ4djZsVFBHU2YyRXVLS05FVkFGeWEzWW45UUpzWWNhS1FGZ2RrcFJ4TW5YZzg0RlQ2NwpuOXlMd3NoUjd2MTFYZEk4UXI2VTE0QU5KZkoyWWdsQSs2RWl0c2NWYWhFN3pGOG95QjJwdFNraVZYLzZvcFFQClMvL3dxbU5oTXIwTi9yMS9ucStyZEVRd3cyOXYzeWRJY1FaaWx3N25wOGtOQXRIZ1JBR1V3dUNxcHEvekE1ZksKTkxYeTllNzBaZTgyT3lHT29BcUlhQllhWkVDVGUrST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lRWkNxalNSWXZuSDdveUptWnJYaUY5akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpJd01UUXdOalV4V2hjTk1qWXdOakU1TVRRdwpOalV4V2pBdk1TMHdLd1lEVlFRRERDUXFMbWR5WlhseWIyTnJMVzl3Y3k1b2RXSmliR1V0WjNKd1l5NWphV3hwCmRXMHVhVzh3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRGVlZHFSemhFRTRnZG0KbmtNV25CRTY5QWYrQ2RVWnI3TzFEOWpUOVowQ0huMU9TczNtcUgwRVlQVlNhY1JPQ3NqZnBwdWtnaW9WNkFwWQpkU3ZuUlJRblVYY3pPaXo1TVVPOXB6Z2Zka0xQdlJDaEhud25pY1BhZVZsc1JkWHJSYmFlU1dJbWV1ZUQ0K3hhClI3bmQ5SDRZZlZVR3JwTERoUHArRXZJS3Zlbmo2Q1NMTzZQSkRaL2pzclcyeS92Y05uM25XSFBHMEtBdHpzREgKRzhJQXh0RDdWT29IRXVUUVZPaldtK0JTM2QrRFN3cmRjUFRBdHAvZVQ2VkJrZzVVL0xXV0pHK0NrYnVzM2tlNApsanRTMldpTVFTMmM0cXo5UXBqdTJMRmhWYzR1b0lNU0Vjd0dJWDNnMHk5VjE4dG5tWm4rdUFYYld1WlAxdUhuClgreGVKVUpUQWdNQkFBR2pnWkl3Z1k4d0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGTzVJcmVPTQplTUZOeVBIMyt0SDYvcE4rMVoyTU1DOEdBMVVkRVFRb01DYUNKQ291WjNKbGVYSnZZMnN0YjNCekxtaDFZbUpzClpTMW5jbkJqTG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUQrZ2tyQ3FIMHllZkNGQXkKQS9yTnVaVU5pQUVEcHRwVEhlQ002ZkJ6b2RzdmxiMDNaRFpRZVloTW5FblBqbHJSeTNkeDlRQnMzcWM0RXU2cQo2SENDaXBVZ0dpNU1GNDhUeHRSQVNBWUJhR3dXR0dYMmNGbGxpVlFpK01nOUhvREh1Vk5vemJrNVlMSDlPZjVLCklzQ20vQmZvcnQwU1dTYXE5UlZkbHFHNnBrR3gwRTRseGNjYTZBK29yNlF6UVB3azMrbHZOZ0dGWFJXenJIN3IKTUd3QWtYS0FGVVE5RTdobHBoVUtrMldQbDBYT1BTdklYMkdURXVKVHdmQU1pK09WcGsxRGpNUWpEYVp3aHh6bQpkYkxuTE5kSGttSjZLME54V3FJNE1hY0FzT0NYZFhrVGpIaWhOK0E1VlZHek9zRlRCM0QzWWdaK2FPV0RmVVc1CmUxNmxtdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBM25uYWtjNFJCT0lIWnA1REZwd1JPdlFIL2duVkdhK3p0US9ZMC9XZEFoNTlUa3JOCjVxaDlCR0QxVW1uRVRnckkzNmFicElJcUZlZ0tXSFVyNTBVVUoxRjNNem9zK1RGRHZhYzRIM1pDejcwUW9SNTgKSjRuRDJubFpiRVhWNjBXMm5rbGlKbnJuZytQc1drZTUzZlIrR0gxVkJxNlN3NFQ2ZmhMeUNyM3A0K2draXp1agp5UTJmNDdLMXRzdjczRFo5NTFoenh0Q2dMYzdBeHh2Q0FNYlErMVRxQnhMazBGVG8xcHZnVXQzZmcwc0szWEQwCndMYWYzaytsUVpJT1ZQeTFsaVJ2Z3BHN3JONUh1Slk3VXRsb2pFRXRuT0tzL1VLWTd0aXhZVlhPTHFDREVoSE0KQmlGOTROTXZWZGZMWjVtWi9yZ0YyMXJtVDliaDUxL3NYaVZDVXdJREFRQUJBb0lCQUVBY2tYWVBFaXg4RG5IdQpEWnRJWWxiQTJFVEhCSmdnWUFNL2k5YVpJeVBuTVdrTWVZV003R29FbnUyZStTa2NSb0xjK21GUCtWelN2NWg2Ck82cXI1NERsSXhxcUd5ZThvSzdZcjMyeGtOTll3cUFMcnUrZDdjalp5NEUrSnNWa0U1cE52M0VqWGZCT0VHQjcKNXY0bFpPa2R4UkRsNGZsaUt1V0dCQ1pBVUZTU21kZDFOREtMT0tXclZSUy9zRk5SRWZNL0lkVk9RaDZwK0YvaAp1TWl1S21kRGVINVdQZm4xcWJsZytCRmxTK0VRSzZZcURidU5yYjVPcWZKUGxPb3p0SDJENVdPc2ZZbWxUUGdWCkhhcGpnNS9XNWJRV0I4NXNRTjR1dVVyRGhhdHZMWkRrcWVLZjJKa3JEVmpuSitvN0pkUGVBdDZ4YTN0WENZa2QKaUsvWG1uRUNnWUVBOFJtOURxT1BaUUFwd0p0SEU0WlBpRGFHZWF0UGZGTUYrNGIrVnJBeTZvTHpFZFpTZFUzaQovZFBXSDZrUnBBeXdvL2djUy9TbDkrL0pONFdUZzRSM3lyMTZXYTJrSGd2TVM3UFhCdS9ycVpFV3lUVUREUzJrCk1abFFLWG5YMWRhSytpUTlaQWJtZmRYeHRiSXFrRGtKRVVTTWVMTW1YTlRtUlpoY0t2NjdKbDhDZ1lFQTdEbDQKa2FBbGtHaXNNTGlxWXR2NEx6MnlSVTRDV3ErSzVDOWNEN3RNQzBRcmhQQXFaNGxWK011ejNoS2RIL2dHbHFITgp1L0V2eWE4VkJpSTdqT0M0L0lGclNVUHJFLzFlV0ZZb08zZ0lDdVhnalBua1NlU254Q2NuVWttZWpPdlNnVjFHCm95a2xibDNYbWFFNjNyZkgrU3AyU0tQMVpUbE1xaFFYRDNWQzRJMENnWUVBNk5kdW1nQ2pyMnNrNTNvT2ZuQ3IKeG1UQ0lpYXJzT21OVVlqaGdGN1NEV0ZCMWV3aDNsL0Y1RlQ4NmI2aDVzaktudEF5bzdnMXdPaTJid1IxbmdJRQpucXUyeVh6RWpxL2VNUTRSa0FXTWxrb2tzMVNiQ2RNV1MwQkJCbzFCUUtiZHVRM2VyQWR0K2dEd1dnVWl6ZjRICkg4SVAxMUZNcjBKODBLR0FBWlhZc0FrQ2dZRUFzaEVZZTkzV3N5YlVOZDNlUXF0Q1NJb2ZhZkxGLzRvNERvNU0KdldjWWlaMlhtSnhadXJaaDRpdmJxRmtyckQrUTU5ZU1lRkgxRGZrMnhlcmtMT3Z4UmhaZ3cxZTVTdFpCV2lHSQpMbHZxNUJ3b3l0eE1aQTlERDYvY0NrR0lqUDN2THFrYmFEN0tBb29telo0bC9HRlpFdEFaWGVTS1JRV09idDY2CkMyTC9TTGtDZ1lFQWc4dmp2akkxRGVOQXpLamdaaXJwbjVFZStqa0JGdjh6Mkx3UlpkSVB2RUFIUy9NMDkwNGkKSFNoTGNrR044cG1JZTViZHN0VjBqWUZHbmlQQkUrQmF4WkNIZTFPeTByY1VoWUp0UUlzb1FFY0dLdTVBYnFpMwpucXVRZnpFa0RSMnYvZ2FnWnhrQ1BFZm83STMzT2NBb2Y1NnhFWUozeFpJYVRzWm1xbDYxU0dFPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: fa0a3d0b4775c7933e5b9026d1cfaa20008f011a5b1593c3933ffcd8a303236b
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: ac9a6ac457a1729c5faaa0a40eabcb777b0e164ffce4d0eaffa61fa186cd8bc5
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: fa0a3d0b4775c7933e5b9026d1cfaa20008f011a5b1593c3933ffcd8a303236b
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.0-snapshot.4
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
