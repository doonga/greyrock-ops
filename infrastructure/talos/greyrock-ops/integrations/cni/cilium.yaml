# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: greyrock-ops
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "true"
  enable-bpf-clock-probe: "true"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution http icmp
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: greyrock-ops\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9vVmtIdlRIL2gxZ1N0WFNxUC9naEF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05URXpOVEl5TWxvWERUSTJNRFl3TkRFegpOVEl5TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyZW5mT29KMWhCYjh4QXBLckRBa1dGTzlyWTBLdjE4eFRPRml6TVE3MHJWNjFrdjUKdTFZNXB3S0QyMWsxYWRGeDNUZm83cWpUNzRvbEJYbW1KY1ZUNDAwelFhSjE1SVhSVFF6UjYwMWxubmpzUzgzdAp1MFl3ZklmUXZRa3kzcU9rTmpiZDBPakwvLzBHZDlsb0l6Vi9hRmJYS0NBTUNEcE9GZWVTNUZUV2NrMnliN0V0CnY1L3VWaWhvQUJuVTNGWSt2NTRDaGFvSlJUSUFETTJUOVNQWVJxeW1iaEFDNklDVjY4cloyMVVDeDJDYXZJcXIKazFSMnk3MkdwVnhXVFovVC9Zamp2VFI1YlRWcC90bURiYkRQWGRKTHNnZ2szOXh5c0JXWkY4N3F1QUVkYUo5RApjRTRaOGNwYVloRyt4YXRJSUZGMzFjWEQrRlZJMnRyWk82cUQ3d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSWhlb2V5c1hpMmlnQ05FUzFvTHVBYUhLdHo0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQjE0VDUzVnUwZEtaWTVFbDRpbm9NNVE1bEZNUHh1RXpYa3FkSlN3RitwTUlqWGR6ajIxc0VqCm11MXpnYVg3bXNIdXdDTHlaL21BTW1XRUNWTUFZNTdaSitaN2ZuSHYyRmdYSnArSEJyNVpBdVRLQXBRREhQRkMKWWtoOCtaMzhZTzJ4VFQ3amJqT0R4cVV1U1JhSkRST1dHbGtFSzFLWWF0SVNWOXFIbnBWNUpDNVN0c3RINGJPTwovRW1jcHRuSVQ4MktEd0JIMEUzM01NUXpITzFqT2YyeW1QWVFKb0tlYnNMTVd1aEJwZHAzUFBtVXFHTUV1dkRKCmxwcXFGWEpNVS81VENMNG9sM2JtaVh0VnNaT3Zmd0MyR0xWQThmSFE5SnpmeC9rdWs2WGRyYklQaWtKUVdqQUcKaFplRUVKQ2xNSkIwa0VWSkNlOTQ3dkR1ZDFLcEZBR3gKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcmVuZk9vSjFoQmI4eEFwS3JEQWtXRk85clkwS3YxOHhUT0Zpek1RNzByVjYxa3Y1CnUxWTVwd0tEMjFrMWFkRngzVGZvN3FqVDc0b2xCWG1tSmNWVDQwMHpRYUoxNUlYUlRRelI2MDFsbm5qc1M4M3QKdTBZd2ZJZlF2UWt5M3FPa05qYmQwT2pMLy8wR2Q5bG9JelYvYUZiWEtDQU1DRHBPRmVlUzVGVFdjazJ5YjdFdAp2NS91Vmlob0FCblUzRlkrdjU0Q2hhb0pSVElBRE0yVDlTUFlScXltYmhBQzZJQ1Y2OHJaMjFVQ3gyQ2F2SXFyCmsxUjJ5NzJHcFZ4V1RaL1QvWWpqdlRSNWJUVnAvdG1EYmJEUFhkSkxzZ2drMzl4eXNCV1pGODdxdUFFZGFKOUQKY0U0WjhjcGFZaEcreGF0SUlGRjMxY1hEK0ZWSTJ0clpPNnFEN3dJREFRQUJBb0lCQUZsVlNOVkZMaGdydHFyOApubDdVVzljRExPdDVCNHhGMlkwa09SdjFzTVVMYzQyZ2VTZEJvMXVtYnhTOVBqS2M0MkErMStlLzBSMjZXRW4zCnN1Q3orK05HUkkzeVpaeDlJSVh6aitET1lPU0dPTnEzYk9aRnA2SlFJV2o0MEtpTVprMXk0WDN1RnR2bm5PcnoKUWdyVDhCNG9mVnlmR1k4Z1kvdmNlQmZSZkZZNXVoV1gzdnVKUTU3R21RTElqc2xiMXU2Q0l0UVplT01rOW5wMwplQ2VEVmFJQjZuM1hEOGJiOEFBMkx1blpxTEptcFNld01nMXFHcXBtR1NyM3gycjJ3Q3lONDNKZmNGV0U5OEptCnYvaHlENG83RjdBQmNxSUE4N1QxTVRZelhtK2NkcmVIQmZha0l6K2VTOGRlZUVxMjY5WUJSK3dvNGtaaWZOeVkKa3dWc3VBRUNnWUVBMkt2NklUMGpYdXhra2M0am1SVklIVFRpcnFwdFlUaWRUbGRwYWovZWgwNHNSYXhweXRPOAoxd3NVdVZhNmdkMURUcS9KSDd4MjZFSDh6VklRNjJsSFJuNlNXVTFERjl2NHV2b1l3akhpemdVUGhMTzR3cW93CmRQU09BQ0FLV1pNWENvYXRlUDZkQnhra2l3S244YlFTaGp2bVh3T3Exc0tuQlY1MXZ6SHlITmtDZ1lFQXpYc1AKdHJSUFRlUlZhNG5NUG8rOEh3ZWU5N1BYei92T2FtbWF4aS96a3VCNWVCNllmUGErZGlXSUJRVUdhSHo2a0JQawo0UWRTRHQ1dWNpTjRTL2RYUUZTRGowMWRwa1plS2hoNXJnUHcvSUlNZng4MnlSNW5zR3pjZW5hRUtxeEE1bkVNCmsvUE9GQWpSaHBHMVBhc0lTQjczQ1dOQlEvZlZxVFlsOU5JOVNnY0NnWUI4ODJDQi9xSUJRYzRWajQxVDRNUC8KbzluOTVHYkRwRVNEUTBHVmRsTzhMOGEwUDJPYkJsUm1wd3RDZnRON3hML21CdFd6cVpuaEF2em80eVRDdmFuTwo2M3MyYUtvQ2ZtYUlYV1lkeDJzR2FFQzB4SGdPT3R0Szl5VlV5U1Z1MXJaNDZZWHN1dGlQbVY1TGxES0ozdEMzCi9KOHp1QWV6WmZtdnpQT1dXUlZJc1FLQmdBMnRKU3laNzdWVmYwSDdGL2NLQmhGaXBuZ0NKbGtYZjNPaHQ4VjkKSjQ4ZEZiaWpBSzlBbFFpMEVzdVN2QXgwVlJFRjRmUUFVcnZlbmlkR3FSa1ZTMTlpd0tibkZWYWQxR0trNG1ScwpxcnVEeEdVcHBMSGFMamlWNWs3WVdJK21pMk5MSHZVeUF3TmVXdVBFQ3ZZaHpobE94azUvcHJacFpuVXV2M1ArCkVrbzlBb0dCQUtqaXFrd3FyQ3AwbDh2U0Fja1Y4NEtZT2l4NWNsa1Rsb3UvZC9wRHlNa2xmaVZQWGlFNHdHNksKM2tTbm9IZE5BM3ZvNlFnOUVCNTJIZ2RuaGFHMXFvTFB3TVQzWjF5dzZtbllBeFhKOTNHT0tqdXhybVVndDRaTApqWExiN3M2Mzc4Z21zQVpObzFKK2ptQlptcnJobUJiOW9lbzRDcFRudldRS1BENUhrd0VQCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9vVmtIdlRIL2gxZ1N0WFNxUC9naEF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05URXpOVEl5TWxvWERUSTJNRFl3TkRFegpOVEl5TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyZW5mT29KMWhCYjh4QXBLckRBa1dGTzlyWTBLdjE4eFRPRml6TVE3MHJWNjFrdjUKdTFZNXB3S0QyMWsxYWRGeDNUZm83cWpUNzRvbEJYbW1KY1ZUNDAwelFhSjE1SVhSVFF6UjYwMWxubmpzUzgzdAp1MFl3ZklmUXZRa3kzcU9rTmpiZDBPakwvLzBHZDlsb0l6Vi9hRmJYS0NBTUNEcE9GZWVTNUZUV2NrMnliN0V0CnY1L3VWaWhvQUJuVTNGWSt2NTRDaGFvSlJUSUFETTJUOVNQWVJxeW1iaEFDNklDVjY4cloyMVVDeDJDYXZJcXIKazFSMnk3MkdwVnhXVFovVC9Zamp2VFI1YlRWcC90bURiYkRQWGRKTHNnZ2szOXh5c0JXWkY4N3F1QUVkYUo5RApjRTRaOGNwYVloRyt4YXRJSUZGMzFjWEQrRlZJMnRyWk82cUQ3d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSWhlb2V5c1hpMmlnQ05FUzFvTHVBYUhLdHo0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQjE0VDUzVnUwZEtaWTVFbDRpbm9NNVE1bEZNUHh1RXpYa3FkSlN3RitwTUlqWGR6ajIxc0VqCm11MXpnYVg3bXNIdXdDTHlaL21BTW1XRUNWTUFZNTdaSitaN2ZuSHYyRmdYSnArSEJyNVpBdVRLQXBRREhQRkMKWWtoOCtaMzhZTzJ4VFQ3amJqT0R4cVV1U1JhSkRST1dHbGtFSzFLWWF0SVNWOXFIbnBWNUpDNVN0c3RINGJPTwovRW1jcHRuSVQ4MktEd0JIMEUzM01NUXpITzFqT2YyeW1QWVFKb0tlYnNMTVd1aEJwZHAzUFBtVXFHTUV1dkRKCmxwcXFGWEpNVS81VENMNG9sM2JtaVh0VnNaT3Zmd0MyR0xWQThmSFE5SnpmeC9rdWs2WGRyYklQaWtKUVdqQUcKaFplRUVKQ2xNSkIwa0VWSkNlOTQ3dkR1ZDFLcEZBR3gKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcmVuZk9vSjFoQmI4eEFwS3JEQWtXRk85clkwS3YxOHhUT0Zpek1RNzByVjYxa3Y1CnUxWTVwd0tEMjFrMWFkRngzVGZvN3FqVDc0b2xCWG1tSmNWVDQwMHpRYUoxNUlYUlRRelI2MDFsbm5qc1M4M3QKdTBZd2ZJZlF2UWt5M3FPa05qYmQwT2pMLy8wR2Q5bG9JelYvYUZiWEtDQU1DRHBPRmVlUzVGVFdjazJ5YjdFdAp2NS91Vmlob0FCblUzRlkrdjU0Q2hhb0pSVElBRE0yVDlTUFlScXltYmhBQzZJQ1Y2OHJaMjFVQ3gyQ2F2SXFyCmsxUjJ5NzJHcFZ4V1RaL1QvWWpqdlRSNWJUVnAvdG1EYmJEUFhkSkxzZ2drMzl4eXNCV1pGODdxdUFFZGFKOUQKY0U0WjhjcGFZaEcreGF0SUlGRjMxY1hEK0ZWSTJ0clpPNnFEN3dJREFRQUJBb0lCQUZsVlNOVkZMaGdydHFyOApubDdVVzljRExPdDVCNHhGMlkwa09SdjFzTVVMYzQyZ2VTZEJvMXVtYnhTOVBqS2M0MkErMStlLzBSMjZXRW4zCnN1Q3orK05HUkkzeVpaeDlJSVh6aitET1lPU0dPTnEzYk9aRnA2SlFJV2o0MEtpTVprMXk0WDN1RnR2bm5PcnoKUWdyVDhCNG9mVnlmR1k4Z1kvdmNlQmZSZkZZNXVoV1gzdnVKUTU3R21RTElqc2xiMXU2Q0l0UVplT01rOW5wMwplQ2VEVmFJQjZuM1hEOGJiOEFBMkx1blpxTEptcFNld01nMXFHcXBtR1NyM3gycjJ3Q3lONDNKZmNGV0U5OEptCnYvaHlENG83RjdBQmNxSUE4N1QxTVRZelhtK2NkcmVIQmZha0l6K2VTOGRlZUVxMjY5WUJSK3dvNGtaaWZOeVkKa3dWc3VBRUNnWUVBMkt2NklUMGpYdXhra2M0am1SVklIVFRpcnFwdFlUaWRUbGRwYWovZWgwNHNSYXhweXRPOAoxd3NVdVZhNmdkMURUcS9KSDd4MjZFSDh6VklRNjJsSFJuNlNXVTFERjl2NHV2b1l3akhpemdVUGhMTzR3cW93CmRQU09BQ0FLV1pNWENvYXRlUDZkQnhra2l3S244YlFTaGp2bVh3T3Exc0tuQlY1MXZ6SHlITmtDZ1lFQXpYc1AKdHJSUFRlUlZhNG5NUG8rOEh3ZWU5N1BYei92T2FtbWF4aS96a3VCNWVCNllmUGErZGlXSUJRVUdhSHo2a0JQawo0UWRTRHQ1dWNpTjRTL2RYUUZTRGowMWRwa1plS2hoNXJnUHcvSUlNZng4MnlSNW5zR3pjZW5hRUtxeEE1bkVNCmsvUE9GQWpSaHBHMVBhc0lTQjczQ1dOQlEvZlZxVFlsOU5JOVNnY0NnWUI4ODJDQi9xSUJRYzRWajQxVDRNUC8KbzluOTVHYkRwRVNEUTBHVmRsTzhMOGEwUDJPYkJsUm1wd3RDZnRON3hML21CdFd6cVpuaEF2em80eVRDdmFuTwo2M3MyYUtvQ2ZtYUlYV1lkeDJzR2FFQzB4SGdPT3R0Szl5VlV5U1Z1MXJaNDZZWHN1dGlQbVY1TGxES0ozdEMzCi9KOHp1QWV6WmZtdnpQT1dXUlZJc1FLQmdBMnRKU3laNzdWVmYwSDdGL2NLQmhGaXBuZ0NKbGtYZjNPaHQ4VjkKSjQ4ZEZiaWpBSzlBbFFpMEVzdVN2QXgwVlJFRjRmUUFVcnZlbmlkR3FSa1ZTMTlpd0tibkZWYWQxR0trNG1ScwpxcnVEeEdVcHBMSGFMamlWNWs3WVdJK21pMk5MSHZVeUF3TmVXdVBFQ3ZZaHpobE94azUvcHJacFpuVXV2M1ArCkVrbzlBb0dCQUtqaXFrd3FyQ3AwbDh2U0Fja1Y4NEtZT2l4NWNsa1Rsb3UvZC9wRHlNa2xmaVZQWGlFNHdHNksKM2tTbm9IZE5BM3ZvNlFnOUVCNTJIZ2RuaGFHMXFvTFB3TVQzWjF5dzZtbllBeFhKOTNHT0tqdXhybVVndDRaTApqWExiN3M2Mzc4Z21zQVpObzFKK2ptQlptcnJobUJiOW9lbzRDcFRudldRS1BENUhrd0VQCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9vVmtIdlRIL2gxZ1N0WFNxUC9naEF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05URXpOVEl5TWxvWERUSTJNRFl3TkRFegpOVEl5TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyZW5mT29KMWhCYjh4QXBLckRBa1dGTzlyWTBLdjE4eFRPRml6TVE3MHJWNjFrdjUKdTFZNXB3S0QyMWsxYWRGeDNUZm83cWpUNzRvbEJYbW1KY1ZUNDAwelFhSjE1SVhSVFF6UjYwMWxubmpzUzgzdAp1MFl3ZklmUXZRa3kzcU9rTmpiZDBPakwvLzBHZDlsb0l6Vi9hRmJYS0NBTUNEcE9GZWVTNUZUV2NrMnliN0V0CnY1L3VWaWhvQUJuVTNGWSt2NTRDaGFvSlJUSUFETTJUOVNQWVJxeW1iaEFDNklDVjY4cloyMVVDeDJDYXZJcXIKazFSMnk3MkdwVnhXVFovVC9Zamp2VFI1YlRWcC90bURiYkRQWGRKTHNnZ2szOXh5c0JXWkY4N3F1QUVkYUo5RApjRTRaOGNwYVloRyt4YXRJSUZGMzFjWEQrRlZJMnRyWk82cUQ3d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSWhlb2V5c1hpMmlnQ05FUzFvTHVBYUhLdHo0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQjE0VDUzVnUwZEtaWTVFbDRpbm9NNVE1bEZNUHh1RXpYa3FkSlN3RitwTUlqWGR6ajIxc0VqCm11MXpnYVg3bXNIdXdDTHlaL21BTW1XRUNWTUFZNTdaSitaN2ZuSHYyRmdYSnArSEJyNVpBdVRLQXBRREhQRkMKWWtoOCtaMzhZTzJ4VFQ3amJqT0R4cVV1U1JhSkRST1dHbGtFSzFLWWF0SVNWOXFIbnBWNUpDNVN0c3RINGJPTwovRW1jcHRuSVQ4MktEd0JIMEUzM01NUXpITzFqT2YyeW1QWVFKb0tlYnNMTVd1aEJwZHAzUFBtVXFHTUV1dkRKCmxwcXFGWEpNVS81VENMNG9sM2JtaVh0VnNaT3Zmd0MyR0xWQThmSFE5SnpmeC9rdWs2WGRyYklQaWtKUVdqQUcKaFplRUVKQ2xNSkIwa0VWSkNlOTQ3dkR1ZDFLcEZBR3gKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRTUtOVCsrYzY3ZlA0dXVDVHcyTjRLakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpBMU1UTTFNakl6V2hjTk1qWXdOakEwTVRNMQpNakl6V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFESVVhQksvQ2RDM0ZjOC9kVzJVWjFrdDRSZmRUdkQKUVp1VlFSYnVEaTVrZUZsSXZTT3NCUyt2clBxeHYzUjdRb09hNEozWUpFcWlrTGFaSURwdC9BMFdwSkUzMy9RTgp4a25ucDdLR0xidWh2THRuRGtRUGpRVGl3a3RyMVpHSmNCRGtPeWhETjlaMXYyQ2ZjTkh6WVE0blhMTmE4VjVLCldVV0lHbUFyQXc3bWo2TC9lc3h1b3N0RzZLeDVZaUovRTJyUzdNa2ZEdlV2dUFEMWNGQ1lvMDh1SDB1TzVPbk0KWm5WZHB0cnJHWFF6ZHkydnl5NEJrbVVVaTlMMUNKcGxXQnNvWk5pUExHb2tZdWp1eTYxVDdKT1gvSXU5ZjJCYgp3OXFwZnlaOWJDYlJLWnB0REVYbWZDNldMTkYwMjB2elk5VGQ2N3RqVXIxOUExcVhoamZBMlB4QkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZJaGVvZXlzWGkyaWdDTkVTMW9MdUFhSApLdHo0TUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFKRjJTOWo4WThSL3doUmdkTGE5cy92cEhKUlEzc01NWUQ4NHlteTNLY2dYSVo2Q1QKOVVPa1lmN2tCazRrSXZ3VExXeVpoc04vQldFWm9PQXg3WXE1REY1b01jZ0x1ZWs5dnd1emJtcEJSSVNCN0VadgoyeEJBUTVoTC9td0QyU20rbVRRNkdZZ1B3YWFSMjQrZWJHc1JaV2NKN3BhK2lxVFo3RVNhQ01DUExWVWNBTFNGCnNVZ1BtRVUralU1QXFURHNkdnlQcWhoeldoV0VjSkRQUld3WUhMbmNNNWp2SkQydzdoTWh5RkNMcExUNmE2Y0kKT1lDTThPbTNuaUQ5S002eFMybC85RDRKUjhvcm1ZYUE0dlEzTmJ3UDBQajZJQlg4TWhxWDNmSDRCaDNyQlhBSAp0YTg3ZXlJQXJVV0V0anVpU0JXbkpjVmcvZ2FJeHdiUUhzNE1iUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeUZHZ1N2d25RdHhYUFAzVnRsR2RaTGVFWDNVN3cwR2JsVUVXN2c0dVpIaFpTTDBqCnJBVXZyNno2c2I5MGUwS0RtdUNkMkNSS29wQzJtU0E2YmZ3TkZxU1JOOS8wRGNaSjU2ZXloaTI3b2J5N1p3NUUKRDQwRTRzSkxhOVdSaVhBUTVEc29RemZXZGI5Z24zRFI4MkVPSjF5eld2RmVTbGxGaUJwZ0t3TU81bytpLzNyTQpicUxMUnVpc2VXSWlmeE5xMHV6Skh3NzFMN2dBOVhCUW1LTlBMaDlManVUcHpHWjFYYWJhNnhsME0zY3RyOHN1CkFaSmxGSXZTOVFpYVpWZ2JLR1RZanl4cUpHTG83c3V0VSt5VGwveUx2WDlnVzhQYXFYOG1mV3dtMFNtYWJReEYKNW53dWxpelJkTnRMODJQVTNldTdZMUs5ZlFOYWw0WTN3Tmo4UVFJREFRQUJBb0lCQUM3Y1FYWXBKSG9VbDJmUwpMWU5YOWt6UVRXd1RQYWJBbTBmQUVVQWhHeU12c0JzKys3QkxDa3U3V0czcVRySmk3ZXgyTFJhWjdzZTJ1TEI3CmhJK2tEZC9GSVorRGlWRUxtTkJUUDRUNS85R25GK1BVeDRFbnlRUE8xZHZrK3dXK3JJVG5mZFN6cER5cFIwNGwKRTBndTVTTzZJTTdlZGVOSW5PWm8zU1JTczlLbFRzMUtyTjdpb2VjbmJrWVc2RzJVNldDRW9hSk9zQVhtQXhlNAo3QzRuaVd4Z0ZYTnRmbDRYZE1MKzQyUmhLdktYckFjMExqVFhiMmQveCthOG5BZGx2ZVNjZ1JWUDJ3a0wwY1RvClJSeVhxN1FxUWp2TllVa0xqV2s1NjJkMzdBdll2T3U2M1VJZXhteC9sNVI4bEhuNjl3NExVZjNhdllOUzlOYnEKVXJTU1FIMENnWUVBK2xsNVZuSmkwcVkvMzF4KzV0aVpEdFd4YWdSeldCT1dMWjF4L04xb3J5TThpVCtZVTIwbgpqbTY2TWZMa0dXRlZ4YlBKNVF0RHBMSVJRSjMzWVVqTTAyWG5GaTQ1SHc0MnE2bHk0ZGdxYkxqSXd0S1FDNC9GCkVEeWpPeFpLb2pKcHBKRmNubXE5SkJFeGVXYjNDSjhSUklidk1Hb2RGNnV1WGx5bzhoQ0J3N3NDZ1lFQXpOY1MKMzlld2E1MXFFMTdDUzZmYnRlS1Uyc1dUUnBwOG5TRU9ZQ3VVUktOWk9BcEpWYXhwTjc2NC9VWTJpTzIwbjdFUApYeFk5bE9kWDNibExVZXpHUEoyN1hURFR3dVhWZnN5VnVldFNtbHY5RHVZWlR4ekVZN2ZsTFMvd0hiOFV4ajVvCjBoanhSdUQ5RkVxcm41UGFEV2k2L0ROMUUvbC8vMEVqNE9aNkdqTUNnWUVBa2xuTC9TVlJjQ09RSTF0SE5GeGEKM2JrK3hlTmtLcEVJc2hIZ21SbzJJR3hRNzBzbUdWOHVTSzJpVzZES2g2dkhJSlJCNm92ek4weUJtV3kvT1RmOQp4WGRFNkVxTlNnSmRJMjBqbzdOaTJid01ZUmdHN1R0VzBHOGlYV0Jpc1A4WGt3VUhSL1RPTFU5L3hLRFV1VTJFCklyTmZFTVozeTJhcHdMQWFjNmdDdEJFQ2dZQnU0ZTJocGd3bDlPdzYyQXl0RDR4cmhOKzNIVVIvNzVpTkpodTIKQzJFVFZxa3hJTUJaMUI2UXduazVBUXo4U2xDQU1VUjA0SUV0WFoyK3RGTUZZZnBkVGJUaTJVK0lMUW5JdmM0KworaGVZM3pxNUdlMlJXYTBsbmFJOU43bnZJRVNLbTdYNkpPNVd3K3U3VkVCYS9ab0hzQzJuMytMOGtRNnNpZ0oxCjk4MFk2UUtCZ1FDb1NkdkFGMGxJUUdCa3c0cmNqTXFiNWozbzEwM2NEaVU0SFh4VndCNGI3am1NajBSREl2c3EKVGovbXFFY2pxdVNMeTZtUm5wakM2SThwbm5FU3U3RHAwdmxyK1RNTFJyVjFJdGZBelhRano4d2tNaFFHcHdtUgpEam9LK0NYMXozL3FrYnNCa3YxZHh2OXcvWmZKY1gzWDF2Zy96V0F1L0RURm44QjUvc1c4VHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9vVmtIdlRIL2gxZ1N0WFNxUC9naEF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05URXpOVEl5TWxvWERUSTJNRFl3TkRFegpOVEl5TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyZW5mT29KMWhCYjh4QXBLckRBa1dGTzlyWTBLdjE4eFRPRml6TVE3MHJWNjFrdjUKdTFZNXB3S0QyMWsxYWRGeDNUZm83cWpUNzRvbEJYbW1KY1ZUNDAwelFhSjE1SVhSVFF6UjYwMWxubmpzUzgzdAp1MFl3ZklmUXZRa3kzcU9rTmpiZDBPakwvLzBHZDlsb0l6Vi9hRmJYS0NBTUNEcE9GZWVTNUZUV2NrMnliN0V0CnY1L3VWaWhvQUJuVTNGWSt2NTRDaGFvSlJUSUFETTJUOVNQWVJxeW1iaEFDNklDVjY4cloyMVVDeDJDYXZJcXIKazFSMnk3MkdwVnhXVFovVC9Zamp2VFI1YlRWcC90bURiYkRQWGRKTHNnZ2szOXh5c0JXWkY4N3F1QUVkYUo5RApjRTRaOGNwYVloRyt4YXRJSUZGMzFjWEQrRlZJMnRyWk82cUQ3d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSWhlb2V5c1hpMmlnQ05FUzFvTHVBYUhLdHo0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQjE0VDUzVnUwZEtaWTVFbDRpbm9NNVE1bEZNUHh1RXpYa3FkSlN3RitwTUlqWGR6ajIxc0VqCm11MXpnYVg3bXNIdXdDTHlaL21BTW1XRUNWTUFZNTdaSitaN2ZuSHYyRmdYSnArSEJyNVpBdVRLQXBRREhQRkMKWWtoOCtaMzhZTzJ4VFQ3amJqT0R4cVV1U1JhSkRST1dHbGtFSzFLWWF0SVNWOXFIbnBWNUpDNVN0c3RINGJPTwovRW1jcHRuSVQ4MktEd0JIMEUzM01NUXpITzFqT2YyeW1QWVFKb0tlYnNMTVd1aEJwZHAzUFBtVXFHTUV1dkRKCmxwcXFGWEpNVS81VENMNG9sM2JtaVh0VnNaT3Zmd0MyR0xWQThmSFE5SnpmeC9rdWs2WGRyYklQaWtKUVdqQUcKaFplRUVKQ2xNSkIwa0VWSkNlOTQ3dkR1ZDFLcEZBR3gKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lRSitNcGJNR1RtSUQ5WEt0YUpaa0tvREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpBMU1UTTFNakl6V2hjTk1qWXdOakEwTVRNMQpNakl6V2pBdk1TMHdLd1lEVlFRRERDUXFMbWR5WlhseWIyTnJMVzl3Y3k1b2RXSmliR1V0WjNKd1l5NWphV3hwCmRXMHVhVzh3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFIzSTY3eE9COGppbE8KUHBYVnJsTFNqRzQxVmlNcWlZT25pcUt5b29uMkI0UVZJVUJiQnNjWnRHa0lRL0ZqN1dORXpyZllEWTZ4TzZFawpEdWIrZGJvYzgrQ3BLenFhdk1TajRhS0ZWUDduNTB3SzdwWEVJb1gzcjFzMWhSTU9DN2FmZWYzayszSTVLUlJHClIzWUVQTVRtWGcyUkViL0x3UkFxUGlzSFBzTmRGaXBLSTdKRTEzT2IwTnlmVmJNdUpuSlg2d2xEeWVYelBuakcKZC9qelRNSkFvWWU2enZUamxqRHNSNGdyWFdiNFRWVWRlS0VBM3V0VmpOcHk3bkdiUkVUQ2lUMlMzMnJMTEtDUQpxYnpNUWJGNS8xOHhRa1JCTWxuMTZOTkk0RW1uMXJVK2VOM3QwUjl0Mk1pSi9ySXB0WDVIcjRDbkpiN3FhTm9RCkFJTk5hK0lkQWdNQkFBR2pnWkl3Z1k4d0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGSWhlb2V5cwpYaTJpZ0NORVMxb0x1QWFIS3R6NE1DOEdBMVVkRVFRb01DYUNKQ291WjNKbGVYSnZZMnN0YjNCekxtaDFZbUpzClpTMW5jbkJqTG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUlxZ2RRQU9YNml4N2syQzMKYlRoRlM2WEFXUFJTVmZBVzlGWXZWQnlxV21vM2R3amZDUTU5amRkbjcrazJaNmhHRGZ5UEZ2VVlzdExiM2pCcApnTnkxTkUwU2Rya0lLbktuNDh5OGxBeGJad3FaT0xzeG9YYWNXSGh5SWxaZTZpd3pCMUhHa1F1TXRXN1h4ZUVyCmFqV1lPTG1rSHlNa2NrUHlDcUVJVW50NUgxVzNpZTZNcmtFN3ZmeWlwZ2VJcGVZZWVBMFF2TXFjS3d3RCtNN3YKeDBUZjl1L1ZTSXVyck1VcXR1bnlmZDJray91UHlPRDFsb0FxZng4RXNvUm5GcVk5SDZtUkY2N3BxOUJqbzdtbApwMnk0QUhndnl4T0RrVE9LQllSd0hjUmlFU1ZZeUpnbm5EbmN4Qmt5bE55WFhqai9KdVlsL054NFNha1pjUTROCnlGTHNUZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMGR5T3U4VGdmSTRwVGo2VjFhNVMwb3h1TlZZaktvbURwNHFpc3FLSjlnZUVGU0ZBCld3YkhHYlJwQ0VQeFkrMWpSTTYzMkEyT3NUdWhKQTdtL25XNkhQUGdxU3M2bXJ6RW8rR2loVlQrNStkTUN1NlYKeENLRjk2OWJOWVVURGd1Mm4zbjk1UHR5T1NrVVJrZDJCRHpFNWw0TmtSRy95OEVRS2o0ckJ6N0RYUllxU2lPeQpSTmR6bTlEY24xV3pMaVp5VitzSlE4bmw4ejU0eG5mNDgwekNRS0dIdXM3MDQ1WXc3RWVJSzExbStFMVZIWGloCkFON3JWWXphY3U1eG0wUkV3b2s5a3Q5cXl5eWdrS204ekVHeGVmOWZNVUpFUVRKWjllalRTT0JKcDlhMVBuamQKN2RFZmJkaklpZjZ5S2JWK1I2K0FweVcrNm1qYUVBQ0RUV3ZpSFFJREFRQUJBb0lCQUhFS1VhUFlyMmJJR0gyNQovbkZqL2Q3Rm45T0ErMTQ5UmpvbjFlMU0yZTA1TFM5SWd1YkZKdGUwc3VLdDNrZUtKZTk1UGRQVnNhZkx5OGVsCmMwMWJVbzJuMjdxanUyU0FDNWVPd1VENmdIZWZ3ZmtkZkhSeWVDRHJSc0QwVmtnNWpQd245TmV6alZvMncySDcKdWhrY05wOHp5REQ5RTRlSURkSURQS0FoY1pBZ2w2RDF4bVQranlSVVBMb1pFdG9BZFN0OWVGZ1B2VVVROW45SgpNMTA5REVOU3FWY0RHWUVqOWZnUlBZSzRjWmE3L3hNYXk0clc5aTVUQVMwTkRtaXNxNWhBeTVCS3dmWS9FRml1CkpsOHRTSUh4a1VkUFhDOFFRcFFUVWtlclZORXBDTXZNU2M5ZThqWFA5ZjdsN1RCWElDenpuZXdOT0M1SzFtdDUKYlFMdTZDRUNnWUVBNTVYSjhoWElCOVk1a1NSUDNzVVFhcWVaeHRKb21VUk1OeEE4Mm0wWEpnQmI4L05vT3gvUwpLekNtOVk5cGowTXVpMy9yQkpvTXoyWWcvOEJMZUZjUHVCYkQ5ZmYxb211WVFJYWZEZlhyZld2b1R4WUl5QWp0CmhCWDBvQzRNbmRFVHRYS2VsKzZRaFZrUVdET1VhRXQ0b29FZmZUR0ROQnRIcHhJSzQ0YW9HdlVDZ1lFQTUveDUKcWZHaEswZ0ZjWitMZlg3bHlDSWYySjU0enRBdit4NnV1WUI0WEZLY3lMYUprVDhhWE9wUVJuYmQxSzZoLzNlcgppc3Z3RnFITG9ITXg5Tm9hRS9wVDdTRXFhUFBjQVZ3cWhwZ1BTOTVpN0hNVmpHTjFSZ3VKNWY3Rm9NVFg0cEtBCis3OUZPMHpqeTJFUm5tTW1EQ2NTbGRIMVJUc0FlUzVjSWp4Z2dZa0NnWUJqSStUSUZqc0QzOW5WSU01d2Q3eUgKYkNpUXpSS3FTbXEyUitWRlBONWtEbE5QSkN6QzR1UitTTjJ3MGl4R2dHUTBwQlpnYWZLQjl4NjVYZ0R4QzVSWApJcWZSYk0xak10eURBeDZrUTFzRTNtVWROam1jS1BaRlRZRGo4ZExFM1BTckFONlQvRFV5WU9aMlc5NTBwNXFGCk52SGNEbzQwaUZrc1ZMVUVvbWprNFFLQmdRQ3NiQ1RwUU9SdlROcHU5d3d3UEU4QkR3dm9idkNQbG9EeS9uMFMKOXY5K2J4Q0V4ZGM5azA4KzNCREtMckwxenM0dEdIN3hiRjZJRTcxTEJoT05UMFd1cjVJTlgyY3NGb1BncHVZYwpuNHhPOFgxSkRNaHBUY3J1UXNrOW5yeTRuMVZ0MjBIdTJ0elVGSFFDeDZUV3VnNmZYYk1jazY3ZXc5bTROOUxXCngxVmJNUUtCZ0RzWG95OWFveHljUXA2OFJTMW5kR0JkWDcrbjdkT09wZEFWUFlDWWFrZ3NLMEdrVnVlS2kwVzYKcGU2dEJ5MDI4Wm12dnpvdnZSTm4yenAvQU9mTU1zZHAvelBHR3k0Z2FldzJUWVlLcEV0WVJiYzYvMTBLbGNHOApjV09sTW5QMHRnOEdodkJtZ2RCY0pLaThyczFHWHkra3N0K0Fabk9JVG1veitUZ3ZHRjBZCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 0855cb9644d03430443d4e6e4ad32840e3abf7243e1898ea7ae99db9afe774ea
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: ac9a6ac457a1729c5faaa0a40eabcb777b0e164ffce4d0eaffa61fa186cd8bc5
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 0855cb9644d03430443d4e6e4ad32840e3abf7243e1898ea7ae99db9afe774ea
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
