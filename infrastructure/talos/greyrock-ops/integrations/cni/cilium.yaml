apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: greyrock-ops
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: greyrock-ops\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5sb2laREk1TVZYWlE3YmhaWkRCdDR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1URTBOVEkxTkZvWERUSTJNRFF5TURFMApOVEkxTkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1TEJqWEZsSFZ4dVMzQ0xOWi82bkNGR0NRSXNtcXhlakgxcWRiMC9vWEcxYmVtUE8KTWFjb0FuSWs1c3NtaGY3QjRpSU42a2hHL3M0ejBSYklqNEdoaStrVWliWVdkUFVtY0ZuZmo5Yi9Bb2hvRGRzSwpHay91b1pTcG5DWGF4WTdpZ0ZLclhMTmhVWGpWbVFWcTB0cUllL0FRYmZpYWt6VnRacFV6SVZXenFhanIxNHczCkVtWTY1NkpzK1dkN1ErMlFmT09pRVJCZHZMYUVIdnM3R2Q0Qm0zUkNqeTNSektNSk14Vy9JMlJCTVRrWmpSWG4KRENYZ3VlSDByUXY2eU42OElZR2xpbGsrTGRHZHNzQmJFNTZrS0tpMUFTVS95N08ycyttVUFJZ3FlWVFQZzk1aApFaHlQVjVIamtQblV3cTZML3VnVUw3OHh1aUFsZ01qK2FSZjY3d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjdocFhRb0I0VTgvYXZiZ1JtaDhGOTByS2JVTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmtJY2czc2FSSnBNZEJsWUdibE5aTGkxbW9DcDRWczVZSXB1Zm90UVZyazQ2ODN4WDFOUXhKCmVLWEtDUnVQcmxUNTBFQkVoWHk3RTBwSWJNREtNS3R3YklBQjRwOUlRTmNQZ0dpWHpDRFZpWGZ5STRNcHVjUDcKMWw3bVpXY29sb0FMM21wWUVjdjZqZ2R5RHZmMDcwWmttUFcrdDBDZHIwdlhhRWpsYkwwUmZZZExwTmQ3RjFQYgpZcE1PaGFwT3BPdjcwdjFEd0hhdDZGQ0RxSmtJbU1hZFJFVU9WT2JZOCs4L1Bqd29acndRTTJMcWw2MktkQUNkCnNHak9LdjU0dXNwaXJPT0o4YzF6eVZxUGZRUzlTQzAyUm56WTlLSlpNRnczRnM0Q3F5S2sxNmFoOGY3cGsxWmwKbnVMaDk3cnI5Z0I1L3ZGMGVZSURFWi90UmtIUWdiZ2gKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdUxCalhGbEhWeHVTM0NMTlovNm5DRkdDUUlzbXF4ZWpIMXFkYjAvb1hHMWJlbVBPCk1hY29BbklrNXNzbWhmN0I0aUlONmtoRy9zNHowUmJJajRHaGkra1VpYllXZFBVbWNGbmZqOWIvQW9ob0Rkc0sKR2svdW9aU3BuQ1hheFk3aWdGS3JYTE5oVVhqVm1RVnEwdHFJZS9BUWJmaWFrelZ0WnBVeklWV3pxYWpyMTR3MwpFbVk2NTZKcytXZDdRKzJRZk9PaUVSQmR2TGFFSHZzN0dkNEJtM1JDankzUnpLTUpNeFcvSTJSQk1Ua1pqUlhuCkRDWGd1ZUgwclF2NnlONjhJWUdsaWxrK0xkR2Rzc0JiRTU2a0tLaTFBU1UveTdPMnMrbVVBSWdxZVlRUGc5NWgKRWh5UFY1SGprUG5Vd3E2TC91Z1VMNzh4dWlBbGdNaithUmY2N3dJREFRQUJBb0lCQUdoUjZhM09HQWZSNFdCSwpvQzl2bmJXTEpNR0VWL0VvUnRGOUE1Uk9WSGR3cGMwNTlzd0JHUTVZbnhObUNIcURiY3huWStqRHJxWmFudFlwCndsdWM0enorQ01YSWZtTE4za3B6MlYyTUdUcTdCZHRkc0JVd3RSKzdzeG9xSDZxYmpNRGk4VHhKYmx6d25lWHoKTTJXcVhwRnpCalMzeWNnQTA2eXY5ZE9NYnhFVERHaWN6UFZzcHFjSlNkSGJ1cnVhcFZBTEhCRnVpd0FtUCtUcwplZXVMcFplY3BYeEk3bnNGMTFvR2V6anFneTNJaUVxTENZZ2J3SmljS3l4VkZWdFNzSGVYcmJvZmpkM0hLNzNVCkxMb1VyV2piMDBkOWRKQ2dYWXg1QlRTNUxWUTd3d2tyamdLYzFXMzE0MFdMWFdKU2lZWFI2dVpITGRJbGluNGsKYlRYSHVaRUNnWUVBeFYvOGN3NFlyTGNvOEg4ckJ6RlNBZmVEZG1FWTNuaFRwUmtHZTBkL1E5c2N0YU1ybXBWOAo3VU1lSWM3VE1ZNkUvUWdsZ21pWFNsZUlZSHVBcDZnRTNXK2pidzQ3ZFdLZWVkdWcrbFdRTWdYKzI1UloxSDVzCmc2eldoMjMrUjFBZFJ0QkVqZkpjN3FCRWU3ckRtTHVibHRrOEgxYVl6T0pCZVZJeERpUm5jM01DZ1lFQTc0dkoKd3pMLzNaVURaM1hKSUNMa0l0UEVlUncwYnh1TVVwMlZmUllsUUZKM1RKSzUySlZTbWVsN1Nyd3c3eWgzV2MregphVWM1dHdKZTNTWXY1enFoeGJwS1I2MmkvZWpxWjlBMUpPdk16cEpwQ1NrdTNVd2NJTWRTcVIxYjIyZ1RtRXpSClhMNE50OHR1YlAvc0RVUk9EeHNOby8xL1lmR0Exb0hrVlEzZTA1VUNnWUF3ME9HdVR6RTVIbi9vbzNzdjV6bmkKTktaMkUrUER1anp0MjNlbjYvSUZCVjlmYVVEeWxjQjFLaUY4dVJ1dzZRL3BTU2VGem5xRXI0dVNXVmxqbmdHKwpCc3VFUHgvams0V2dtL3AvajhQL0swNXlYb210TGF1SEVhdHBpWUhYZjNBT1FKcUVCUXFKRm1oNXRhS0Uxdm5QCllHRW5XeEtsc2R3QnRwdGRaUkdWRXdLQmdRREJnSjQvUEZkTDJ5K2d4NWpzaU1MWkQwL0t0V24xeHI4WGpZeFEKT3k5a1FqbDBkYUlDdnJ5Mjc5QlVrcWpFeUYrQkFUTGdmRlMyN1FkTWhhaDBsUHhSQ1NjdnQ2Zk9pL091WUpaTgplTjA4a1RDZjRkQ2xtdkd0Mk5XQkh1SXczbVhWeFZmcUh1eGQ1OHNQNmJ2NUM1QXl5NXU5T08xSlpSaTZMcnNQCnFlQ3g4UUtCZ0IvNk01Nk9BSjhtRjFJbEhmNlRmd2tSRExXSGVFeUlUMDVMLzFKTmY0dU9jTW1hck9iOUpJM0wKM2tqVXcrZzc2dnlYSERmSEdYSlp0VVVXMGc3OXZCVDhBYWtJTzBDRGhlbFpVV3hCeEpiSnZvbmlqN01pNTY0cgpQZHUyN1B2WHFWd0w5V0wvTUVYRElUTWR4ZEIwdWg1aWNDb25hSVduTFZYbWxlNGorYjVzCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5sb2laREk1TVZYWlE3YmhaWkRCdDR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1URTBOVEkxTkZvWERUSTJNRFF5TURFMApOVEkxTkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1TEJqWEZsSFZ4dVMzQ0xOWi82bkNGR0NRSXNtcXhlakgxcWRiMC9vWEcxYmVtUE8KTWFjb0FuSWs1c3NtaGY3QjRpSU42a2hHL3M0ejBSYklqNEdoaStrVWliWVdkUFVtY0ZuZmo5Yi9Bb2hvRGRzSwpHay91b1pTcG5DWGF4WTdpZ0ZLclhMTmhVWGpWbVFWcTB0cUllL0FRYmZpYWt6VnRacFV6SVZXenFhanIxNHczCkVtWTY1NkpzK1dkN1ErMlFmT09pRVJCZHZMYUVIdnM3R2Q0Qm0zUkNqeTNSektNSk14Vy9JMlJCTVRrWmpSWG4KRENYZ3VlSDByUXY2eU42OElZR2xpbGsrTGRHZHNzQmJFNTZrS0tpMUFTVS95N08ycyttVUFJZ3FlWVFQZzk1aApFaHlQVjVIamtQblV3cTZML3VnVUw3OHh1aUFsZ01qK2FSZjY3d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjdocFhRb0I0VTgvYXZiZ1JtaDhGOTByS2JVTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmtJY2czc2FSSnBNZEJsWUdibE5aTGkxbW9DcDRWczVZSXB1Zm90UVZyazQ2ODN4WDFOUXhKCmVLWEtDUnVQcmxUNTBFQkVoWHk3RTBwSWJNREtNS3R3YklBQjRwOUlRTmNQZ0dpWHpDRFZpWGZ5STRNcHVjUDcKMWw3bVpXY29sb0FMM21wWUVjdjZqZ2R5RHZmMDcwWmttUFcrdDBDZHIwdlhhRWpsYkwwUmZZZExwTmQ3RjFQYgpZcE1PaGFwT3BPdjcwdjFEd0hhdDZGQ0RxSmtJbU1hZFJFVU9WT2JZOCs4L1Bqd29acndRTTJMcWw2MktkQUNkCnNHak9LdjU0dXNwaXJPT0o4YzF6eVZxUGZRUzlTQzAyUm56WTlLSlpNRnczRnM0Q3F5S2sxNmFoOGY3cGsxWmwKbnVMaDk3cnI5Z0I1L3ZGMGVZSURFWi90UmtIUWdiZ2gKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdUxCalhGbEhWeHVTM0NMTlovNm5DRkdDUUlzbXF4ZWpIMXFkYjAvb1hHMWJlbVBPCk1hY29BbklrNXNzbWhmN0I0aUlONmtoRy9zNHowUmJJajRHaGkra1VpYllXZFBVbWNGbmZqOWIvQW9ob0Rkc0sKR2svdW9aU3BuQ1hheFk3aWdGS3JYTE5oVVhqVm1RVnEwdHFJZS9BUWJmaWFrelZ0WnBVeklWV3pxYWpyMTR3MwpFbVk2NTZKcytXZDdRKzJRZk9PaUVSQmR2TGFFSHZzN0dkNEJtM1JDankzUnpLTUpNeFcvSTJSQk1Ua1pqUlhuCkRDWGd1ZUgwclF2NnlONjhJWUdsaWxrK0xkR2Rzc0JiRTU2a0tLaTFBU1UveTdPMnMrbVVBSWdxZVlRUGc5NWgKRWh5UFY1SGprUG5Vd3E2TC91Z1VMNzh4dWlBbGdNaithUmY2N3dJREFRQUJBb0lCQUdoUjZhM09HQWZSNFdCSwpvQzl2bmJXTEpNR0VWL0VvUnRGOUE1Uk9WSGR3cGMwNTlzd0JHUTVZbnhObUNIcURiY3huWStqRHJxWmFudFlwCndsdWM0enorQ01YSWZtTE4za3B6MlYyTUdUcTdCZHRkc0JVd3RSKzdzeG9xSDZxYmpNRGk4VHhKYmx6d25lWHoKTTJXcVhwRnpCalMzeWNnQTA2eXY5ZE9NYnhFVERHaWN6UFZzcHFjSlNkSGJ1cnVhcFZBTEhCRnVpd0FtUCtUcwplZXVMcFplY3BYeEk3bnNGMTFvR2V6anFneTNJaUVxTENZZ2J3SmljS3l4VkZWdFNzSGVYcmJvZmpkM0hLNzNVCkxMb1VyV2piMDBkOWRKQ2dYWXg1QlRTNUxWUTd3d2tyamdLYzFXMzE0MFdMWFdKU2lZWFI2dVpITGRJbGluNGsKYlRYSHVaRUNnWUVBeFYvOGN3NFlyTGNvOEg4ckJ6RlNBZmVEZG1FWTNuaFRwUmtHZTBkL1E5c2N0YU1ybXBWOAo3VU1lSWM3VE1ZNkUvUWdsZ21pWFNsZUlZSHVBcDZnRTNXK2pidzQ3ZFdLZWVkdWcrbFdRTWdYKzI1UloxSDVzCmc2eldoMjMrUjFBZFJ0QkVqZkpjN3FCRWU3ckRtTHVibHRrOEgxYVl6T0pCZVZJeERpUm5jM01DZ1lFQTc0dkoKd3pMLzNaVURaM1hKSUNMa0l0UEVlUncwYnh1TVVwMlZmUllsUUZKM1RKSzUySlZTbWVsN1Nyd3c3eWgzV2MregphVWM1dHdKZTNTWXY1enFoeGJwS1I2MmkvZWpxWjlBMUpPdk16cEpwQ1NrdTNVd2NJTWRTcVIxYjIyZ1RtRXpSClhMNE50OHR1YlAvc0RVUk9EeHNOby8xL1lmR0Exb0hrVlEzZTA1VUNnWUF3ME9HdVR6RTVIbi9vbzNzdjV6bmkKTktaMkUrUER1anp0MjNlbjYvSUZCVjlmYVVEeWxjQjFLaUY4dVJ1dzZRL3BTU2VGem5xRXI0dVNXVmxqbmdHKwpCc3VFUHgvams0V2dtL3AvajhQL0swNXlYb210TGF1SEVhdHBpWUhYZjNBT1FKcUVCUXFKRm1oNXRhS0Uxdm5QCllHRW5XeEtsc2R3QnRwdGRaUkdWRXdLQmdRREJnSjQvUEZkTDJ5K2d4NWpzaU1MWkQwL0t0V24xeHI4WGpZeFEKT3k5a1FqbDBkYUlDdnJ5Mjc5QlVrcWpFeUYrQkFUTGdmRlMyN1FkTWhhaDBsUHhSQ1NjdnQ2Zk9pL091WUpaTgplTjA4a1RDZjRkQ2xtdkd0Mk5XQkh1SXczbVhWeFZmcUh1eGQ1OHNQNmJ2NUM1QXl5NXU5T08xSlpSaTZMcnNQCnFlQ3g4UUtCZ0IvNk01Nk9BSjhtRjFJbEhmNlRmd2tSRExXSGVFeUlUMDVMLzFKTmY0dU9jTW1hck9iOUpJM0wKM2tqVXcrZzc2dnlYSERmSEdYSlp0VVVXMGc3OXZCVDhBYWtJTzBDRGhlbFpVV3hCeEpiSnZvbmlqN01pNTY0cgpQZHUyN1B2WHFWd0w5V0wvTUVYRElUTWR4ZEIwdWg1aWNDb25hSVduTFZYbWxlNGorYjVzCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5sb2laREk1TVZYWlE3YmhaWkRCdDR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1URTBOVEkxTkZvWERUSTJNRFF5TURFMApOVEkxTkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1TEJqWEZsSFZ4dVMzQ0xOWi82bkNGR0NRSXNtcXhlakgxcWRiMC9vWEcxYmVtUE8KTWFjb0FuSWs1c3NtaGY3QjRpSU42a2hHL3M0ejBSYklqNEdoaStrVWliWVdkUFVtY0ZuZmo5Yi9Bb2hvRGRzSwpHay91b1pTcG5DWGF4WTdpZ0ZLclhMTmhVWGpWbVFWcTB0cUllL0FRYmZpYWt6VnRacFV6SVZXenFhanIxNHczCkVtWTY1NkpzK1dkN1ErMlFmT09pRVJCZHZMYUVIdnM3R2Q0Qm0zUkNqeTNSektNSk14Vy9JMlJCTVRrWmpSWG4KRENYZ3VlSDByUXY2eU42OElZR2xpbGsrTGRHZHNzQmJFNTZrS0tpMUFTVS95N08ycyttVUFJZ3FlWVFQZzk1aApFaHlQVjVIamtQblV3cTZML3VnVUw3OHh1aUFsZ01qK2FSZjY3d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjdocFhRb0I0VTgvYXZiZ1JtaDhGOTByS2JVTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmtJY2czc2FSSnBNZEJsWUdibE5aTGkxbW9DcDRWczVZSXB1Zm90UVZyazQ2ODN4WDFOUXhKCmVLWEtDUnVQcmxUNTBFQkVoWHk3RTBwSWJNREtNS3R3YklBQjRwOUlRTmNQZ0dpWHpDRFZpWGZ5STRNcHVjUDcKMWw3bVpXY29sb0FMM21wWUVjdjZqZ2R5RHZmMDcwWmttUFcrdDBDZHIwdlhhRWpsYkwwUmZZZExwTmQ3RjFQYgpZcE1PaGFwT3BPdjcwdjFEd0hhdDZGQ0RxSmtJbU1hZFJFVU9WT2JZOCs4L1Bqd29acndRTTJMcWw2MktkQUNkCnNHak9LdjU0dXNwaXJPT0o4YzF6eVZxUGZRUzlTQzAyUm56WTlLSlpNRnczRnM0Q3F5S2sxNmFoOGY3cGsxWmwKbnVMaDk3cnI5Z0I1L3ZGMGVZSURFWi90UmtIUWdiZ2gKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUxISjNpSnhyNGs5V0d5dnJuVW1VWFl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1URTBOVEkxTkZvWERUSTJNRFF5TURFMApOVEkxTkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXN4b0h3SnFXeUJpMUFhcDJzNjc4MVhOU1d4VFkKR3ZhVENsNU9sNEdJQTliaEtOamkzdXJaeUJoQnhuNkx6QXdoQVZubXRTb2pheWJPbzh0MHhpUGw2bWJobHZhUwpwRG1KZnhWQkE0MDlVNit1Q210OHZlYnZKc096VUFnVHRtNEFUblZsVEhhdjJSUS9Yek0yc1RqS3lkSEIyditLCkwxQVdOSlJrWTIwRFVnKzNzRm91ajlkKzZKNTRUKzExb2o4bE1hVmRKMXdSdnJKd3h0akQrQmJ3d0NIN1VINHIKMDNvSnNTNkNudTR3R2t4ZGpDcmNERFpZeE1mVkV3OVBhMjNodjVIZkk5OWxIQTNZUTdDa1lQejh0ak1OTXFYKwp0NE5aNFJNOGF1VitVOVBTOFV4WjBFWFhRdElyVUVDZjRlTFRCbXBvWWNGMkcrbXNWNEY2TkxobGNRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUmU0YVYwS0FlRlBQMnIyNEVab2ZCZgpkS3ltMURBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBTGlFc0ZrOVljdlNiV3NLb0VUS2dRQ2xQKzRCWVdFZ2VmWWZvZDl1NXp0REtkekkKeGNoZTFNUkc0TElRb08zU1cvK3puWmFRNFFIMnQ4OXh0bzVMeDBXNmFHM3RGcnlPS2RUREs2M0M0RmFQOVBWMwphQWVBaDk0Z2JXUnhnT3RKS3RGN3NXY1hJL1B4OVdmRXlzbjVzbi9nVG90ZGFmSlUrNVFnR1Rhb1FPN2VjdHdtClhqeUZHdU5PWDVoNUs2QTRZT3NzeEpvbG9wTTByS25XY3p2aWpDaUEzd3NSaHpkUDRvOHF0SjN2ZTRWNVh3Q20Ka0ZIcE1NZW01bHQ5WEZIVmRhdVFMd29lc2xUVzNXWUhuOVhudGxUWmNlM1ZJdkJsQVVqTk5iYU9CNWJLLzdaSwpmeWFyaUlaNEJ2UjVpR3VLdU04eXBLNHJTb0ZGNzJXZTdOQTdnNVE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc3hvSHdKcVd5QmkxQWFwMnM2NzgxWE5TV3hUWUd2YVRDbDVPbDRHSUE5YmhLTmppCjN1clp5QmhCeG42THpBd2hBVm5tdFNvamF5Yk9vOHQweGlQbDZtYmhsdmFTcERtSmZ4VkJBNDA5VTYrdUNtdDgKdmVidkpzT3pVQWdUdG00QVRuVmxUSGF2MlJRL1h6TTJzVGpLeWRIQjJ2K0tMMUFXTkpSa1kyMERVZyszc0ZvdQpqOWQrNko1NFQrMTFvajhsTWFWZEoxd1J2ckp3eHRqRCtCYnd3Q0g3VUg0cjAzb0pzUzZDbnU0d0dreGRqQ3JjCkREWll4TWZWRXc5UGEyM2h2NUhmSTk5bEhBM1lRN0NrWVB6OHRqTU5NcVgrdDROWjRSTThhdVYrVTlQUzhVeFoKMEVYWFF0SXJVRUNmNGVMVEJtcG9ZY0YyRyttc1Y0RjZOTGhsY1FJREFRQUJBb0lCQUJYdnUwRlk3ZHptUWMxSgpicTZGWVV4WGlwL0RSdERPb0tYbGRTVFRaYkJxc2p0SmpVZ1daY1EvVEZjZWlzcmNOWEt2NnpVSFN6MUZqSXU5ClVMa3dEbW9PWGRVYXNFMVRDc2M0K0RTU0tRL0Y5Y0FxK0NWZVVxNWh5K1dpaDUrUmk1SVFpTzY3bnNBczNiSXcKV0tPT1BEQko4Nzk2Q3hmT2JGbldUeEZxZWJ5a0liU3ByVG05RWhNRFF1OW9aRHB3M2hTVzFhT1ZXVi8yd1NYdwpCTTZPM2pzNFNPVFhxUks0UU5VUXJMT1RheHk2eDJSeElHZm1JUlBmVnBvZG5oUFZGS29LTTBQc0pCbFFjZjdPCnQ5NWFCQ0hpMmhCZ082V3c0NWVCYlh6cG5CNlR3eHU5UXBpcjM5cDVrMUxtWUJ2YjVxQ0RnNkJNNHBhTTJrcFkKQzBZSy9GRUNnWUVBM1l6OG9hakc3blEwbWVkMVFCRGNENmlxRG9SVDVYNHBMU3RqOFhWN0NWS2ZYaGFaS3AzTApqZHdiT2Y3NTZadXBvS2ZneXhVNzJQZW5IOGZSN2NIOXZ1L1FrbWhlQ0JLNUVuSTRIMzhrZHErWi8wM1ZMTm9pCjZTMEgyMXlFVmFSSUdtNmkxaFIySEJQQjZPUE9FVXk0S0wxVFg2Q0dRNnVUaXV1UTN1UFlkbjBDZ1lFQXp2TlMKeGp0WXhrbFE5bWJWSjd0aTRFckxWWExQb1FndG9qM2cranJNT2tnRkxZajRUV052ekREZ2xSQVZmRHFFWDFncgpiQzBWTWFJUFQ4eEU3dzdxRzhKdHF4RHVtQllxbWVUM1ZWeEFtdEtkSTFtZ3dkdHlNZjJHR2VTNW1HNDc1M2pMCnNVY3lyU3dGSXF6eGhTcTkxVHMyV1JqN2swZ3pxUFU1ejljQmVRVUNnWUVBeGJwZ2RmN2xuRWVGOHAyS0hXVnUKb1dNTWN1eFMzQXpldnZ0c3RVRCtUL0czWGdlWkoxbXhJNmgvZkNFOTllb0JWK3E4UzBObUtGdk9naVNhRFRJSApQdk5WR0hXaEJsOS9ZU0VqU2FqMWFCK010emhGdTBQcnlHTnlFYXJlU0hqWUNROFlzU3VOeGIwMFlKOS9lQjBhCmR2R1JpVlVBdjBCUDY3b1ZqM2VWNXhrQ2dZQlEyZmRJd3Y3WDJPVHNueGcvd1pITGx1MEJvUzFFK0hEN3Bia3oKaWEwb1IrTGQrMWttd3VaMm05SGg2cnE2SWhKOVBYRVpmak45aEpiKzBndE1ha05FUFIyamE2WUxmUDEveWxobQozUGZRaE9Bblkyak8wL0UxWHByNW1zWjNxdmwwWVZrVEZZSFM3aFBEakZWL2RVZGMreGtzamZvYmZHWFNhSndCCmV6cDBFUUtCZ0NmVHNENkdhcnVwd2ZYYVFsMWU0OUZhaGlXQklhM0ZtWHpnTWxlQW1taDlLZHdqUkhDSElTblgKRzlGdy8xVEFEWk1JOUlKcmNQM2UwdmxhNktVemhhck01QkhhYy91d09uaEV6U25ZYTdrLzlvLzZKdXZ3ZUJ1dgpmWmNRMUgwVVYyblphb01sdnRtUS9xMEtBNU9oWTlVM2Q0WHk1L3R3VCtJenlQQ3haanZFCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5sb2laREk1TVZYWlE3YmhaWkRCdDR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1URTBOVEkxTkZvWERUSTJNRFF5TURFMApOVEkxTkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1TEJqWEZsSFZ4dVMzQ0xOWi82bkNGR0NRSXNtcXhlakgxcWRiMC9vWEcxYmVtUE8KTWFjb0FuSWs1c3NtaGY3QjRpSU42a2hHL3M0ejBSYklqNEdoaStrVWliWVdkUFVtY0ZuZmo5Yi9Bb2hvRGRzSwpHay91b1pTcG5DWGF4WTdpZ0ZLclhMTmhVWGpWbVFWcTB0cUllL0FRYmZpYWt6VnRacFV6SVZXenFhanIxNHczCkVtWTY1NkpzK1dkN1ErMlFmT09pRVJCZHZMYUVIdnM3R2Q0Qm0zUkNqeTNSektNSk14Vy9JMlJCTVRrWmpSWG4KRENYZ3VlSDByUXY2eU42OElZR2xpbGsrTGRHZHNzQmJFNTZrS0tpMUFTVS95N08ycyttVUFJZ3FlWVFQZzk1aApFaHlQVjVIamtQblV3cTZML3VnVUw3OHh1aUFsZ01qK2FSZjY3d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjdocFhRb0I0VTgvYXZiZ1JtaDhGOTByS2JVTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmtJY2czc2FSSnBNZEJsWUdibE5aTGkxbW9DcDRWczVZSXB1Zm90UVZyazQ2ODN4WDFOUXhKCmVLWEtDUnVQcmxUNTBFQkVoWHk3RTBwSWJNREtNS3R3YklBQjRwOUlRTmNQZ0dpWHpDRFZpWGZ5STRNcHVjUDcKMWw3bVpXY29sb0FMM21wWUVjdjZqZ2R5RHZmMDcwWmttUFcrdDBDZHIwdlhhRWpsYkwwUmZZZExwTmQ3RjFQYgpZcE1PaGFwT3BPdjcwdjFEd0hhdDZGQ0RxSmtJbU1hZFJFVU9WT2JZOCs4L1Bqd29acndRTTJMcWw2MktkQUNkCnNHak9LdjU0dXNwaXJPT0o4YzF6eVZxUGZRUzlTQzAyUm56WTlLSlpNRnczRnM0Q3F5S2sxNmFoOGY3cGsxWmwKbnVMaDk3cnI5Z0I1L3ZGMGVZSURFWi90UmtIUWdiZ2gKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZVENDQWttZ0F3SUJBZ0lSQUlLdDdPVW5JUkVVWStUY2UzMXdXdDh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1URTBOVEkxTkZvWERUSTJNRFF5TURFMApOVEkxTkZvd0x6RXRNQ3NHQTFVRUF3d2tLaTVuY21WNWNtOWpheTF2Y0hNdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE2ZDRndGhaWDFKOTkKMDRIQUxabVFCcTZxM3pRckNXUTN1ek5Ta2lFaER0OUg5eXlFTnZISVdJdEZ1VjNSa0pHL3JhZGFwT1ZUNWlUUwo5WlFaaDFwbzFmcDFDSE9MRWdKWGNxcFljVEpUODlXdHAxTjJzZHAxUjM0b0ZGbHV2WFRtSHRUQXNWZnluUHExCmlmdXdKY0hFVXhROU1ibDBPVURwem02VzVQeFN1Y25IUTRJemFpN2h1bUNZY0pVZnNKSHYrU2JWQlhrNjBUUkoKS2hwY1lwYWFybS9KV05xUENZbW1hcUxZU2pZTU4yOWY0QUN0SzhyRUVPNEFWUmRFR094anl4a0Y5d1pVT2N6MApoTThHbXdpV2IxczY3TTRnQUpZbHhwYmFXUFhzNTE3RThjeld5M2JHUW5qak85VEkxQVo3ZC9Pc0Q1VFp6N0RRClpnZi9FSHZJQ3dJREFRQUJvNEdTTUlHUE1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJlNGFWMApLQWVGUFAycjI0RVpvZkJmZEt5bTFEQXZCZ05WSFJFRUtEQW1naVFxTG1keVpYbHliMk5yTFc5d2N5NW9kV0ppCmJHVXRaM0p3WXk1amFXeHBkVzB1YVc4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDMlFDb3dVUUtFenF1MG4KVGN5Q0hxUGNFcXNoOEZCS0JvSmlySFlReC9xVlc3M2VvTEFCM0dWa2VHZUZNTVVVNUFUMDBWUHd5dStKZmN4SwprUjRBR1JneS9WS2ViZXczNlpyeWtmbE13SGo5S2NnYzVodUZDcHdwK3IwUWFqRFJ1MkUzT3pSVkw0YVBpMm5lCmZwV3dBNm9MMy9zN1hxOWRXK0JueUhoRTdxUWgvNEcybEdVZTlwaFdBQ21xdWVqTEdvekx1U1gzc3FMaHkwY1YKOXZneGJUdys5b1dZak96dFdXcDNxeFpRbDE3cCtaQ1BiNjNyYXRaSHBzOE5TU0RxTkk2SzJ3OEVYVTNjWFNRVwozSjNoQUd6WjJpZ2tPQW8vOFNDTkxURGxXS05Uek9PeEtMY1BxeUVGRlZLZE9qKzlONUlQSHpVNzFBRGhlVmExCkZvWUxROTA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNmQ0Z3RoWlgxSjk5MDRIQUxabVFCcTZxM3pRckNXUTN1ek5Ta2lFaER0OUg5eXlFCk52SElXSXRGdVYzUmtKRy9yYWRhcE9WVDVpVFM5WlFaaDFwbzFmcDFDSE9MRWdKWGNxcFljVEpUODlXdHAxTjIKc2RwMVIzNG9GRmx1dlhUbUh0VEFzVmZ5blBxMWlmdXdKY0hFVXhROU1ibDBPVURwem02VzVQeFN1Y25IUTRJegphaTdodW1DWWNKVWZzSkh2K1NiVkJYazYwVFJKS2hwY1lwYWFybS9KV05xUENZbW1hcUxZU2pZTU4yOWY0QUN0Cks4ckVFTzRBVlJkRUdPeGp5eGtGOXdaVU9jejBoTThHbXdpV2IxczY3TTRnQUpZbHhwYmFXUFhzNTE3RThjelcKeTNiR1FuampPOVRJMUFaN2QvT3NENVRaejdEUVpnZi9FSHZJQ3dJREFRQUJBb0lCQUg3Ykk0bEJzMkM5SnNaOAp3aDY2Qm5ycGNmeGkwdGxrU0NxK0d4THk3M2lldXUyamN4Qk90R3I3R05ZRXd2RVZiaENuRDY4VVNoOHphRThYCmg0VjVFQmJKcFlQeEVNV3pDWFpFV25jRVlxK0gvNHNjNWV4eFlGNW9XeHMycTdBTzRlaGxaU1NOWFNlemdwZVgKTTZRM1orUGN2WmprVE52bGp5MlBwVUFPY2wwZHdmUDY0UGVUdVZrK0lTbmtuMWdVVGQ2Q3pqZHp5STVTUFd5UgpjRWJvMDd1b2lrbFA2b1NFbDJNcmk4RFdYekxYazhOTHJiUDFtdlZ4RnhJTnBYOTNsclVkU1p6eFJaRzBUbUZaCkEzZUhUaVdDWkx0TUl6VDBDMGdNVWVXWFd5UEsvTEFjZHJZd3JNRjJHb2p4RjhGbEdFOWRGcHZMaHhnMnZMUjQKakxRaEVka0NnWUVBN25lZ1Vid2NtSkh1ZmpQdDVWbTBubWVSS3M4TUNDTGJRUjJraWxzaUdoWXoxMXd5RXZKagpVcGFZOHV0akhrLyswMGU4MjVycWk1RlNqaXl2c0Q4VlkvdFZlbHFRTEVtZUpmdjZ0L1RlS2xxcFdpdWFYR2llCndranlRLyt3NVY0Unc2R09yOFpNYkNQVFNkM0pMQ1ZrTnJTYmpJYVhxcUQ5aE9pSHRTQjRwa1VDZ1lFQSt3L3QKek5ZRzBJazJ0ZEJ5bDNnU2g1UjVoaWt3eFlYRzUyZ01OczFQa2J6T3g5NFF3UVMycWhLMldNTUFMcVI0Q3ByQwp0cFhNb2ppSG5mSzAwbnk5amtOZnZuNTlqaWR1ckx2a0gyZUxhMUdmRXRQbnJhbzRUTG9MRjJXckk1V2RPWFlrCmJHRHZ0a1l0RElRcUo3RnQxbjQzUDlPakVWUGNSV0hMdUxJL2dnOENnWUVBczVGMU1kY2JHWEJhVE1KQjA4RFgKRjZrWlVVa1Q0RlNQRWR1R2VZRGlqdzVFLzFpM2hEanR2ZFVWVzJjUS9sUnlxUnFPQmpnRGdoRnVQdzA3UnRaWgoveTNWVWdzOElYMVdEM2hOZFpSNGJ5QlNBa3B2TkVLN3VjVkFXU0FEVHRTbFA5RTZKdmFGdWJESWZBajhZYmZPClhMdG5ua3dEalVNcFpKbk5Cd0ZxbUprQ2dZQlF4UU1nRHdzS005cWlDM21TT1ZMY3cydUZPZU15NktMZzk1eFcKVlI3d0orbnVhd2JBMGg5aC83c2lPem5ueDRuRy81cjgycHlHNCtEZGM2T3d3K2pIeCswWmYrQXN4NHJYajJzSQpuMnMvRDNjNXUycWhlRTI4Z1czb0RSRk4xV2hMZ0RLZm0yQURKL2grT2xiRmhsTnIyaGMwTllZVW9RSVFZRElHCkxYSTVDUUtCZ0dzemNEN0JRaXExUjFoT0hsTmMxaHMyTTg2OTlDeklIaFQyWXpqNFZET2d2UVJJbmVRYStlNjYKWXcyL2JNRWgyL0srY2hpNVBGUGpERDR4Yndmdy9HY1VIbnFOVk5TZXpRZDFwdnlHYUszMkMzWkdkb241SmVzNgo2eUhrc1VIMFpTK3VzWGdUV0FNbjlvdlIwSm14MHptem9rN1FtT1krVGhXVmJVUTJCSy9xCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: af6dfa5593ba9853a9ddcf6526f507915b131358cfe7d8e85f135258e2def2b2
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.private.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 157ff778ffd2a3446cb197d94c0a19ddbc5ad72cbbeb4232c1f5873d02aa515e
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.private.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.private.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.private.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
