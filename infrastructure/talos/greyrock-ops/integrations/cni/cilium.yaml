# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: greyrock-ops
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: greyrock-ops\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlkTlB0Q3R6c3k1RUVWWjlrdDM3d3N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeE56RTFNVE16T0ZvWERUSTJNRFV4TmpFMQpNVE16T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3WFkrcjRsS243SVppYWdaSmpHTno5eGpwWjFBd05jVXY1TGdQRUlNVngxcTBBSG0KQ0Qxa0xwRnY0ZmxOajd5UDMwU09CVmJDT3l0OU1ENXg4eFhTSzdSTjFxTUIxaDZ3YUVzUFhOaHdibTNOZCtqNApPdWZOMkFlSWVReFNQYzRKQS9YZnR3eDRsTTc4VGZWcTVtZzI5SFJWUEtGV0pxWGRlWGN0bU5laWJJakE2VDgwCjE0TUlTTFp6QjBSN0ZuZzBiN253YWFwd21TWDBuWEoyTWdhdVRBUEw1MmRYSWoxQzVjNGxnQ1FYQVFvanN5UWwKYTFXK1FzRkEzZ3VJYkhOdDdoSnh3ZjZGc3BOK2pYaFF5S0VlRnBHbGgvZ29VcjlCb0FkK2FYRVdrc2ZEQ0NOSQphd0pnaGxpWnZYci9QYlR0ajE0WVhydVZMVFBtUTNaYjZjTXA4d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjIyS1N4WU5ySkhGOTMxbDZJbmFnVkVzSDdLTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzNsYnRieXFXeTNkMnY5OXRUSFdnR0cwcThGTXdPTnVuR3BmcWhtbExJRVlrN2JRQTVoeHhNCjlKZlozbFlPZkVseCtGM0h5cC81MEFQazdCUi81blh0UlhBbFN2T1VwQ1NpTnJKTDdjczBFNVFhbjN3T2llZlIKNDU1OXNMd0hpNVpFWkVPNWVpanNueUgrR2JFUytFSWRaeWdzR0J0VWV1SjFZQnZqeFdHT2Z5V0pnVEh1cTU5RQpGQzBySDZpWmEvalFMaHhtdUU0dXNNVXdXNkRVUSsvaGxaTVZlZ2pEcTgvOXpaYkhDcTFQT2UzSnVaLzRqRWRiCklRZEI0dlNLb05xUnVRVEtySGMvajU4Y2ZvdnFMQk1ncVVGOTBQSjlJMkpORXF5WXV4ckZHa25rb2ZKZ2g3SEsKcGN1Vnh6ZU5sS2UrM29Td2RscnA4RHRhNTN6U3V3SmoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBd1hZK3I0bEtuN0laaWFnWkpqR056OXhqcFoxQXdOY1V2NUxnUEVJTVZ4MXEwQUhtCkNEMWtMcEZ2NGZsTmo3eVAzMFNPQlZiQ095dDlNRDV4OHhYU0s3Uk4xcU1CMWg2d2FFc1BYTmh3Ym0zTmQrajQKT3VmTjJBZUllUXhTUGM0SkEvWGZ0d3g0bE03OFRmVnE1bWcyOUhSVlBLRldKcVhkZVhjdG1OZWliSWpBNlQ4MAoxNE1JU0xaekIwUjdGbmcwYjdud2FhcHdtU1gwblhKMk1nYXVUQVBMNTJkWElqMUM1YzRsZ0NRWEFRb2pzeVFsCmExVytRc0ZBM2d1SWJITnQ3aEp4d2Y2RnNwTitqWGhReUtFZUZwR2xoL2dvVXI5Qm9BZCthWEVXa3NmRENDTkkKYXdKZ2hsaVp2WHIvUGJUdGoxNFlYcnVWTFRQbVEzWmI2Y01wOHdJREFRQUJBb0lCQUJHcUdrOHMyZ042MzVvUwpIem05akpWT0trc1U4TFNxN3RvUEx5cFJYWThXd0luOW9tTmVONmVJNEE1aUZSTHF4TGcrS2ptU2ttbVVydm1ZCnVnN1lEeml1WGUwYk5TKzMzYU9vTnQ3alpHQ3c1ZkhzODcxdExQNXNzYWxiMXFhT0NZU3pEcHBJS1RwdEs5eHkKYkRCZGs2YitlRW53OFV6V0dFTGUvdXJWeFo3ak5MdSs1QkpBK0pWVHNRL01xeHllR2pZWjU5VzFUQXg4cUlyMgpvVjlVSDBsb1lBMnZLNnA2dGk1VzNwQ1ZZZEx0S3ZLV2w4L295NjN1NmNkNG5JM3huekw1RlJJajg1OW9id2RnCkVpL0poK0RvVDJuMWJkVFUwRVBDb0JkcUdWYkxlUU9kcmFlanhmWWNNejZMYVE3b1hGV0JMWEZna3EzdW1tcFoKaFZhV2ZRRUNnWUVBd3hVQmNUMHBnU0VSM3JMVS9HWldjajdxTXhrazlzbTBNQ3dpejFkbDVrdEVnN09sTVZscgpvQ3IydHd0WGI5ZWJGaFF5WGxsR0VBOTlvelNoQ0M3NFZTVXY5TDExSXh4U1pIc2IvRkNKdk9BU2RHYzlGZlFjCkdNODNpKytTbHNrcmVPSnlJeEtMNnhmelArTmQ4Z1JjYWVjNUdtalRURkErbVJaMU1CTHRYelVDZ1lFQS9kKzQKK3Y5d1ZrbFhwSnU0Uk1zZUMwQmc4S3IvUFgrcnUrY1VRZnFRYWFZUkJDMmhrNU1uMm5pU2JpTXRFRGZaN01hVQpQZVRiMlFrT2xIMkJtZmhzMkQ3eWtuRDhJaG5ZY1FLbjVrV2ZSQVNGVnEySFpzN0g1MndSZmw0TnNtYldlc2ovCnp0OC9IaFB6VXp0ZWNBaXZwZmtGWVJwRk03VXo2dWtTVEFGendZY0NnWUVBdStQeVpLK0UxeE1UMUFzbjZnVmoKQTF3blU1bkhLVTV5RnVlYmkxbmhFaUt5VmFyajB4a04rTkVJbUpuNjJBU3dJVjdJZUdqQmUxeUFKSDNmRHpPMgpDTVB0WVdwTWRNbWxiWlBKQzRaQ2MwRFpaWFc5dHZSTFQzWGRTUkV3ZmJ3NSs0OFdZVU5Pc2RwNmRiRTJYWS9uCnRqUjJva0lPS1BVc3BXT2s4TzE1NUhVQ2dZRUExWWhlVzJlTXdsYlFDOWthWldwK3E3SUxsNElNUzFyZVJKNjUKVUVHRFJBbDFHSkdVN0w2Q2IrU29MVkVTN3lnNitVZVJtbm1yWE9LY1M5TkF0aFBZNFE0WkU0bEsyUmZxRUN2Twpzd1Z1VDFTS0hueTRmWVdCYUtwaUVHcmxsRitoR1FlRStpaVdPeU5HcjRRcEM0eVN5TVFxZlNFT2djNXdpNjVjClFHZWNTSE1DZ1lFQWpQcEx5YnZTc05DTnFDRHpucno4NkZwWTUyTGZoT3REMGdkU29ueFdGRGNUMk4xNXRFMzEKWGJwb09jSk1MVTJQQ2UyaExkVU5vdkJFYlgzakdEZ2JLN1lQVGNBZjd3cDR3NFlGV3Vpbk9nR2pqV052dGEvOQpJL1pSb05QejhaQ2l0NHVNTENRT0l4TkIxNXZ4dEtqM3BOVmw4UTMrc0NBdGN2eVBuU0xOK3JZPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlkTlB0Q3R6c3k1RUVWWjlrdDM3d3N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeE56RTFNVE16T0ZvWERUSTJNRFV4TmpFMQpNVE16T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3WFkrcjRsS243SVppYWdaSmpHTno5eGpwWjFBd05jVXY1TGdQRUlNVngxcTBBSG0KQ0Qxa0xwRnY0ZmxOajd5UDMwU09CVmJDT3l0OU1ENXg4eFhTSzdSTjFxTUIxaDZ3YUVzUFhOaHdibTNOZCtqNApPdWZOMkFlSWVReFNQYzRKQS9YZnR3eDRsTTc4VGZWcTVtZzI5SFJWUEtGV0pxWGRlWGN0bU5laWJJakE2VDgwCjE0TUlTTFp6QjBSN0ZuZzBiN253YWFwd21TWDBuWEoyTWdhdVRBUEw1MmRYSWoxQzVjNGxnQ1FYQVFvanN5UWwKYTFXK1FzRkEzZ3VJYkhOdDdoSnh3ZjZGc3BOK2pYaFF5S0VlRnBHbGgvZ29VcjlCb0FkK2FYRVdrc2ZEQ0NOSQphd0pnaGxpWnZYci9QYlR0ajE0WVhydVZMVFBtUTNaYjZjTXA4d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjIyS1N4WU5ySkhGOTMxbDZJbmFnVkVzSDdLTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzNsYnRieXFXeTNkMnY5OXRUSFdnR0cwcThGTXdPTnVuR3BmcWhtbExJRVlrN2JRQTVoeHhNCjlKZlozbFlPZkVseCtGM0h5cC81MEFQazdCUi81blh0UlhBbFN2T1VwQ1NpTnJKTDdjczBFNVFhbjN3T2llZlIKNDU1OXNMd0hpNVpFWkVPNWVpanNueUgrR2JFUytFSWRaeWdzR0J0VWV1SjFZQnZqeFdHT2Z5V0pnVEh1cTU5RQpGQzBySDZpWmEvalFMaHhtdUU0dXNNVXdXNkRVUSsvaGxaTVZlZ2pEcTgvOXpaYkhDcTFQT2UzSnVaLzRqRWRiCklRZEI0dlNLb05xUnVRVEtySGMvajU4Y2ZvdnFMQk1ncVVGOTBQSjlJMkpORXF5WXV4ckZHa25rb2ZKZ2g3SEsKcGN1Vnh6ZU5sS2UrM29Td2RscnA4RHRhNTN6U3V3SmoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBd1hZK3I0bEtuN0laaWFnWkpqR056OXhqcFoxQXdOY1V2NUxnUEVJTVZ4MXEwQUhtCkNEMWtMcEZ2NGZsTmo3eVAzMFNPQlZiQ095dDlNRDV4OHhYU0s3Uk4xcU1CMWg2d2FFc1BYTmh3Ym0zTmQrajQKT3VmTjJBZUllUXhTUGM0SkEvWGZ0d3g0bE03OFRmVnE1bWcyOUhSVlBLRldKcVhkZVhjdG1OZWliSWpBNlQ4MAoxNE1JU0xaekIwUjdGbmcwYjdud2FhcHdtU1gwblhKMk1nYXVUQVBMNTJkWElqMUM1YzRsZ0NRWEFRb2pzeVFsCmExVytRc0ZBM2d1SWJITnQ3aEp4d2Y2RnNwTitqWGhReUtFZUZwR2xoL2dvVXI5Qm9BZCthWEVXa3NmRENDTkkKYXdKZ2hsaVp2WHIvUGJUdGoxNFlYcnVWTFRQbVEzWmI2Y01wOHdJREFRQUJBb0lCQUJHcUdrOHMyZ042MzVvUwpIem05akpWT0trc1U4TFNxN3RvUEx5cFJYWThXd0luOW9tTmVONmVJNEE1aUZSTHF4TGcrS2ptU2ttbVVydm1ZCnVnN1lEeml1WGUwYk5TKzMzYU9vTnQ3alpHQ3c1ZkhzODcxdExQNXNzYWxiMXFhT0NZU3pEcHBJS1RwdEs5eHkKYkRCZGs2YitlRW53OFV6V0dFTGUvdXJWeFo3ak5MdSs1QkpBK0pWVHNRL01xeHllR2pZWjU5VzFUQXg4cUlyMgpvVjlVSDBsb1lBMnZLNnA2dGk1VzNwQ1ZZZEx0S3ZLV2w4L295NjN1NmNkNG5JM3huekw1RlJJajg1OW9id2RnCkVpL0poK0RvVDJuMWJkVFUwRVBDb0JkcUdWYkxlUU9kcmFlanhmWWNNejZMYVE3b1hGV0JMWEZna3EzdW1tcFoKaFZhV2ZRRUNnWUVBd3hVQmNUMHBnU0VSM3JMVS9HWldjajdxTXhrazlzbTBNQ3dpejFkbDVrdEVnN09sTVZscgpvQ3IydHd0WGI5ZWJGaFF5WGxsR0VBOTlvelNoQ0M3NFZTVXY5TDExSXh4U1pIc2IvRkNKdk9BU2RHYzlGZlFjCkdNODNpKytTbHNrcmVPSnlJeEtMNnhmelArTmQ4Z1JjYWVjNUdtalRURkErbVJaMU1CTHRYelVDZ1lFQS9kKzQKK3Y5d1ZrbFhwSnU0Uk1zZUMwQmc4S3IvUFgrcnUrY1VRZnFRYWFZUkJDMmhrNU1uMm5pU2JpTXRFRGZaN01hVQpQZVRiMlFrT2xIMkJtZmhzMkQ3eWtuRDhJaG5ZY1FLbjVrV2ZSQVNGVnEySFpzN0g1MndSZmw0TnNtYldlc2ovCnp0OC9IaFB6VXp0ZWNBaXZwZmtGWVJwRk03VXo2dWtTVEFGendZY0NnWUVBdStQeVpLK0UxeE1UMUFzbjZnVmoKQTF3blU1bkhLVTV5RnVlYmkxbmhFaUt5VmFyajB4a04rTkVJbUpuNjJBU3dJVjdJZUdqQmUxeUFKSDNmRHpPMgpDTVB0WVdwTWRNbWxiWlBKQzRaQ2MwRFpaWFc5dHZSTFQzWGRTUkV3ZmJ3NSs0OFdZVU5Pc2RwNmRiRTJYWS9uCnRqUjJva0lPS1BVc3BXT2s4TzE1NUhVQ2dZRUExWWhlVzJlTXdsYlFDOWthWldwK3E3SUxsNElNUzFyZVJKNjUKVUVHRFJBbDFHSkdVN0w2Q2IrU29MVkVTN3lnNitVZVJtbm1yWE9LY1M5TkF0aFBZNFE0WkU0bEsyUmZxRUN2Twpzd1Z1VDFTS0hueTRmWVdCYUtwaUVHcmxsRitoR1FlRStpaVdPeU5HcjRRcEM0eVN5TVFxZlNFT2djNXdpNjVjClFHZWNTSE1DZ1lFQWpQcEx5YnZTc05DTnFDRHpucno4NkZwWTUyTGZoT3REMGdkU29ueFdGRGNUMk4xNXRFMzEKWGJwb09jSk1MVTJQQ2UyaExkVU5vdkJFYlgzakdEZ2JLN1lQVGNBZjd3cDR3NFlGV3Vpbk9nR2pqV052dGEvOQpJL1pSb05QejhaQ2l0NHVNTENRT0l4TkIxNXZ4dEtqM3BOVmw4UTMrc0NBdGN2eVBuU0xOK3JZPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlkTlB0Q3R6c3k1RUVWWjlrdDM3d3N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeE56RTFNVE16T0ZvWERUSTJNRFV4TmpFMQpNVE16T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3WFkrcjRsS243SVppYWdaSmpHTno5eGpwWjFBd05jVXY1TGdQRUlNVngxcTBBSG0KQ0Qxa0xwRnY0ZmxOajd5UDMwU09CVmJDT3l0OU1ENXg4eFhTSzdSTjFxTUIxaDZ3YUVzUFhOaHdibTNOZCtqNApPdWZOMkFlSWVReFNQYzRKQS9YZnR3eDRsTTc4VGZWcTVtZzI5SFJWUEtGV0pxWGRlWGN0bU5laWJJakE2VDgwCjE0TUlTTFp6QjBSN0ZuZzBiN253YWFwd21TWDBuWEoyTWdhdVRBUEw1MmRYSWoxQzVjNGxnQ1FYQVFvanN5UWwKYTFXK1FzRkEzZ3VJYkhOdDdoSnh3ZjZGc3BOK2pYaFF5S0VlRnBHbGgvZ29VcjlCb0FkK2FYRVdrc2ZEQ0NOSQphd0pnaGxpWnZYci9QYlR0ajE0WVhydVZMVFBtUTNaYjZjTXA4d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjIyS1N4WU5ySkhGOTMxbDZJbmFnVkVzSDdLTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzNsYnRieXFXeTNkMnY5OXRUSFdnR0cwcThGTXdPTnVuR3BmcWhtbExJRVlrN2JRQTVoeHhNCjlKZlozbFlPZkVseCtGM0h5cC81MEFQazdCUi81blh0UlhBbFN2T1VwQ1NpTnJKTDdjczBFNVFhbjN3T2llZlIKNDU1OXNMd0hpNVpFWkVPNWVpanNueUgrR2JFUytFSWRaeWdzR0J0VWV1SjFZQnZqeFdHT2Z5V0pnVEh1cTU5RQpGQzBySDZpWmEvalFMaHhtdUU0dXNNVXdXNkRVUSsvaGxaTVZlZ2pEcTgvOXpaYkhDcTFQT2UzSnVaLzRqRWRiCklRZEI0dlNLb05xUnVRVEtySGMvajU4Y2ZvdnFMQk1ncVVGOTBQSjlJMkpORXF5WXV4ckZHa25rb2ZKZ2g3SEsKcGN1Vnh6ZU5sS2UrM29Td2RscnA4RHRhNTN6U3V3SmoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUl4dnp3bmxQdktVRDVHYlBiUkl4Q3N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeE56RTFNVE16T0ZvWERUSTJNRFV4TmpFMQpNVE16T0Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZwN1V4cGlvYW9SS2ZpZTFOb3pmRHBRQkU2dE4KS2FIZWdaQW1jeUsrV1o1blM1MXFQWVo5LzdZMlRZS0pXSllWam5UeHc4ZkVqbXNHd2pUV1ZrQlhCWUV5YjZSVgp0N00ydkVWKzZ5cmpSNEluajJMaU5xYjZnUWRMTkpVRnRVeHZkdnRqK2MyMVAwS25IV3dxdUVNWGtVMlVXSlI0Cjl2Qy9jMSs2L3M4aStEdWdDN01ISDBlamo1T2ZOeURhdS9zU3lTTXUrWUxmbWk2RGxlNTNEcHdpNHF6WlFhWHcKYi9PblIvN3RhT0FXQU1wRkdPdzVOYmxUbGRGZ0hpaTh0d2tRWnE1d3ArUGMwaUpXVDlZUzhTVU5IWElxR2p4cApIUnlsdDE4cjFUNXZUOHZmZ3UxMkdsQVBvQnFnTHNtTjl1emRWMWZCNkpJZ01WUFJCN05zN0dGNVlRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUmR0aWtzV0RheVJ4ZmQ5WmVpSjJvRgpSTEIreWpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQ0RDU29JbmViZHBmeXRJRnpjMm1FcGZhdE9Id2FJcVdnZ3BORG5BeVlCZE94VnUKYlFlaUVvOGpFTFMwV1A4MUJwdU8rN25lQ2Q5NS9wditXbmkySWRTaTV2dnZvT1MrRTh6Szl5MmdsNHZRbW1idgpISzI4bUNDd1BBbmIyS0NUbmRCVG9rSG5mVzVqMnNudWtnY2NqNXBUNjFVN1d6eHJ5UDAxSDI1OVQwVzNyOE5wCjcrWlJId1hZN043aUh2NGMrRWtvTVZCb0Z5WjhabVhEeFdhL2FuUlFIeTRweXE4cElITmYwQmNJaWhlRU9ROU8KbFpnazFFTzM1UVA3aWV5RXF4bHBESmtUYlRHMVdCN1NUaWFweTZmTGN3RDN3anMyN2g5YXVzUlN3aW1QNGVtTApRY2V4Y0NhaWJZa21wd2dIQitmMk92Z2JJdG9hM21RV1ZGQW5HVFE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdnA3VXhwaW9hb1JLZmllMU5vemZEcFFCRTZ0TkthSGVnWkFtY3lLK1daNW5TNTFxClBZWjkvN1kyVFlLSldKWVZqblR4dzhmRWptc0d3alRXVmtCWEJZRXliNlJWdDdNMnZFVis2eXJqUjRJbmoyTGkKTnFiNmdRZExOSlVGdFV4dmR2dGorYzIxUDBLbkhXd3F1RU1Ya1UyVVdKUjQ5dkMvYzErNi9zOGkrRHVnQzdNSApIMGVqajVPZk55RGF1L3NTeVNNdStZTGZtaTZEbGU1M0Rwd2k0cXpaUWFYd2IvT25SLzd0YU9BV0FNcEZHT3c1Ck5ibFRsZEZnSGlpOHR3a1FacTV3cCtQYzBpSldUOVlTOFNVTkhYSXFHanhwSFJ5bHQxOHIxVDV2VDh2Zmd1MTIKR2xBUG9CcWdMc21OOXV6ZFYxZkI2SklnTVZQUkI3TnM3R0Y1WVFJREFRQUJBb0lCQUZmTk96N2ExRUJ6L1FnTQo3RGhiUE9jdkh5dmJMS2l2aVpqdU4vZXltakVYZUlibzFDWFF6RHE3eUZsOWRod2F6WVVYc3NDMlJJQkJKaFRRClY2WFU3d0IzR1M4NVo4NDh1MHFQVEQyd1BJNFVrbnBHVnVKTG1YbFRUYjNEb3FSMnQ2VDdlSHA0MlRKeFZoNkUKVTAwYWdrR0lsWHNUc0lBMk5rbERZQk84ZjJRTTdpcXJ4Qjhaa1JsNGM1emhDOFRDQnBiMjRkQ3Y2eTlFRXA4WgovUDNkMThVRkhsTnE1WjNSb2h3NWREVURWUVllMEV3M0hMeVJmb3FmZ2grSkdNdEVkTlVTeWtPYjhUbWVhM0w1ClowaDFOdnUrZC9YTEV4aDNlTVJXWlJ4M1BuWjU5N3BMN3VqaWlpWHZxOStIajFZREtsSU9kdWpDemdhSEhSUGgKY3dtUGo1RUNnWUVBeHBBWGkrMldHSWVYZloyQlJPV3BYRktNMDRhbzlHNUlZck5NZnUxUUJyNFdlSVNBZHJIVQpNTyswMXJJVEpkTTBwUnUveU9FYzN4OFozNjFEWEdFdnY5N1JhZ1l0bGw3SXpCQXhUTzM2TEtzckVobFBQRU5YCitBSG5jN2UvKzlrTkl0OEMxdG9pelVqbzlrRFZLUWZzVlE0VkxmL2dOWXphVDkxSC9JRlBZQVVDZ1lFQTljS1cKNTAzbTkrYzJNQmNsVHZFdHQvczN5TzA4TlZrOTZTaWJ2bW5JQTBEL2VUTlI0ek1pWTM1MnRaVlFxQlRzdFJhUApobWhyYVZQd0hwZkxSM05YZ3ZuL0xJVGdiSzhzalBFcXB3cjVTYVdoc1hKeUhiTXZrSDdJd1RsemVDeEI1eERjCkNLNXorajU3d21DRGdOMEpRN0c1Ym84ZVFhUU1wdzUyclN3WkhxMENnWUJKSzFQaDlsejNFUkFiOCt4c3pReUoKdnNteU1NOFZzNFh0Q1JGSlBIM2UzakU5bStZUzF4alFKNlRGOEx6cGxWaXk5dlRITzF6K1EyR3ZjUk4vZVRpMQpSWkI1dDJrWkhqaDBLZ3RndzlrS21OQzRUS2RNRjZ6VThTNnZENmtwVHlSdUV5dmlyR05pcmxsYVZTMjNmdm54CnBjemNOSXdVYjZFTENRbTczSks1V1FLQmdHZEx4Tld2M3Jhd0RneWtqZC9pYTA3N1huVXJrYlR5cjUwQ25vT28KUHBOdmpISEs2azVPdmRPSDRpbHNleHhLdnp0V0lqbGlSbE5kSG40ZFd5bkxCeXRjSEs3L29yekwzRFBaWWc0WQpCTE81MUg2YkZlLzUwckl2Ti81UFFZTnZScnZ5VUNtdCtiMWk2ZTNIVno2Z3FUWTB5elgzSGNhRlIzUW9GaVd2CmRWZDVBb0dBYmF5Nk5LRWVRS3E4NnZyS0Q5K3ZTRHhxWDlUQ2F6bkRLQTQ5Y0hMNGprMkdQdlcvYjUwbURUU28KSnlUQkREaXQ5b0J4SE5NM3IwTFJUL21qWWFoSzQ0d1o4cnV3bVVSaTRtdy9nTU5hb3JSUGJScDNkZ0g4YkdxbAo5V1VCd2Z6Z0hlUkw3emE5VEk0NEZFMFMzY2J6M05NMVJBNE1JbU51dUdUTmlvczZPZzg9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlkTlB0Q3R6c3k1RUVWWjlrdDM3d3N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeE56RTFNVE16T0ZvWERUSTJNRFV4TmpFMQpNVE16T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3WFkrcjRsS243SVppYWdaSmpHTno5eGpwWjFBd05jVXY1TGdQRUlNVngxcTBBSG0KQ0Qxa0xwRnY0ZmxOajd5UDMwU09CVmJDT3l0OU1ENXg4eFhTSzdSTjFxTUIxaDZ3YUVzUFhOaHdibTNOZCtqNApPdWZOMkFlSWVReFNQYzRKQS9YZnR3eDRsTTc4VGZWcTVtZzI5SFJWUEtGV0pxWGRlWGN0bU5laWJJakE2VDgwCjE0TUlTTFp6QjBSN0ZuZzBiN253YWFwd21TWDBuWEoyTWdhdVRBUEw1MmRYSWoxQzVjNGxnQ1FYQVFvanN5UWwKYTFXK1FzRkEzZ3VJYkhOdDdoSnh3ZjZGc3BOK2pYaFF5S0VlRnBHbGgvZ29VcjlCb0FkK2FYRVdrc2ZEQ0NOSQphd0pnaGxpWnZYci9QYlR0ajE0WVhydVZMVFBtUTNaYjZjTXA4d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjIyS1N4WU5ySkhGOTMxbDZJbmFnVkVzSDdLTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzNsYnRieXFXeTNkMnY5OXRUSFdnR0cwcThGTXdPTnVuR3BmcWhtbExJRVlrN2JRQTVoeHhNCjlKZlozbFlPZkVseCtGM0h5cC81MEFQazdCUi81blh0UlhBbFN2T1VwQ1NpTnJKTDdjczBFNVFhbjN3T2llZlIKNDU1OXNMd0hpNVpFWkVPNWVpanNueUgrR2JFUytFSWRaeWdzR0J0VWV1SjFZQnZqeFdHT2Z5V0pnVEh1cTU5RQpGQzBySDZpWmEvalFMaHhtdUU0dXNNVXdXNkRVUSsvaGxaTVZlZ2pEcTgvOXpaYkhDcTFQT2UzSnVaLzRqRWRiCklRZEI0dlNLb05xUnVRVEtySGMvajU4Y2ZvdnFMQk1ncVVGOTBQSjlJMkpORXF5WXV4ckZHa25rb2ZKZ2g3SEsKcGN1Vnh6ZU5sS2UrM29Td2RscnA4RHRhNTN6U3V3SmoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZVENDQWttZ0F3SUJBZ0lSQUxWOENiOGhxN0VKTnpVdUQrVlZ0NEF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeE56RTFNVE16T0ZvWERUSTJNRFV4TmpFMQpNVE16T0Zvd0x6RXRNQ3NHQTFVRUF3d2tLaTVuY21WNWNtOWpheTF2Y0hNdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE0MzhCbTRHUlV4bFUKVmxBSTJhMERRQzJuazNWek4vVzk3dnBLRDZVNGlOd1BLTWl3QUFhNnBGaGFwTW4yMDBWaW5xYVIzR29NNDFFZApmUTZpUjdZNEJIOEJEWVpFME52d1Rod29ZWmcwT2kxT3dIMXduSkltb0tIZ1BiUTVUTDczQXBzYUVXeVNBNCt6CmZPNGlSOHdQV2wrNjZyL0VTY0dMWW12azcwTm1aVmZLbDcwN3NVdnBlWVN0ZTQ2WDZOYXV5QzZ1Zk9DMEZEM3cKQzc0NjY5SC9sSFZmZ0FHa093Ly9maVpScDV6TUVQOHA4RmsxQ2tlNytIT2t0SEMrS2V0MFNUaWx2dFVLVGF2VQovUFNvYmdjSlJWVFhaT3dqazUrOE5qVE95UWZSdFdQYTB6MTRJWjRWbktsLytYekgyTGN1V0RVSnpxNVdKWGozClFwRDd4SmNhOHdJREFRQUJvNEdTTUlHUE1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJkdGlrcwpXRGF5UnhmZDlaZWlKMm9GUkxCK3lqQXZCZ05WSFJFRUtEQW1naVFxTG1keVpYbHliMk5yTFc5d2N5NW9kV0ppCmJHVXRaM0p3WXk1amFXeHBkVzB1YVc4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJOGVia0R1Ri9NRDZDcmcKVkdwekJxc09YMnZBTkQ4bXhvcFNndG1FdENRMnNRalprZjZ1c3RiUVN1SzkwNFVnbkRmZVZZSWdvcmh6dlZtdwp2dEF0SWI5cGdHc0ZlWi8rcjZRTTN5ZWE0eWpHdmU2Y3NvckF1UzZIYVNQS2JUYzUwQ1hKUVl1TXZxQ1ZzWmZmCk5EWWloRHlGRHBsTEFwQnl2QWkyUFFWWDVwM0k1QldINStkcHJOOUU1OHNjM3VSSUJTc2djUWZuWmRiUkpLblYKdi9OSHBKbjJDN29rTTIxeXZVd1F2RDFMRTFpN2JLMTk4cktKcjg5eXoxT3VYdlhFV3lzcHIyZTNTQTY4d01MOApaMjNrQ0ZheWpYdmFtajFyQUtiUXZPV2NCakJDT1dDTDM1K2ZjVzFzN2JqdkZjR1JUSkJsaS9TQmEzRDFjRmNDCk9pUy9nNTA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNDM4Qm00R1JVeGxVVmxBSTJhMERRQzJuazNWek4vVzk3dnBLRDZVNGlOd1BLTWl3CkFBYTZwRmhhcE1uMjAwVmlucWFSM0dvTTQxRWRmUTZpUjdZNEJIOEJEWVpFME52d1Rod29ZWmcwT2kxT3dIMXcKbkpJbW9LSGdQYlE1VEw3M0Fwc2FFV3lTQTQremZPNGlSOHdQV2wrNjZyL0VTY0dMWW12azcwTm1aVmZLbDcwNwpzVXZwZVlTdGU0Nlg2TmF1eUM2dWZPQzBGRDN3Qzc0NjY5SC9sSFZmZ0FHa093Ly9maVpScDV6TUVQOHA4RmsxCkNrZTcrSE9rdEhDK0tldDBTVGlsdnRVS1RhdlUvUFNvYmdjSlJWVFhaT3dqazUrOE5qVE95UWZSdFdQYTB6MTQKSVo0Vm5LbC8rWHpIMkxjdVdEVUp6cTVXSlhqM1FwRDd4SmNhOHdJREFRQUJBb0lCQVFDQWJnVDBTMU5GZkhrMgpPUHltRnB4Tk1QajNzRWlaZ092MjYrbS9wMkNoTXNxRUZiZjJhOVlXVGFMdWdPNE5HNUN2VEEzd1J4WjdoaUdGCnBpdExITDNISEFQMkpLVFkzREZ2aDBuc3ZzWk5TYUs1M0pja2JRWE5qVlZRd0Z2UXpjWVkvSUxjNzFRSEdxc1QKamtSZ0QvMWk0Y1JlSG1DcjJzM2JoRm04RVdyUExvNGc5QmJRdmYydExrYkFLQVNwdXJMOHovd2VyaVk0aFNSNAovam5kbDJhVW1yb0U5eGhEczNjUFp0TktZS0NheUFqRE9RTUw3MFRnQ1VjVW1oVzBVUzNFRjFRRko1RTdLRTMvCkdJb0FnZzZLSFg1N0dCcGx6bFJXaFRpK2Q1Z3N4cWU0VjBqWlM5d3NqeW9OVk1LRUpib25oNDNtQ051QUQyZ3MKWDNRZ2VEcUJBb0dCQVBpZWFZTkJ3eXZ2dUhxZ0lpdDg5b0NUeE1WeitkYmphSEVFSHU3c1RCVEhnVU1WQUN1NwpCVWRxZ0IrMEtXSFFjQ3JnSStUc1ZSbGZCT2lQdXh4ZGd3eWtzM2NZNzlEaFgvS3pnTEoyUWZFN1J3SmpuYU1hCnhvV25kR1MxVXNYS2hJZExqbGhDSUcvZ084ZjVkOWx2M2hkcC9Pbk9oQ0NrQ0NXeUwvTlhTRjlUQW9HQkFPcEEKRGZZMGs0RUFESGNzMjdpNnBqdStCSlBsS3pGV3JFNUMvQ1hZcnV0emMwd1EvZXRsZk15UTBldVdXR3hLWVNxRgppSWxPS01RZkIzbytzTGVhOU5vaVkzRm02enBESGJKVGw4dVBKbGdmNUI1UlgyYjdaWXlabmpKV1dmdjFnaXppCncwQmNxM1R3TkF5VC9WbEs0c0s2VnlRbnNrMEdYaTBwd1RHY2RBSGhBb0dCQUpUZzM5Uk85QjRDWGxsb1BTNEgKbGVGbkc2VVdEeDJFYmsySEp6THg0NWxwNHRrVjRWVk9tQm10Qis1MFIzZWdoeHJWd0FqZEVSU3hWdEloQis0egpmVDk3L1ZBcmFhaU8zWk1MdE55cGZsR0Rxc0VlZ0E1bEFVNlYrVmc1VU1qS3ZsUDZoZElLUHp4ZmJjMFJjWmlPCnFkTWhqK2MrMk5abkE4MzNCMG5VRWEyckFvR0JBTTJlc21LMm5lK3pVajNlTTNTQTZtQXdtS1lWbUlkemxFWVMKU0hFVU5kN1pkWkNFcmM3T1EvRHhBa013c3FkRDF1elRVQmx1Y1J4T1BHc1MwbDRvZDl0dUtpb2w5RDh0SU1raQoxWERLVkJjd3p6WEpxZHVrdXV2akFGa2hNVldZbU02N3NqWXg0aE1Bc2orRU8vUUFadklWVFY2Z05jT2szay80Cmdld0JjRmNoQW9HQVVyTVVsQ2s5eExTQm8rQ1ZxTTZndEk4OFpaNm9DWHU1ZUQ5TVVzMEYzVzNRcytMeVJzWHEKMUxIenBjT3BYMi9jVWttSSt3V0xRNEUrVmI0Q2hHY1IwbTdsT01Db2M4dWxPQlRnL2hnTHNiM2tEbmhPYTYzawpCenBoaUROZDlhZzZFd2tBcGdPQWxTMGwzL1duR1U5S1JHa1lRbC92TzdzeWZkNTRDTTYzODV3PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: d4e6d069c450e80f3258be04d2f0e9e4bba3e39afe1cd81a5201af0879902879
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 157ff778ffd2a3446cb197d94c0a19ddbc5ad72cbbeb4232c1f5873d02aa515e
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
