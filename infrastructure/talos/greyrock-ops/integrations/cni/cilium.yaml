# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
      - ciliumnodeconfigs
    verbs:
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
    verbs:
      - delete
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
      - ciliumnodes/status
    verbs:
      - get
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
    verbs:
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
    verbs:
      - create
      - update
      - deletecollection
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
    verbs:
      - patch
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
      - ciliumidentities
    verbs:
      - delete
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes/status
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resourceNames:
      - ciliumloadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
      - ciliumnodeconfigs.cilium.io
    resources:
      - customresourcedefinitions
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: cilium-operator
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
  - kind: ServiceAccount
    name: hubble-ui
    namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bgp-announce-lb-ip: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: cluster-0
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml:
    "cluster-name: cluster-0\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf:
    "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZEtZRTVLUEZmcUVoTEp5UWhaSXlBekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJeE1EazFOREl4V2hjTk1qWXdOREl3TURrMQpOREl4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREJQVWY0Z3BxdE1RbStkZXpoZHYxNnlBTXFTbjUzRHFlTEtPVWdjZGZNaHNvVGZzZ1UKSTJSNHZENDRCTHB5Y0FhY2xBUXJzL2dTUFBiZUc5RVRPblBIT2tCanlHNDcyRE1IZ0tXK3BINmFZRjBDRFN4ZwptMms0TWkvZCtJdU9MQVorMW9udGlualVpRGJMOFBSOXRmRHo5bHFER3RHRGQzOHFLc1o3c01mZVhEMUV0Tm5CCmcvNzg4Zlo3SkxDMjJuU0lqb3I5S294UnJ5RExvQVRLaSt3b2xvVzdPV0FiZmZsWUdLQ0t4dnJBcVk0ZmR3YmMKS21vWTNKMmdDS2Q0UGRCWnA2R3ZTcWtKNndabWhOaUZaSU9ya3BNbC85RnlCZGxUTktTeEVjaDkrY1FvSXhucwpTcisrZzR3bUt6dkk1ekZ2QUpjYkNWTUJxK0ZpRGNHMUZVVGRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV0NE9qN2M1SjA2eWF2VGg3Ymk0ZHg1VWhzME13RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCWTFXYmdWRFV0VHFoRFNSV2R3bUphL29wMzZSUFpRazNxYVNxYk42NUxKekVOTDNYdTdaS1VQCkhmOEpqNys4V3Zsa3NDMGgvT2NMUjN4VnYrR25xN0RLTzJ5MHBDM1pOY3JObDMyVTVRMVlwY0dUR3JoWlFKSloKQS8vTmJoV243ekFDVmtVOHpMQmxEb0hxV3NiR0hINXd4NnpKN3lpYk95T0RlQW8rVnllN2tpUnl6eVJKUTA0SQpnTjBWaC9jUk9JczhGbGwyRngyZ0xjcnBqSFB1Nkx5N1FLZ09xNDhqNW5zUXZSYS9tZmJ0blFHSGVFZWw5a2RVCnlwamFwa0VQdFV5emV0Q0wrZUZrNXk1NzhWNlY0ajhXYU9ET3c3dVlrMUZScGM3dklVcS9IbWE1UWhoT1NNNkUKRFhUK3l5UU0rNmNXYXhWaVhBRzNRRDYwVzBzS0J1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBd1QxSCtJS2FyVEVKdm5YczRYYjllc2dES2twK2R3Nm5peWpsSUhIWHpJYktFMzdJCkZDTmtlTHcrT0FTNmNuQUduSlFFSzdQNEVqejIzaHZSRXpwenh6cEFZOGh1TzlnekI0Q2x2cVIrbW1CZEFnMHMKWUp0cE9ESXYzZmlMaml3R2Z0YUo3WXA0MUlnMnkvRDBmYlh3OC9aYWd4clJnM2QvS2lyR2U3REgzbHc5UkxUWgp3WVArL1BIMmV5U3d0dHAwaUk2Sy9TcU1VYThneTZBRXlvdnNLSmFGdXpsZ0czMzVXQmlnaXNiNndLbU9IM2NHCjNDcHFHTnlkb0FpbmVEM1FXYWVocjBxcENlc0dab1RZaFdTRHE1S1RKZi9SY2dYWlV6U2tzUkhJZmZuRUtDTVoKN0VxL3ZvT01KaXM3eU9jeGJ3Q1hHd2xUQWF2aFlnM0J0UlZFM1FJREFRQUJBb0lCQVFDWHBtZ2M5eUk4V1FlMAptUWRWeWZRVHIzUU1kSG5iSlgwSEVRai85VmZPQXRvRGdyT3lXalEzTEVRSDRtNFA4U3EvSnNvL0lmWEZHbU1DCjNBR3dmV2J2S3gvdEx4YVRrSkE3aXhLSUVyL29sMGRtbkwvKzhQZ2FTZ2lXd3IrQ3k3b3RRR0R1TW9XeEJWVTcKcDlXMzhsa3VuRjljRkdmb0xKZDNtQ284Vi9nQzRESnhuT3dhY3g3Tll4czNsVTZkeXQrZmJPYWxPNEdqT3Y3ZgpCYjMvU3Y0M2ZHT2FST1lTbWFCamgwejFGRU12OTlZWE9TYklKK0ZrSjI3ZlloT3FkVzJPc29mWlpNc3RMaHJECjlDZmpDQnFsREs4cUk4VUhRalRHRzRwaXJiK3QxQU4wN3luRTZMcXJSTmJPaVh3V3NsV0xlYmxyWXFFYzFxUFIKeUxqVmhROWhBb0dCQVBBOERmZlh5RkFvWnpIaGVMcXREYXBTeDJaNkMveVJLbXZ0L0ZBTDdaZzVpQUY3MXI1TAp5WEs5TkZVT3lpQnF1UUd0dExVVUt5WnZseVp2OHM1TEJjNWZ4MHVIcnAwVXpybnlNU21GRHBRYXpJV0VrbXFuCndTS1pqaEhxdXIxdmk3aWdkdW5IaSs2VTNlRkRrV2Y5dWhhVEtEUmhFTHQ0ckxwRDNkazhDSWdIQW9HQkFNM3IKdE1wMllUVG1jNHpXNlY4dnMyWGFjdmxCN0kzRWIvMW9NRWl3WmVCSkUyWW1rMEFFV1NBQkVnRmJ1bEFrQjlwTAoyc2RTZE5nQ1E1UTQ0WGh1clR5SHRwS3paSmhaOTVYVTVRdTBqeURXSklZcmxpNVBscEFQRCtURnFaUFJtMlNrCk5jK1p3ejAyalJhbzhOSHIxZ25KZmZpS3c4VFFDVGxRTjcxUk0ycjdBb0dCQU9jaThOR0lCSXZUQTg3RFA5UmsKRWlUUTlsY0xrQ0xXVExtQlJXU0N4WHZUeHA2ZTF2TkttYXpTaTlwV20zVHJHY3VhcEtZZ25JK2ppQXNNWk5IRQo3dllyd3VWUnkxZ0pJQWxhRTZEK0N4UEdZUWNKa1pJYWkwRk4rcG9VZk0wczJJS3ZxUm11eTF5bVVJQ2U4UFRiCjgwSXJIZUNmajJqQVozZmpPano3ZkwzYkFvR0FGYUxjZmlGdUdVYlZnVWpiZ0hyY21La1pSNE5idlpHVVNzWDEKdk0xOEJ0TG16T2JrdGVjL0RoUE90b0hTMDdUVmRtUmQrbTk1ZzNESmRQdDlCVkJydDE1ekducnE2TzhiQ28weAorOGJlK3c1RkRDdnNQYlZ6Rm5QZXNhVHJLbkx0cHVkeUYvd0ovWmFMd0lQRHVlclR0SGVOV3Q0SnI5WkVBZGVoCjQ2eHlnSjBDZ1lFQWpmR1ZTOWo5TTAyZ0MwZjBFMzVHenc1azBwNWdLVjVzRVVtQWJRNzNjR1hVNGg5d0dRV00KNWI0V3ZYcGEzSzFEbS81SDYyVW4ySjJNUGhxaE45emtsRUNCSFcweWVSQU5OTlprbGZCOFNVMzZiSmo2ckxxUgpVdkV2V2UzMjRFZGZrcXpOVUxFV3lGb2F5dStwRTdNN2p3UlEwbjZvdy9PZEY4eXhHSE1iR0RjPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZEtZRTVLUEZmcUVoTEp5UWhaSXlBekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJeE1EazFOREl4V2hjTk1qWXdOREl3TURrMQpOREl4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREJQVWY0Z3BxdE1RbStkZXpoZHYxNnlBTXFTbjUzRHFlTEtPVWdjZGZNaHNvVGZzZ1UKSTJSNHZENDRCTHB5Y0FhY2xBUXJzL2dTUFBiZUc5RVRPblBIT2tCanlHNDcyRE1IZ0tXK3BINmFZRjBDRFN4ZwptMms0TWkvZCtJdU9MQVorMW9udGlualVpRGJMOFBSOXRmRHo5bHFER3RHRGQzOHFLc1o3c01mZVhEMUV0Tm5CCmcvNzg4Zlo3SkxDMjJuU0lqb3I5S294UnJ5RExvQVRLaSt3b2xvVzdPV0FiZmZsWUdLQ0t4dnJBcVk0ZmR3YmMKS21vWTNKMmdDS2Q0UGRCWnA2R3ZTcWtKNndabWhOaUZaSU9ya3BNbC85RnlCZGxUTktTeEVjaDkrY1FvSXhucwpTcisrZzR3bUt6dkk1ekZ2QUpjYkNWTUJxK0ZpRGNHMUZVVGRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV0NE9qN2M1SjA2eWF2VGg3Ymk0ZHg1VWhzME13RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCWTFXYmdWRFV0VHFoRFNSV2R3bUphL29wMzZSUFpRazNxYVNxYk42NUxKekVOTDNYdTdaS1VQCkhmOEpqNys4V3Zsa3NDMGgvT2NMUjN4VnYrR25xN0RLTzJ5MHBDM1pOY3JObDMyVTVRMVlwY0dUR3JoWlFKSloKQS8vTmJoV243ekFDVmtVOHpMQmxEb0hxV3NiR0hINXd4NnpKN3lpYk95T0RlQW8rVnllN2tpUnl6eVJKUTA0SQpnTjBWaC9jUk9JczhGbGwyRngyZ0xjcnBqSFB1Nkx5N1FLZ09xNDhqNW5zUXZSYS9tZmJ0blFHSGVFZWw5a2RVCnlwamFwa0VQdFV5emV0Q0wrZUZrNXk1NzhWNlY0ajhXYU9ET3c3dVlrMUZScGM3dklVcS9IbWE1UWhoT1NNNkUKRFhUK3l5UU0rNmNXYXhWaVhBRzNRRDYwVzBzS0J1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBd1QxSCtJS2FyVEVKdm5YczRYYjllc2dES2twK2R3Nm5peWpsSUhIWHpJYktFMzdJCkZDTmtlTHcrT0FTNmNuQUduSlFFSzdQNEVqejIzaHZSRXpwenh6cEFZOGh1TzlnekI0Q2x2cVIrbW1CZEFnMHMKWUp0cE9ESXYzZmlMaml3R2Z0YUo3WXA0MUlnMnkvRDBmYlh3OC9aYWd4clJnM2QvS2lyR2U3REgzbHc5UkxUWgp3WVArL1BIMmV5U3d0dHAwaUk2Sy9TcU1VYThneTZBRXlvdnNLSmFGdXpsZ0czMzVXQmlnaXNiNndLbU9IM2NHCjNDcHFHTnlkb0FpbmVEM1FXYWVocjBxcENlc0dab1RZaFdTRHE1S1RKZi9SY2dYWlV6U2tzUkhJZmZuRUtDTVoKN0VxL3ZvT01KaXM3eU9jeGJ3Q1hHd2xUQWF2aFlnM0J0UlZFM1FJREFRQUJBb0lCQVFDWHBtZ2M5eUk4V1FlMAptUWRWeWZRVHIzUU1kSG5iSlgwSEVRai85VmZPQXRvRGdyT3lXalEzTEVRSDRtNFA4U3EvSnNvL0lmWEZHbU1DCjNBR3dmV2J2S3gvdEx4YVRrSkE3aXhLSUVyL29sMGRtbkwvKzhQZ2FTZ2lXd3IrQ3k3b3RRR0R1TW9XeEJWVTcKcDlXMzhsa3VuRjljRkdmb0xKZDNtQ284Vi9nQzRESnhuT3dhY3g3Tll4czNsVTZkeXQrZmJPYWxPNEdqT3Y3ZgpCYjMvU3Y0M2ZHT2FST1lTbWFCamgwejFGRU12OTlZWE9TYklKK0ZrSjI3ZlloT3FkVzJPc29mWlpNc3RMaHJECjlDZmpDQnFsREs4cUk4VUhRalRHRzRwaXJiK3QxQU4wN3luRTZMcXJSTmJPaVh3V3NsV0xlYmxyWXFFYzFxUFIKeUxqVmhROWhBb0dCQVBBOERmZlh5RkFvWnpIaGVMcXREYXBTeDJaNkMveVJLbXZ0L0ZBTDdaZzVpQUY3MXI1TAp5WEs5TkZVT3lpQnF1UUd0dExVVUt5WnZseVp2OHM1TEJjNWZ4MHVIcnAwVXpybnlNU21GRHBRYXpJV0VrbXFuCndTS1pqaEhxdXIxdmk3aWdkdW5IaSs2VTNlRkRrV2Y5dWhhVEtEUmhFTHQ0ckxwRDNkazhDSWdIQW9HQkFNM3IKdE1wMllUVG1jNHpXNlY4dnMyWGFjdmxCN0kzRWIvMW9NRWl3WmVCSkUyWW1rMEFFV1NBQkVnRmJ1bEFrQjlwTAoyc2RTZE5nQ1E1UTQ0WGh1clR5SHRwS3paSmhaOTVYVTVRdTBqeURXSklZcmxpNVBscEFQRCtURnFaUFJtMlNrCk5jK1p3ejAyalJhbzhOSHIxZ25KZmZpS3c4VFFDVGxRTjcxUk0ycjdBb0dCQU9jaThOR0lCSXZUQTg3RFA5UmsKRWlUUTlsY0xrQ0xXVExtQlJXU0N4WHZUeHA2ZTF2TkttYXpTaTlwV20zVHJHY3VhcEtZZ25JK2ppQXNNWk5IRQo3dllyd3VWUnkxZ0pJQWxhRTZEK0N4UEdZUWNKa1pJYWkwRk4rcG9VZk0wczJJS3ZxUm11eTF5bVVJQ2U4UFRiCjgwSXJIZUNmajJqQVozZmpPano3ZkwzYkFvR0FGYUxjZmlGdUdVYlZnVWpiZ0hyY21La1pSNE5idlpHVVNzWDEKdk0xOEJ0TG16T2JrdGVjL0RoUE90b0hTMDdUVmRtUmQrbTk1ZzNESmRQdDlCVkJydDE1ekducnE2TzhiQ28weAorOGJlK3c1RkRDdnNQYlZ6Rm5QZXNhVHJLbkx0cHVkeUYvd0ovWmFMd0lQRHVlclR0SGVOV3Q0SnI5WkVBZGVoCjQ2eHlnSjBDZ1lFQWpmR1ZTOWo5TTAyZ0MwZjBFMzVHenc1azBwNWdLVjVzRVVtQWJRNzNjR1hVNGg5d0dRV00KNWI0V3ZYcGEzSzFEbS81SDYyVW4ySjJNUGhxaE45emtsRUNCSFcweWVSQU5OTlprbGZCOFNVMzZiSmo2ckxxUgpVdkV2V2UzMjRFZGZrcXpOVUxFV3lGb2F5dStwRTdNN2p3UlEwbjZvdy9PZEY4eXhHSE1iR0RjPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZEtZRTVLUEZmcUVoTEp5UWhaSXlBekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJeE1EazFOREl4V2hjTk1qWXdOREl3TURrMQpOREl4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREJQVWY0Z3BxdE1RbStkZXpoZHYxNnlBTXFTbjUzRHFlTEtPVWdjZGZNaHNvVGZzZ1UKSTJSNHZENDRCTHB5Y0FhY2xBUXJzL2dTUFBiZUc5RVRPblBIT2tCanlHNDcyRE1IZ0tXK3BINmFZRjBDRFN4ZwptMms0TWkvZCtJdU9MQVorMW9udGlualVpRGJMOFBSOXRmRHo5bHFER3RHRGQzOHFLc1o3c01mZVhEMUV0Tm5CCmcvNzg4Zlo3SkxDMjJuU0lqb3I5S294UnJ5RExvQVRLaSt3b2xvVzdPV0FiZmZsWUdLQ0t4dnJBcVk0ZmR3YmMKS21vWTNKMmdDS2Q0UGRCWnA2R3ZTcWtKNndabWhOaUZaSU9ya3BNbC85RnlCZGxUTktTeEVjaDkrY1FvSXhucwpTcisrZzR3bUt6dkk1ekZ2QUpjYkNWTUJxK0ZpRGNHMUZVVGRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV0NE9qN2M1SjA2eWF2VGg3Ymk0ZHg1VWhzME13RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCWTFXYmdWRFV0VHFoRFNSV2R3bUphL29wMzZSUFpRazNxYVNxYk42NUxKekVOTDNYdTdaS1VQCkhmOEpqNys4V3Zsa3NDMGgvT2NMUjN4VnYrR25xN0RLTzJ5MHBDM1pOY3JObDMyVTVRMVlwY0dUR3JoWlFKSloKQS8vTmJoV243ekFDVmtVOHpMQmxEb0hxV3NiR0hINXd4NnpKN3lpYk95T0RlQW8rVnllN2tpUnl6eVJKUTA0SQpnTjBWaC9jUk9JczhGbGwyRngyZ0xjcnBqSFB1Nkx5N1FLZ09xNDhqNW5zUXZSYS9tZmJ0blFHSGVFZWw5a2RVCnlwamFwa0VQdFV5emV0Q0wrZUZrNXk1NzhWNlY0ajhXYU9ET3c3dVlrMUZScGM3dklVcS9IbWE1UWhoT1NNNkUKRFhUK3l5UU0rNmNXYXhWaVhBRzNRRDYwVzBzS0J1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRUERmbWlzRDk2ZXlsODhwalNWa1RKREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJeE1EazFOREl4V2hjTk1qWXdOREl3TURrMQpOREl4V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDbWdqUHE2UDY2ZEVkYjRSdEgyb1dPN3JpdzcyeWcKMmtmTG9KZ1prbFY0QjVJQnc1Y09kRXJCcFEzMUdRN2R3aVJGK1ZWTVdZSzZSQXE5QTRFVzFRVDJVV3lrU1RIbQp0SjJoWFRZUDQzMUZEZmsyV1JnVk5DZ0o4UTByTVdTZXBERXpteW5qeTVrdzhJdzhzalQ1Ris3Nk5LZThYY0h3CkhpamVpSVNhRlJQYWRzODNQb2FrK2lnTm95SHJ6U3c2R29wdWY2L2ZhaGpnMEV1blZDci9SYkZyeGs0M1pFSm0KREJGT0NkSHFRMWpuUzV5RFJZSk9wZVN1Q1hoVzlpU0tWemJnUFVaVWZydFVoaG0va0tYMlpXZldBUG9aY0phWQpHUkJTYXhvcW1rc0YvSHhJOVlJRXovcUxjdWJSOHFOWEN5eEs5MEpZYnhURXpoMDB5UklmdEN4SEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZMZURvKzNPU2RPc21yMDRlMjR1SGNlVgpJYk5ETUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFjMCtjVGJNWTF6Nnp0VlZjSFlSaU1IczBWbjVReUlwY0dHTUR3NWlVMGFlZnpLUTIKN2QrdXZ1bHJPc1cvKzFqcmxuSmQ0TENhL3FzVGg0MUZDb3JjZ1JuL2lJcG1BSFJJZ3JyTzZvZFJKSVp2b25Ecgo3Nkt5SG51V1gvM2F2R2MwT2VPVXJvdTJ0cWJwd3VCWnM4bDZ4SjhOVkVBTk5oM1ZJTjJlVnN1MWhPUXloOWcwCmlIaDZsQ1BBcGpCRzExcm9kcFhNV3c2cjljbk9JTk80TTl1a0ZNOUI2QjVES255TWRBdVRRK0JsWTB6dU9RWFEKVzV1SzJtbkFBeW1EdkxVVUJjYkF5RmR2WDRvRmNLb3gxWllSUjFleitPVjd5RXlHZnpidHV3TkV0U0pIaXM4RApzYS9IUURxY2VtWXJ5TFhlUWc0bFFLbmV6VkN3UEFUTnJTQW1oUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcG9JejZ1ait1blJIVytFYlI5cUZqdTY0c085c29OcEh5NkNZR1pKVmVBZVNBY09YCkRuUkt3YVVOOVJrTzNjSWtSZmxWVEZtQ3VrUUt2UU9CRnRVRTlsRnNwRWt4NXJTZG9WMDJEK045UlEzNU5sa1kKRlRRb0NmRU5LekZrbnFReE01c3A0OHVaTVBDTVBMSTArUmZ1K2pTbnZGM0I4QjRvM29pRW1oVVQybmJQTno2RwpwUG9vRGFNaDY4MHNPaHFLYm4rdjMyb1k0TkJMcDFRcS8wV3hhOFpPTjJSQ1pnd1JUZ25SNmtOWTUwdWNnMFdDClRxWGtyZ2w0VnZZa2lsYzI0RDFHVkg2N1ZJWVp2NUNsOW1WbjFnRDZHWENXbUJrUVVtc2FLcHBMQmZ4OFNQV0MKQk0vNmkzTG0wZktqVndzc1N2ZENXRzhVeE00ZE5Na1NIN1FzUndJREFRQUJBb0lCQUJJME4vTGR5RU9nUk5EeAp1bWJQcUR4cE12MzlIeFl5NXhpSEZUbnVlck9sdUR2REkzZXNGU1E0cEY4QWYxU1ZUaHZzVjN3Q2FUMXVCUEtICk9JekRlMGhtdkliMWphUVlhUWRrUm0zVVJEVFJnMGFDMVJRMFlKQTlyMS9paFlxbWpzNkNqMERkV0lFMk8wN0QKZVBFbXdiVFBIdXVFSUpqYzQwRDVFZTQ2a2JJWGtBZTJ1akJETW5zY2o3UW1HMFQ4cWh4YnROM0FtYUx1RytOWQpic2R4WHlXek94dmFVWG1HQ2lhZnFrVWtmd2M2dmNQMTFQL0NHYUJaQzBIR0Z1M05pVVpnYWdZVmJ3KzgyVnVLCjNlMGd3K3ZWYm5KMml0dll6V3J6RnpWYStxL1hVUHFhY2h3MkczVno2Y29Qek1Ca3lGdjF5V2FSaElpSFc5Q0UKWGVwTGdkRUNnWUVBeTFPT0xhYmRrM044UlVxZ1NqMXZ0WnozSnVZdzBVRGcrVUtWZWNqc2pPNTV2UE1hZnA2UwpFRzBxTkdDUklZRU4xSjNwY3RHUlpsOEZEajYwNmQ4VG9IM0QyUllXTXZGOVJLOXRvbmpUYjhXVmNZUllpU01FCjJsRmZJVVRsNUE0dkZZcUVFT3JUNEhCNlQrSjNjaGVXYWtrYXY2cHVoVWx3WEFYYlBSemVxZmtDZ1lFQTBhVHIKMXg0QkN0cmJIMWl2L243ZDlOVEJhSEdMRE5USm1TZ3NJRjdTOVVuZkIwY0dKMEZMZnQ4cVFlOWFySFZLcEwvQQpTRkFPdzFKUTdNTlppU0plWWEvcEkwUTNRY2Vka2Rla0RRZklLeUt6YVNUNTJaQ0g5dGY1eDhvVVRFamZNM0NKCnlKMWFlWVNsRk9yc0xNWlp3VitTN2xyYytIUG5GZWJiVHhNQkdEOENnWUIzcFlxRDJLNkloeXU0aHFwK0pWcm8KRHg3cytBWUFET0tXS3hWVW5lUjlKaFBqR1ZjYzdXamNXN0M3TTV3VGtDSzRXOWcwNVpkZkcwa1pVZE1aMEZoMwpWNnA0dzJONnhOcEhJY2d0RkZhdmJpQjd0VHA0TUhBNW5DcVRwRHgzajlVckl1Q0dKL2xZR0RnUmJCMkh1Tk9kClpibGswZ0RKVkNiWEwrY01Oa0hjMlFLQmdIczhoSHF2STVPNjlZWm12d1pPazdGQmcvUWVrc3ZYSmk4SEkzRmYKN0lqT2hQR2xPYVBIeVZacVgwL2xJUnN4MDlBbS9DUkdFM2VVSXdnYkNiNElXd3ozdUlmSHFPZmRMTzQzb2pNYQp1UHRLYWNiTU9xYy9RLzNDRmczdzU1KzBVcWpOWmVGdFJtc2FvMlE1ZU40Vk4xdnFEOWhYeDMreHVrendxVWpCCmRpcEhBb0dBRk9PbnF6bDFSY2wzUGN6dlAzWmFvN0xHclNKNERiV1VWZGEzNG9iUHluR2x6WGpWK1VNL0lNYlEKZmpVbGJPQjRxdnhPTTQ3cmRmMzV2RGVyY3ZuM1RUdStCOVZHdGh4cnZocmpDakRHUS9JTUhXS2dINUN2c2l0aApRdFIvb1BDeDBncXdVSmUvNFJaaUxzZ3Vhc2tkNmUxOU0rdDNtcVowd1JTcEQ4amgzUm89Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZEtZRTVLUEZmcUVoTEp5UWhaSXlBekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJeE1EazFOREl4V2hjTk1qWXdOREl3TURrMQpOREl4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREJQVWY0Z3BxdE1RbStkZXpoZHYxNnlBTXFTbjUzRHFlTEtPVWdjZGZNaHNvVGZzZ1UKSTJSNHZENDRCTHB5Y0FhY2xBUXJzL2dTUFBiZUc5RVRPblBIT2tCanlHNDcyRE1IZ0tXK3BINmFZRjBDRFN4ZwptMms0TWkvZCtJdU9MQVorMW9udGlualVpRGJMOFBSOXRmRHo5bHFER3RHRGQzOHFLc1o3c01mZVhEMUV0Tm5CCmcvNzg4Zlo3SkxDMjJuU0lqb3I5S294UnJ5RExvQVRLaSt3b2xvVzdPV0FiZmZsWUdLQ0t4dnJBcVk0ZmR3YmMKS21vWTNKMmdDS2Q0UGRCWnA2R3ZTcWtKNndabWhOaUZaSU9ya3BNbC85RnlCZGxUTktTeEVjaDkrY1FvSXhucwpTcisrZzR3bUt6dkk1ekZ2QUpjYkNWTUJxK0ZpRGNHMUZVVGRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV0NE9qN2M1SjA2eWF2VGg3Ymk0ZHg1VWhzME13RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCWTFXYmdWRFV0VHFoRFNSV2R3bUphL29wMzZSUFpRazNxYVNxYk42NUxKekVOTDNYdTdaS1VQCkhmOEpqNys4V3Zsa3NDMGgvT2NMUjN4VnYrR25xN0RLTzJ5MHBDM1pOY3JObDMyVTVRMVlwY0dUR3JoWlFKSloKQS8vTmJoV243ekFDVmtVOHpMQmxEb0hxV3NiR0hINXd4NnpKN3lpYk95T0RlQW8rVnllN2tpUnl6eVJKUTA0SQpnTjBWaC9jUk9JczhGbGwyRngyZ0xjcnBqSFB1Nkx5N1FLZ09xNDhqNW5zUXZSYS9tZmJ0blFHSGVFZWw5a2RVCnlwamFwa0VQdFV5emV0Q0wrZUZrNXk1NzhWNlY0ajhXYU9ET3c3dVlrMUZScGM3dklVcS9IbWE1UWhoT1NNNkUKRFhUK3l5UU0rNmNXYXhWaVhBRzNRRDYwVzBzS0J1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lSQU8rZElUZkgrMXVyT0x3d29UNllUbDR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1UQTVOVFF5TVZvWERUSTJNRFF5TURBNQpOVFF5TVZvd0xERXFNQ2dHQTFVRUF3d2hLaTVqYkhWemRHVnlMVEF1YUhWaVlteGxMV2R5Y0dNdVkybHNhWFZ0CkxtbHZNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXpseC9uT3o5OGlURGlQWlcKMjByN1hEeVlCaEc0SnpLZS8zeTlPdkhubmZ4QmlBSUNMU3lONDM0MGgrL3U2eHNBMWJITmwxOE1qQlkrZ2dvcwpnTnhrU0daYW1vK3piZng5UU1VNGNMNlNuTHp1ZnBsbXRyNWlGa1JnT0I0cTBEL2gwSFVnK0JsNW54OWV6WXo0CnlnZ0Ryb21UVGI3Nmthb1JXUnZVZFl0WlJHSVBWQnJlUEM1NW5nazBlbmR0Q0hJTVNXWDNMMEJKUmNMbEVuOEsKTmtTYUdlckhGdTA2NHNtN2t6M3pFYkhMKzlvSmZqN3JkUjdZVmNGQXA0aHRqalI4U0Q5Q1V5OW1KaGRua24xdwp0RWY0bmYzY0JYa1E3eTdhN1dYTHlYbnl6ZmpsNmQ2M0VOb3dESlFYbVNiVnpHbGJHSVhmS3FEd2NyTTk2N05xCis3dUtRd0lEQVFBQm80R1BNSUdNTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUzNnNlB0emtuVApySnE5T0h0dUxoM0hsU0d6UXpBc0JnTlZIUkVFSlRBamdpRXFMbU5zZFhOMFpYSXRNQzVvZFdKaWJHVXRaM0p3Cll5NWphV3hwZFcwdWFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQnhnaUthY21WaUt6bzdJL3IzR3U2YjkKaGZMWTNab1ozQk50TVpnNnVicnpTd0ZCSFBXNG04Ulk4cnQyMVN4QU5wQXRuZDI0a1NJVGFFYTBXSHRXMFZHbgpXbGk0Zk8yL015U0NhT1JqSmpkNVgweGxxUmwyWlVwMkl1WGljYzNmSTlkUmZ5elZFVHFGVW5OL0ZWUmhmWWloCkJuanJSckdKQURwRGdFZWNxd2ZVVExDREs3N3VhZ1o1NkpmWUNwOGNtZzlFM2JyME8vOXM1RzdpRUIwQjJEYlcKWmVSVld4ZGE4TllkdFd3MWhJRXBBZGJWZUpmaDRqenhUQk1CZjdlbHRGN005N2tacUJ5ZjdaMjNMMWxIc0cyMAowTTBMRXA3bFFuTURZWnlUMWF2SzNOcXJSRktpSGpRa3JyMmU1S3VmQ0RDTGtIOEJJRFdTYzYyeHZNSVM0L2c9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBemx4L25Pejk4aVREaVBaVzIwcjdYRHlZQmhHNEp6S2UvM3k5T3ZIbm5meEJpQUlDCkxTeU40MzQwaCsvdTZ4c0ExYkhObDE4TWpCWStnZ29zZ054a1NHWmFtbyt6YmZ4OVFNVTRjTDZTbkx6dWZwbG0KdHI1aUZrUmdPQjRxMEQvaDBIVWcrQmw1bng5ZXpZejR5Z2dEcm9tVFRiNzZrYW9SV1J2VWRZdFpSR0lQVkJyZQpQQzU1bmdrMGVuZHRDSElNU1dYM0wwQkpSY0xsRW44S05rU2FHZXJIRnUwNjRzbTdrejN6RWJITCs5b0pmajdyCmRSN1lWY0ZBcDRodGpqUjhTRDlDVXk5bUpoZG5rbjF3dEVmNG5mM2NCWGtRN3k3YTdXWEx5WG55emZqbDZkNjMKRU5vd0RKUVhtU2JWekdsYkdJWGZLcUR3Y3JNOTY3TnErN3VLUXdJREFRQUJBb0lCQUQ1UWRFQ2cxL1pjMzZibQpMRWhBRmpNK0lQSUVPOFdxWlpUa3lBZWFzTVJtUGl1aDM2SmdoK0FnWmlCK2RYa05TRzAvS2NRQjhib0RwWkNECkhma3psQnpBdTY5Y29XUWZFSHVVa255Skw2Q2c5S3ZLQ3RnNEdVcDhEMG9pNGU3TXU1WEZLTldDYTlWL0ZaT2cKZENnZHoyN1BJR29qdDJweEhwZjM3V29wVUNWem83VTFJdVVnT0JQNUt1RXVla3l3eVNXY2tGZjBBbzQ2R2RkeApSYWY1TEhJT21xVTlRdTNPaHpENVFOMFI5SmIrNVdpWXhVYXJ1aTlXVDhqSFRIeXVoRDBUUzNkL2R3WkYxYVhGCkQ0Y0dxOE5TVUNhc3BibGpudHdPQlJMRnhWTU95OUxoVng1dy9oUlI5N2lNM0F0MWwwT2YzQ1NVSHpJSWVyUVMKN2hsQk1kRUNnWUVBK29jZDBiZnFONHNsRzV1aUdYMWdxemlramtCdEZVenhaODRTM25kdGg4NEhxNndoUm9BbgpFdWEzMkxuUHQ5Y3hNbmEram5EZDZ0RW9YeXBPMkpvNTAyYThpRkFkdElYa1RqYVora0FHMk9ZZEtuYlhoVzMrCmpFYTNJcGpmWjFTSGN5eXI3ZnBlRDh2RE1jQmpYekFBOVBhYS80QTJILzRoUVZYamlUYjhHNlVDZ1lFQTB0NXEKUUhhcmF5NXRucXlTc0F1Tzc3ZHpSekNJME1CSHYyMVByQWJoeHVQNUZzTW1TOWZ4eVpBd1NlckZrcERQUjY1WQphMDRVRGlkNmkzT3FEakFYaFVMTFNpSDVRNllXVkxBUTB5YXdTTUExRi84QjFZWGhSQ0FqWjdMT0J6VXhNbzVBCmpKcE1xNjgxc1huT216Y1pZS2hvM3lTQWpLVE1takFxeEV4Z1NjY0NnWUIyQm8vQ3pHMVlhNEk0NW5KUXBlT1QKNXFTSHE4eDRPMzZEVSs5SnhXUGhsZXZCTWQrZlVpS1dZZ0Y4NWRUNUhEVStPL2o4TENvd1JRZExCaWlOSE9OZgpOOGhjUTdvcTRPVTAvNzQ4eWtzdmhnRjVqdkZzRit6UzgwRzExK1Z2emIvZVA4NWoyQTdXVEQyU1E3dk5EVlYyCkVuUGxLT2JXM2FlWEd6cU4yMHljVFFLQmdRQ0dWdHdxSlhBZjRIeEYwbnZCWEJ1NzdJdXNsdWNTMXV6ZXI2MUsKVXpnVGxibGpId0NPNFF4UTlXTk9OQnVhdkZiUnUram9zOTFqQnhPek5BVHE5UWlIQlg2dHcrY2hpZlpBRGNzcQpPa09rbFk4OXNtQmd2K0k3bkozeHVxQTNSMVFJZVVmMlMzYjlDYXFUWHA2WmxBaSs0NHVzWFh6b0hUV2NKWU9aCmUyNzhrUUtCZ1FENDJUVHpjSHVFcXBRa0J2ZmQyWjFpTmV6dzRJd3ZSVVp1SWxVSXp3OTFjNisxTjJNVHBPRGsKTlBUK0N1dDNRNjMrSlVERlgzcURNbGZRZ2MzcENlUVg1UXc0bkJZSktRa2g2b3NoT2hHT0R6eERQQU1SSHBPaQpSYWorNzdnbHJadG5SckpFL1A5WW4wUGkzUEVnWTl0V2M1ZzJhUWJLQVF2ek9EZG9PazNXcmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: hubble-metrics
      port: 9965
      protocol: TCP
      targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 78848b0324562e3de12e6fdecafbae2c88eb3f232c8539ce66f6ed49fb442e3f
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  io.cilium/app: operator
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          command:
            - cilium-operator-generic
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: greyrock-ops.private.greyrock.io
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          name: cilium-operator
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp/cilium/config-map
              name: cilium-config-path
              readOnly: true
            - mountPath: /var/lib/cilium/bgp
              name: bgp-config-path
              readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
        - operator: Exists
      volumes:
        - configMap:
            name: cilium-config
          name: cilium-config-path
        - configMap:
            name: bgp-config
          name: bgp-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 5d81f166d35c295bfcc150b5cb4e6c391c44f887cfe07c06a8ec28d81a7f9c25
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
        - args:
            - serve
          command:
            - hubble-relay
          image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: grpc
          name: hubble-relay
          ports:
            - containerPort: 4245
              name: grpc
          readinessProbe:
            tcpSocket:
              port: grpc
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/hubble-relay
              name: config
              readOnly: true
            - mountPath: /var/lib/hubble-relay/tls
              name: tls
              readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
        - configMap:
            items:
              - key: config.yaml
                path: config.yaml
            name: hubble-relay-config
          name: config
        - name: tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: ca.crt
                      path: hubble-server-ca.crt
                    - key: tls.crt
                      path: client.crt
                    - key: tls.key
                      path: client.key
                  name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
        - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
          imagePullPolicy: IfNotPresent
          name: frontend
          ports:
            - containerPort: 8081
              name: http
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              name: hubble-ui-nginx-conf
              subPath: nginx.conf
            - mountPath: /tmp
              name: tmp-dir
        - env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: hubble-relay:80
          image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
          imagePullPolicy: IfNotPresent
          name: backend
          ports:
            - containerPort: 8090
              name: grpc
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
        - configMap:
            defaultMode: 420
            name: hubble-ui-nginx
          name: hubble-ui-nginx-conf
        - emptyDir: {}
          name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
          command:
            - cilium-agent
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: CILIUM_CNI_CHAINING_MODE
              valueFrom:
                configMapKeyRef:
                  key: cni-chaining-mode
                  name: cilium-config
                  optional: true
            - name: CILIUM_CUSTOM_CNI_CONF
              valueFrom:
                configMapKeyRef:
                  key: custom-cni-conf
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: greyrock-ops.private.greyrock.io
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command:
                  - bash
                  - -c
                  - |
                    /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          livenessProbe:
            failureThreshold: 10
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
            - containerPort: 4244
              hostPort: 4244
              name: peer-service
              protocol: TCP
            - containerPort: 9965
              hostPort: 9965
              name: hubble-metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            capabilities:
              add:
                - CHOWN
                - KILL
                - NET_ADMIN
                - NET_RAW
                - IPC_LOCK
                - SYS_ADMIN
                - SYS_RESOURCE
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/proc/sys/net
              name: host-proc-sys-net
            - mountPath: /host/proc/sys/kernel
              name: host-proc-sys-kernel
            - mountPath: /sys/fs/bpf
              mountPropagation: HostToContainer
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
            - mountPath: /host/etc/cni/net.d
              name: etc-cni-netd
            - mountPath: /var/lib/cilium/clustermesh
              name: clustermesh-secrets
              readOnly: true
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /run/xtables.lock
              name: xtables-lock
            - mountPath: /var/lib/cilium/bgp
              name: bgp-config-path
              readOnly: true
            - mountPath: /var/lib/cilium/tls/hubble
              name: hubble-tls
              readOnly: true
            - mountPath: /tmp
              name: tmp
      hostNetwork: true
      initContainers:
        - command:
            - cilium
            - build-config
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KUBERNETES_SERVICE_HOST
              value: greyrock-ops.private.greyrock.io
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
          imagePullPolicy: IfNotPresent
          name: config
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp
              name: tmp
        - args:
            - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
          command:
            - /bin/bash
            - -c
            - --
          image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
          imagePullPolicy: IfNotPresent
          name: mount-bpf-fs
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
              name: bpf-maps
        - command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-state
                  name: cilium-config
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-bpf-state
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: greyrock-ops.private.greyrock.io
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_RESOURCE
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              mountPropagation: HostToContainer
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
        - command:
            - /install-plugin.sh
          image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        - emptyDir: {}
          name: tmp
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /sys/fs/cgroup
            type: DirectoryOrCreate
          name: cilium-cgroup
        - hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - name: clustermesh-secrets
          secret:
            defaultMode: 256
            optional: true
            secretName: cilium-clustermesh
        - configMap:
            name: bgp-config
          name: bgp-config-path
        - hostPath:
            path: /proc/sys/net
            type: Directory
          name: host-proc-sys-net
        - hostPath:
            path: /proc/sys/kernel
            type: Directory
          name: host-proc-sys-kernel
        - name: hubble-tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: ca.crt
                      path: client-ca.crt
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
                  name: hubble-server-certs
                  optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
