# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: greyrock-ops
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "true"
  enable-bpf-clock-probe: "true"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution http icmp
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: greyrock-ops\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRUFnN2dxQitLZE85Zm43R1l3dmdDekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpBMU1UTXlOVFF5V2hjTk1qWXdOakEwTVRNeQpOVFF5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2tJd01MbUdtMjN2Q2s4TXpXd0ZYZDBxRXh0T0lFcSszalJHQ2k4dnFIakNFSC9FZ1oKenJyRW9kcDBCb0U5ajQ5Vk5uSkp4ZGltVkpHNVRmay9yS0dnV3R5K3haanhFckNRUlNKa3kwTFJGMjljdW9hegorRUQxcVZ2MlU3MFJFZHlsKzdmNTBnbkl2eTZ2N1UwTEtpcWlqdXBDL0JSNmVsbGQ5dlUvQlNJTDRPOUlhMnNlCjloenhXR1l3TkFvSWl3dkpCM3IyLzBSRi8xK0lKN0RFSUhKYWxvVUhJOHk5WGJlRkxScEhma0NuZDVoTUlXYy8KcnRBeDJMQUVJYjNZRWQ3WnlDQ2lONG1qcWlITmpUc2hPbWc1UHBNdTVUUzBpNEl4eEVkbno5SHJUNUlqNDRQQQpGVkJ1TFVHTDhIU2VoMVJ2UVY4WnQzOE9pcGhmeW4wOHB0S2RBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVpK0VMbTh0U0ZyeHRCeTlKNitKOWpldmRVT0V3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFVUZCWGozSU9BUnBYYWVxRWJiZnhmMnZaODNJa3RLZHowSngzTnlUdkwvRjFrQldpU2JoV2tUCkhTZ3VRQk1uZTYwRFhKODRFajN4N3RsckhYT1ZHSkhCeGNyVGNuT0NWQ0o1WFZBTlMyWFZtWUMweUZUMDRhN0QKME9lbXlXVTB6YU90WHdqQWc4aVBjT3BnaE10MExBWVNVckFlSzFLYVBmYm0ySTZteEpBMjUzSWh2QzF5SUdJZQpGTXpDQjNzUGQrbW52cXM3RnNtWVRXRnJUNlY1ZmxxOXZKeXpGTnVrVE8zaFhVd2NUc0pmYlRWdi83amRod25SCmlwd2VtUzVoRUIwTDdUUHBtK0tYSUI1QXZtNHdoN3lBa09JM1NXbnNyUS9XUWlLakNGOHY1MWJ3L2VlYXBGQTgKQjVmekppekV4SmpsNzRHTzVrTWJBS3lpSU1qOENwND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcENNREM1aHB0dDd3cFBETTFzQlYzZEtoTWJUaUJLdnQ0MFJnb3ZMNmg0d2hCL3hJCkdjNjZ4S0hhZEFhQlBZK1BWVFp5U2NYWXBsU1J1VTM1UDZ5aG9GcmN2c1dZOFJLd2tFVWlaTXRDMFJkdlhMcUcKcy9oQTlhbGI5bE85RVJIY3BmdTMrZElKeUw4dXIrMU5DeW9xb283cVF2d1VlbnBaWGZiMVB3VWlDK0R2U0d0cgpIdlljOFZobU1EUUtDSXNMeVFkNjl2OUVSZjlmaUNld3hDQnlXcGFGQnlQTXZWMjNoUzBhUjM1QXAzZVlUQ0ZuClA2N1FNZGl3QkNHOTJCSGUyY2dnb2plSm82b2h6WTA3SVRwb09UNlRMdVUwdEl1Q01jUkhaOC9SNjArU0krT0QKd0JWUWJpMUJpL0Iwbm9kVWIwRmZHYmQvRG9xWVg4cDlQS2JTblFJREFRQUJBb0lCQURPbWJOdm1QMFh6aThocgptaG50OWxkU1k3VXZsWHdnMmtBTkVWZlZuQzZ4VXVlZlpOVHlMK1dXaFJiRHdVR3MvazZ6VG0yV202Rmp0V09aCmZOaWpxMHk1cXdOQlRPcDNsaVlnQ3oycWxNRVZYYzdSUjNnMG84UnFZZXoyMXVVYk9OTG1qak5IL0JvMnh5dEgKUWxwRUQ1eU4ybnZ2dFVZQllFUG9aYTVLSURlYU5Ldmlma1VFRFFZaUpUVUpocGc2S2VGTUM4V3JkMVJXMmk5agowUXo4RnUrUWV1RGRRZ1c2Q2dZaUU1c1ZxeVY2SHRKWEFmZEk5MnVpdHAxMVc2dGJ0OVBTMUNBRHlCZGJ6dkJ2CjRRNjNSNVJ5VkhpV1V5SlhHdW1UaldMSElqbElnQk1XaHcrQzJPTFJuSWVZRWZPdEd2dHNSZ0RSNWk1U0NVdysKNitOU1RNVUNnWUVBdzdIYmNRVnpxS0J2VlNQb0VsdzdtS1V5K1NtWW9QNVVxVzlmbGpzMHNFbkNNcjVldXN5KwpNeTJFM1RXVlFHOTU3SmMvdzd6MkhBcmZweUswc1RnU3dQeTYyRkZwQ21BaEprTGVidnJqcCtCM0MyWnIwVVlGCjVmUEkxV2pFbDlHNFR3ZTVYdFIrYVAyOGJBSXpmQnF3V0JzVkp5cTB2ekdiWmh5azE2OUwvczhDZ1lFQTFyZVUKYm5HRUhnUXVla2t6S0dZQkdIUjBvQ3M2OUpDWHhrU3pNYk5aRWgraUlQeVdhT2hxeWNyMm0ydnd5eVppcjhqcgpLeGtGMnk5R2tMRlA4RUJyNnNuUXhLWkMySTBWMVRmLytYYWk4TS9UQnJLdHpRazU2U1dJMjczRXBROTNDNDJYCkViMi9pbFM5am50TFJUVXAxaUJlWm5oVUFjL3lnL050QytXaTB0TUNnWUVBalhaeGloY0Z6NTBDUGdxeHhTdjEKVE5nR3JBVDh0MHlDeU9TZ3RZbmhBWnFnRG14OU1BMjNaR21BUlNScDJ1VjZ2cU5yVGNTNEovZFlTNHFVRWhQVgp3cm92R3habWwwQjhWaHM2amdGQk5tYlZ4MkRuaWFWVHVESHRPUS8rSlQxT1BacjR6bXRQWWZnaUQvWGJYOWd2Cko5R1VEZmNhSjZmbGpRQWh6V1NEekJNQ2dZQUpUdEgvYTZwWGhzVGhCalZTaGdGOEp1ZzdYVVJqLzdTa29xdkYKOXNsZ3NNQmRmN1doZkpuTWY2RHJJZVhCV0x1a2RTaEVxUVFJK1dhc3RSTUxEaS9mY0xvOUhCdi91VFgrRlR4aQpleE1iTDFjdGppZGNvUTdDblo3dUw2N0xuUDBESWpNdlVMTng4clI0N2IxWWxiSm5sdVdndVl5aXUzbis0Rm1VCnozS2Nnd0tCZ0JxSVVtd3ZhMnY5TmhNYWhMaTA4T2Uza0QzUnlGc3BML0VJSkl0TzJySUJOTkpBSjhuR0Vab3oKczd0Q0N5ZTAwY0Q3RFZLeUZtZkZOT2YwNitvNkROL0FPTlFVSlZTd1RLV3RMZGxscWtBbUNQdFdHRmEvMFUwNApsbmFnU1RNYXZzZE83SnRmdUM4R2JOOEtJaXNtZjRLdmtqQTBxNjRIcjNMMkROa3BBQkE2Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRUFnN2dxQitLZE85Zm43R1l3dmdDekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpBMU1UTXlOVFF5V2hjTk1qWXdOakEwTVRNeQpOVFF5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2tJd01MbUdtMjN2Q2s4TXpXd0ZYZDBxRXh0T0lFcSszalJHQ2k4dnFIakNFSC9FZ1oKenJyRW9kcDBCb0U5ajQ5Vk5uSkp4ZGltVkpHNVRmay9yS0dnV3R5K3haanhFckNRUlNKa3kwTFJGMjljdW9hegorRUQxcVZ2MlU3MFJFZHlsKzdmNTBnbkl2eTZ2N1UwTEtpcWlqdXBDL0JSNmVsbGQ5dlUvQlNJTDRPOUlhMnNlCjloenhXR1l3TkFvSWl3dkpCM3IyLzBSRi8xK0lKN0RFSUhKYWxvVUhJOHk5WGJlRkxScEhma0NuZDVoTUlXYy8KcnRBeDJMQUVJYjNZRWQ3WnlDQ2lONG1qcWlITmpUc2hPbWc1UHBNdTVUUzBpNEl4eEVkbno5SHJUNUlqNDRQQQpGVkJ1TFVHTDhIU2VoMVJ2UVY4WnQzOE9pcGhmeW4wOHB0S2RBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVpK0VMbTh0U0ZyeHRCeTlKNitKOWpldmRVT0V3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFVUZCWGozSU9BUnBYYWVxRWJiZnhmMnZaODNJa3RLZHowSngzTnlUdkwvRjFrQldpU2JoV2tUCkhTZ3VRQk1uZTYwRFhKODRFajN4N3RsckhYT1ZHSkhCeGNyVGNuT0NWQ0o1WFZBTlMyWFZtWUMweUZUMDRhN0QKME9lbXlXVTB6YU90WHdqQWc4aVBjT3BnaE10MExBWVNVckFlSzFLYVBmYm0ySTZteEpBMjUzSWh2QzF5SUdJZQpGTXpDQjNzUGQrbW52cXM3RnNtWVRXRnJUNlY1ZmxxOXZKeXpGTnVrVE8zaFhVd2NUc0pmYlRWdi83amRod25SCmlwd2VtUzVoRUIwTDdUUHBtK0tYSUI1QXZtNHdoN3lBa09JM1NXbnNyUS9XUWlLakNGOHY1MWJ3L2VlYXBGQTgKQjVmekppekV4SmpsNzRHTzVrTWJBS3lpSU1qOENwND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcENNREM1aHB0dDd3cFBETTFzQlYzZEtoTWJUaUJLdnQ0MFJnb3ZMNmg0d2hCL3hJCkdjNjZ4S0hhZEFhQlBZK1BWVFp5U2NYWXBsU1J1VTM1UDZ5aG9GcmN2c1dZOFJLd2tFVWlaTXRDMFJkdlhMcUcKcy9oQTlhbGI5bE85RVJIY3BmdTMrZElKeUw4dXIrMU5DeW9xb283cVF2d1VlbnBaWGZiMVB3VWlDK0R2U0d0cgpIdlljOFZobU1EUUtDSXNMeVFkNjl2OUVSZjlmaUNld3hDQnlXcGFGQnlQTXZWMjNoUzBhUjM1QXAzZVlUQ0ZuClA2N1FNZGl3QkNHOTJCSGUyY2dnb2plSm82b2h6WTA3SVRwb09UNlRMdVUwdEl1Q01jUkhaOC9SNjArU0krT0QKd0JWUWJpMUJpL0Iwbm9kVWIwRmZHYmQvRG9xWVg4cDlQS2JTblFJREFRQUJBb0lCQURPbWJOdm1QMFh6aThocgptaG50OWxkU1k3VXZsWHdnMmtBTkVWZlZuQzZ4VXVlZlpOVHlMK1dXaFJiRHdVR3MvazZ6VG0yV202Rmp0V09aCmZOaWpxMHk1cXdOQlRPcDNsaVlnQ3oycWxNRVZYYzdSUjNnMG84UnFZZXoyMXVVYk9OTG1qak5IL0JvMnh5dEgKUWxwRUQ1eU4ybnZ2dFVZQllFUG9aYTVLSURlYU5Ldmlma1VFRFFZaUpUVUpocGc2S2VGTUM4V3JkMVJXMmk5agowUXo4RnUrUWV1RGRRZ1c2Q2dZaUU1c1ZxeVY2SHRKWEFmZEk5MnVpdHAxMVc2dGJ0OVBTMUNBRHlCZGJ6dkJ2CjRRNjNSNVJ5VkhpV1V5SlhHdW1UaldMSElqbElnQk1XaHcrQzJPTFJuSWVZRWZPdEd2dHNSZ0RSNWk1U0NVdysKNitOU1RNVUNnWUVBdzdIYmNRVnpxS0J2VlNQb0VsdzdtS1V5K1NtWW9QNVVxVzlmbGpzMHNFbkNNcjVldXN5KwpNeTJFM1RXVlFHOTU3SmMvdzd6MkhBcmZweUswc1RnU3dQeTYyRkZwQ21BaEprTGVidnJqcCtCM0MyWnIwVVlGCjVmUEkxV2pFbDlHNFR3ZTVYdFIrYVAyOGJBSXpmQnF3V0JzVkp5cTB2ekdiWmh5azE2OUwvczhDZ1lFQTFyZVUKYm5HRUhnUXVla2t6S0dZQkdIUjBvQ3M2OUpDWHhrU3pNYk5aRWgraUlQeVdhT2hxeWNyMm0ydnd5eVppcjhqcgpLeGtGMnk5R2tMRlA4RUJyNnNuUXhLWkMySTBWMVRmLytYYWk4TS9UQnJLdHpRazU2U1dJMjczRXBROTNDNDJYCkViMi9pbFM5am50TFJUVXAxaUJlWm5oVUFjL3lnL050QytXaTB0TUNnWUVBalhaeGloY0Z6NTBDUGdxeHhTdjEKVE5nR3JBVDh0MHlDeU9TZ3RZbmhBWnFnRG14OU1BMjNaR21BUlNScDJ1VjZ2cU5yVGNTNEovZFlTNHFVRWhQVgp3cm92R3habWwwQjhWaHM2amdGQk5tYlZ4MkRuaWFWVHVESHRPUS8rSlQxT1BacjR6bXRQWWZnaUQvWGJYOWd2Cko5R1VEZmNhSjZmbGpRQWh6V1NEekJNQ2dZQUpUdEgvYTZwWGhzVGhCalZTaGdGOEp1ZzdYVVJqLzdTa29xdkYKOXNsZ3NNQmRmN1doZkpuTWY2RHJJZVhCV0x1a2RTaEVxUVFJK1dhc3RSTUxEaS9mY0xvOUhCdi91VFgrRlR4aQpleE1iTDFjdGppZGNvUTdDblo3dUw2N0xuUDBESWpNdlVMTng4clI0N2IxWWxiSm5sdVdndVl5aXUzbis0Rm1VCnozS2Nnd0tCZ0JxSVVtd3ZhMnY5TmhNYWhMaTA4T2Uza0QzUnlGc3BML0VJSkl0TzJySUJOTkpBSjhuR0Vab3oKczd0Q0N5ZTAwY0Q3RFZLeUZtZkZOT2YwNitvNkROL0FPTlFVSlZTd1RLV3RMZGxscWtBbUNQdFdHRmEvMFUwNApsbmFnU1RNYXZzZE83SnRmdUM4R2JOOEtJaXNtZjRLdmtqQTBxNjRIcjNMMkROa3BBQkE2Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRUFnN2dxQitLZE85Zm43R1l3dmdDekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpBMU1UTXlOVFF5V2hjTk1qWXdOakEwTVRNeQpOVFF5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2tJd01MbUdtMjN2Q2s4TXpXd0ZYZDBxRXh0T0lFcSszalJHQ2k4dnFIakNFSC9FZ1oKenJyRW9kcDBCb0U5ajQ5Vk5uSkp4ZGltVkpHNVRmay9yS0dnV3R5K3haanhFckNRUlNKa3kwTFJGMjljdW9hegorRUQxcVZ2MlU3MFJFZHlsKzdmNTBnbkl2eTZ2N1UwTEtpcWlqdXBDL0JSNmVsbGQ5dlUvQlNJTDRPOUlhMnNlCjloenhXR1l3TkFvSWl3dkpCM3IyLzBSRi8xK0lKN0RFSUhKYWxvVUhJOHk5WGJlRkxScEhma0NuZDVoTUlXYy8KcnRBeDJMQUVJYjNZRWQ3WnlDQ2lONG1qcWlITmpUc2hPbWc1UHBNdTVUUzBpNEl4eEVkbno5SHJUNUlqNDRQQQpGVkJ1TFVHTDhIU2VoMVJ2UVY4WnQzOE9pcGhmeW4wOHB0S2RBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVpK0VMbTh0U0ZyeHRCeTlKNitKOWpldmRVT0V3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFVUZCWGozSU9BUnBYYWVxRWJiZnhmMnZaODNJa3RLZHowSngzTnlUdkwvRjFrQldpU2JoV2tUCkhTZ3VRQk1uZTYwRFhKODRFajN4N3RsckhYT1ZHSkhCeGNyVGNuT0NWQ0o1WFZBTlMyWFZtWUMweUZUMDRhN0QKME9lbXlXVTB6YU90WHdqQWc4aVBjT3BnaE10MExBWVNVckFlSzFLYVBmYm0ySTZteEpBMjUzSWh2QzF5SUdJZQpGTXpDQjNzUGQrbW52cXM3RnNtWVRXRnJUNlY1ZmxxOXZKeXpGTnVrVE8zaFhVd2NUc0pmYlRWdi83amRod25SCmlwd2VtUzVoRUIwTDdUUHBtK0tYSUI1QXZtNHdoN3lBa09JM1NXbnNyUS9XUWlLakNGOHY1MWJ3L2VlYXBGQTgKQjVmekppekV4SmpsNzRHTzVrTWJBS3lpSU1qOENwND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRSmJyVHpzQ2t4MHVBeU0xdkdvc2ltREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpBMU1UTXlOVFF6V2hjTk1qWXdOakEwTVRNeQpOVFF6V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZHpaYTRSalladm5Odktta05qRm95T3Q5elFPeVYKdzc0OXozNzJna1NqWWtlZFA2RVpuenc0UGk2cUgwejdKZWJad1RQTHZYVjhFU09vQVhxSUdtRFRzSzBwTTZ6WQpZTnVVUllIOWsrMUtRUVBYenlFeWV1cUNHWmpjRUk5Q2lQVTB1dXhiRDF0S0ZFbnFLUlBheHFJNGdGVEhiNmJXCkZadC9YbHp1VWtPNGVSQlNVZnRjTkJHREZscWovRWxmUTZzblU3bEVwN2drNHc1aENPUk12eTZXclJsb2gzczQKNGJSK1hjbUpxNW1waVZoK1YzeXZwMURLc1pLMjcxNUJtZEFRVjcwZFdYekxlVFM5Ni9oVHB0WVFhNno5bnVZTApuSjNYNVZIaEQ5WENiaWQvdDUyQWdZTXBXR1VZZmNrQUVxbi9yaEVOWjZ0ZEVVRzJ2R3RpYzlUWEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZJdmhDNXZMVWhhOGJRY3ZTZXZpZlkzcgozVkRoTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFQaHU1Tk91eXNnRktrRUNzQmVsWHFsWk12VWRMYXlLVWJzZVN6eFRKOXk1ZnVSR2EKbHNzN01xZ3h0MmUvWkhMNjlUckJ1RjBTMzdzUVEwdHZuR2V1ZnB1dUNyTjcwcUpXeGFYZHZ5NlR1UERXejdoUwpPSTlYbVdPblFXbEdETWJuZStYaVNnWjNXUm9XTGRNMlFYUUQ3b2N0dW9QR2xFNmFOVmE4Wnp5eXl5MHJ0ZVpJCmdtd0VqOHZsdUl6Q3BFeTNCKzU1bjVhdThmNVhrUjdtYm12a3JoUFd5WmRKYUZzL3pPQ0JlZzRlOURhS1pnN1MKZ1ZEeGNRY2J4OG5BcHZnMDl0WXd0bUhackNBZEVIQkpTRFJsdGtaYnVwU1o5Q0Y2cnZ1QVgvQUxpa2VDVXpFZgpoUk1TOFhKWWhCem9VZ3pBZlZNNWVNellrZ0NaaW1IQnJjYUdxdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbmMyV3VFWTJHYjV6YnlwcERZeGFNanJmYzBEc2xjTytQYzkrOW9KRW8ySkhuVCtoCkdaODhPRDR1cWg5TSt5WG0yY0V6eTcxMWZCRWpxQUY2aUJwZzA3Q3RLVE9zMkdEYmxFV0IvWlB0U2tFRDE4OGgKTW5ycWdobVkzQkNQUW9qMU5McnNXdzliU2hSSjZpa1Qyc2FpT0lCVXgyK20xaFdiZjE1YzdsSkR1SGtRVWxINwpYRFFSZ3haYW8veEpYME9ySjFPNVJLZTRKT01PWVFqa1RMOHVscTBaYUlkN09PRzBmbDNKaWF1WnFZbFlmbGQ4CnI2ZFF5ckdTdHU5ZVFablFFRmU5SFZsOHkzazB2ZXY0VTZiV0VHdXMvWjdtQzV5ZDErVlI0US9Wd200bmY3ZWQKZ0lHREtWaGxHSDNKQUJLcC82NFJEV2VyWFJGQnRyeHJZblBVMXdJREFRQUJBb0lCQUQ0a1I4WXBZQVNqU3pIcgpzWkwwUWxDbGZua1VpQll5RHlpb0hZZFZwVkh4MGVIS3ZOWXFMcnkzUUFrZWFtSThlcndscVJBQ2U5RnZybXJxCnFpWU92VEtmMEpENUdJZmRISnMzQkFtbnh6b0dnRXpyOUZhOHNMeXE5OWN4YmpqMVZocDl3YlhhUmtqVjFJV3gKeDIvUDZQSDNGMnV5UEREeU1Wbm0veEdhczdCZzNlNU80SEVkZkRySVhsVGFqM0ltRitrWE5ZRStCV09lajV2WgpVTDEzYUp1SDVqTVFGYzd1cGRUK21HYS9hWlJBUEt6OXlJOHFVbnc5d2xwY0dYK29nTmFGNExYTE9icEtiNTl4Cm5VMzRXeS9oN2RZMkg0c2NJSTZ6ZG4rMFIxdWlleUZSdDNieXFIYjUvVTlnRllMeUtwZTF3VW5BbGM2SmM4RncKU0IyeVo0RUNnWUVBMFU5ZVhibERFMHl2NE9DQi9tVXcrOS9sT05oWnJxK3Z1cVJuRlVFc1VTMjlTWVhCOWJKRQo4TDB4MHNrZERlWXhOTkhVc0FQaDdva1FoUmxJUWFCMUEwYmpLb2V6aWVUb09Yc2lXcEk2eHA0THFmZjBLWi9CCnByVXY4VGJDTkY5VWtqY2JWWlE3LzMzaVZEVDFHa09GOFBSWlVMdlZrVk1aQm9GZC9IQmtwbzBDZ1lFQXdRRHIKaUsvUlJ2cUZWWEpKMS9IRDNWQXJZWXlsbEZBdWlLU1VDT2hDVnFLenpXVjhsZUg4UXRoMVVGN2ZVNHNRTy92cgp6NDdiYlo1UVNKTmFHVmF3VFRHQXVMZlBzY1pPaXN1K0VBZjkrNjlaTmJxT3Z2TE5XL2ZSR2JDMEZsdUsvbmlTCmd6SFlVODFtb09ldnJVY3Z2aThKbDRqeExIVkQ2ZGMycVRaYjhmTUNnWUFkM1d4Q2hUZWIzbHBPQk5xbmVMckgKaFlmSVY1NWNQWGNlYzJ5OTdLR3RKNUNWbC84MzFtcmR5ckQ4T1hQcTBzaDhsOS80Q1dYSVNraFFKVzVZNXRNcgpWNGI4UDRhUGkxalRNczJSRE1KVUtxTFJhcTZzN2IyTTB0ZDNYRy9UVnpMUzlnZnhhd2d3aVQ2czh5MXh4T2FzCm5jRE1zekJpM3U5NExTZEM2S3FEMVFLQmdGUGFDM3FxTURrdk5HaUlLKzdtK2RxWUx4REZvMWFKYzM0b1NxeUkKQS9KUjQ5NHozbW5iOGRZMDV0c1JMT1BHQWpxZFc3a2ticzcwUGhzWjhjWWFkS1JGQXBDK1F6MFFWQ1ZYR1c4cgptYndVVmFUVE5adGVMN3hxTVcyQTZPemh2c1NLSzlWVi9ZK0RLTGgxa0V5dkpkM3gzNi8zYmhpTHBnTGRYc0VyCmZjempBb0dBR3RTUVpxNVhUeFVHdDQxK1ZlT0JjQzRqTEhEYklKWHFEN0Fqc0NOOHdDUlZGZHdueHk2aU1GODcKamRldXlISERkUldUN3BWN29DUVVrbUJFME5jOUNIMFI5WTlCOUtEZGUyc1lNbEVWemJXS1c0MXJTaDZPVW9TdQpCME5oS1JqT0pEMkpVTStzbXVWYzR4QytNMjY5UjFtUUsrWUdDMVZtdVR3aHVockZ6VVU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRUFnN2dxQitLZE85Zm43R1l3dmdDekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpBMU1UTXlOVFF5V2hjTk1qWXdOakEwTVRNeQpOVFF5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2tJd01MbUdtMjN2Q2s4TXpXd0ZYZDBxRXh0T0lFcSszalJHQ2k4dnFIakNFSC9FZ1oKenJyRW9kcDBCb0U5ajQ5Vk5uSkp4ZGltVkpHNVRmay9yS0dnV3R5K3haanhFckNRUlNKa3kwTFJGMjljdW9hegorRUQxcVZ2MlU3MFJFZHlsKzdmNTBnbkl2eTZ2N1UwTEtpcWlqdXBDL0JSNmVsbGQ5dlUvQlNJTDRPOUlhMnNlCjloenhXR1l3TkFvSWl3dkpCM3IyLzBSRi8xK0lKN0RFSUhKYWxvVUhJOHk5WGJlRkxScEhma0NuZDVoTUlXYy8KcnRBeDJMQUVJYjNZRWQ3WnlDQ2lONG1qcWlITmpUc2hPbWc1UHBNdTVUUzBpNEl4eEVkbno5SHJUNUlqNDRQQQpGVkJ1TFVHTDhIU2VoMVJ2UVY4WnQzOE9pcGhmeW4wOHB0S2RBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVpK0VMbTh0U0ZyeHRCeTlKNitKOWpldmRVT0V3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFVUZCWGozSU9BUnBYYWVxRWJiZnhmMnZaODNJa3RLZHowSngzTnlUdkwvRjFrQldpU2JoV2tUCkhTZ3VRQk1uZTYwRFhKODRFajN4N3RsckhYT1ZHSkhCeGNyVGNuT0NWQ0o1WFZBTlMyWFZtWUMweUZUMDRhN0QKME9lbXlXVTB6YU90WHdqQWc4aVBjT3BnaE10MExBWVNVckFlSzFLYVBmYm0ySTZteEpBMjUzSWh2QzF5SUdJZQpGTXpDQjNzUGQrbW52cXM3RnNtWVRXRnJUNlY1ZmxxOXZKeXpGTnVrVE8zaFhVd2NUc0pmYlRWdi83amRod25SCmlwd2VtUzVoRUIwTDdUUHBtK0tYSUI1QXZtNHdoN3lBa09JM1NXbnNyUS9XUWlLakNGOHY1MWJ3L2VlYXBGQTgKQjVmekppekV4SmpsNzRHTzVrTWJBS3lpSU1qOENwND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZVENDQWttZ0F3SUJBZ0lSQUwveHlOeGUwWVFybTFEUzdIUXc5Vll3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05URXpNalUwTTFvWERUSTJNRFl3TkRFegpNalUwTTFvd0x6RXRNQ3NHQTFVRUF3d2tLaTVuY21WNWNtOWpheTF2Y0hNdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF0L2U0c3huZHIwck0Ka05wS0FCZktqQkZlNG5hSEFiWTN6ekFBUnVFTDd3YWZSb1ZUR3pmbmYrQSt0ZmZyZnNyZVREcEZJcysrK3NMZwpwbkk2K0V3UFFDeDViYjltbmltYVkzNURwSWFVZThwOFVxSm1LN1VYM01obGVLMEV0YVZwMmpnblJqM1VjM2NQCjBaRGZXL0lTRmhJalpQU1dHcDBraklaL0JtSlYxZTJCSEEvemI5NE1BSHFZYnExSCtJY3BYdzl6R3BDckxBV1kKVGNCdmtvK0F1NjMrYy9aOU95ck0ya0p0S2ppaEZ1UnZBS1BIMENVUk1IdCtCajBlUmMybWFCWWEvb01hRnJ0SgpNZjZZbzRNTTczMHF4QkswTXFMVlF3cndMY1FhNjJkenB6cXFsZE96ZFdXazhEUFNnbmQzVlp4blhnbjF0THk3CnE3b0xQRCtUUVFJREFRQUJvNEdTTUlHUE1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlNMNFF1Ygp5MUlXdkcwSEwwbnI0bjJONjkxUTRUQXZCZ05WSFJFRUtEQW1naVFxTG1keVpYbHliMk5yTFc5d2N5NW9kV0ppCmJHVXRaM0p3WXk1amFXeHBkVzB1YVc4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJZFZ1VHlkcjA4NS9wc1oKS2hIZ1BsdFc4eVo2bmpJdjZyOGV0TTZqS2d3d2o4MlFNZWpKMjRsOG42R0ZYcGxiV0pFeHZ3V21LN3dyaERwZAozb1lENFNwRnd6OUlHTjUzQ1dNQzl0aWVkSzlxMTgwdzRqYXVxOS9pYkhYb0FJTlJKdE5OTXRMNUZrTHNCcXIrCnFzejU0T0FqczB0b0t0a0I5V1NvcENLRy95U2gzVWtOL3NmNy9sQ1JZZmhOdVM4VGhnVFRBOFBDQVdKLzhxNSsKeVd2SEFCWDVjR2MrUTUvWVhXdWxvNmkzV1JFek5NRlRNVk9lRHdLTFI3cEtVVWVvcGsxQ3FnelFrL2Z2S0RQdwpjRDdEaUdsKytnWW55empTTnZGWWRqbDRGanJvNHI4YkVBaFJFRHVML3U5OExLQ2V5VHVJWmFoZlRGWTNUVE1lClBnNW4zbUk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdC9lNHN4bmRyMHJNa05wS0FCZktqQkZlNG5hSEFiWTN6ekFBUnVFTDd3YWZSb1ZUCkd6Zm5mK0ErdGZmcmZzcmVURHBGSXMrKytzTGdwbkk2K0V3UFFDeDViYjltbmltYVkzNURwSWFVZThwOFVxSm0KSzdVWDNNaGxlSzBFdGFWcDJqZ25SajNVYzNjUDBaRGZXL0lTRmhJalpQU1dHcDBraklaL0JtSlYxZTJCSEEvegpiOTRNQUhxWWJxMUgrSWNwWHc5ekdwQ3JMQVdZVGNCdmtvK0F1NjMrYy9aOU95ck0ya0p0S2ppaEZ1UnZBS1BICjBDVVJNSHQrQmowZVJjMm1hQllhL29NYUZydEpNZjZZbzRNTTczMHF4QkswTXFMVlF3cndMY1FhNjJkenB6cXEKbGRPemRXV2s4RFBTZ25kM1ZaeG5YZ24xdEx5N3E3b0xQRCtUUVFJREFRQUJBb0lCQUU4eThHcjZlYnViWWhJQwpSOVZlYUs2QVUrNyt4QVJ5by9nb1hCWW5rSEdvMGkwVC9NRTlBZ2JGVFhvZGIxNjRpNWNaaHVZRHRkNVN3MUFrCjRVby94RmtHVEloNDIvNi9QbDRTMzZBVzZCbWJCSWEycjNHbGxzNVAzNDlpUFNMT1FaSFdsdUhnZ0hQdEQveFMKZURZbk1xNFp4TzhUZFFPa0h6WDRPUHRRbms5b0l1ai9GcTY5bzN5SlZTaFAzc2hkNjlSN3d2WDl0NHMwTklmagpKVUxLdkJpNDlHbVdlYkkrQ0Rha2NReFVIZ1hjSHdqbVZONzA5OFhMU0YzenhtTDRmbzFEWEJ0bTM3dC9pTDl0CmNHcDIxbStMNmc1Y0pJUVFQazFCQWlCV2s4ZHBBcUlZV2d0MW9FOVAzWTVSbms1bG9kdE8wYmNUbUF6cEhiNmQKNHp0ZCt5RUNnWUVBNTc4WUlxR0hrQk1BYlhqL2hzZ2ZnM3kyeW50QXdCY0U3ZTdnaGV4TXFqUXpleVVNSzNpRApQeUt0M0Q0Um9rSi9JcTQySzJIbFdwR0hycGhQbWdaWXd6NFFkZXN5SHpnMmpMczRORGo1MmFMWHBPUktwaEhhCmdZQ3BocDlIanNvV0daQ2VRQy9TRlJQTEV0a09IUVhkSkJmZFBFV2d1VTVXM0NGMnpFNCtqcFVDZ1lFQXl6aU0KQm5maDdIbFBpeEhNR3N3Q1dYdEdZOEd4MDErcFpoNXJYTE8ram1yNmE4UkRsMCsydUdreWlla2x3aHdsejg1WApmZTZXQ0RpY25NVVdMbFZIaXRPZitRam93RmQ1bkI0RUplSGxTZEQ5VndqQmNSVDJRUVNhOGFwSUIyS0RTc2ZGCmV5WmVJbC9KbVpDNHY2RjZadm9FRk5rYU5xM1pybmtVcnBPeGd2MENnWUVBd0M1TWlZdUNyQXZWOHZMQWxMa28KeVJXSFVHcmR5MjVMZkRUNHBKYk5ET2kxT0k0RWhaZ3UzeENYTldtVG5nZWUvdGVSdkhBMmp1RFlzQVZISGVmZApmQ3ZmNHFua3F0Y25CWlhNaWlJbHNFSEdxc3RXekZsSjV0TVh3cmdiMDJIcTZkQndLN0o4ZVZZc3RiaWlaNWNSClNIa3gwbVc3WDNDRHY1RlF2eVN6NC9FQ2dZQllZd2ZENkhCQ3dhQnZCQmFac1JGMGljRmJzZXI5M0NWNVhOR2wKU0NnaEdUWkJtT01zOUdhc1hsUzAxc3F0V2tDMzJTOEVmcmlTYXN6ekFtVmJVWXdFUFhiZWdabDV6cEg5N0xBeApLY2JvREJXanZSTWxjOUNIQnRHOU9pcUp5N2IrMTFSMDg0TU53RXVXbHZORHBaL3ZHZDZja3JCc0I4RWR1VnZkCmNpOUtvUUtCZ0Q2dzcrTnBNajRKbkszWEtiUzR5bU5xbXgxMUthbHZQZFViRDc5OXdiL3dEenkrWnkza3czd1oKRjhTcnpPaUowUjE4RTc4QzJaTzFEWk9yWDJaMnhlaVRGRnF2ODVRZDQzYTVpd21yTm5DWVdZR0taVFRpeWJrVAprNThqbWJtZlNsWFF4YnJ3b0U4aUt1VFVhZkU4NFVVdnRyOGZ1aE4yVWJrZTQyQVdzSGQ2Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 0855cb9644d03430443d4e6e4ad32840e3abf7243e1898ea7ae99db9afe774ea
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: ac9a6ac457a1729c5faaa0a40eabcb777b0e164ffce4d0eaffa61fa186cd8bc5
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 0855cb9644d03430443d4e6e4ad32840e3abf7243e1898ea7ae99db9afe774ea
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
