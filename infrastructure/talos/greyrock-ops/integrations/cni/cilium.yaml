# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: greyrock-ops
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: greyrock-ops\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQ29xd3Z6d1BadXdhQ2twaCtXQzdGekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFM01UTTFOalF3V2hjTk1qWXdOVEUyTVRNMQpOalF3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREFrZjduUHdwVERzTlNxcTYyUHVpRi9tWFpoSXRpTjdvNmVVNEpmb0JnS0xFaVFrZlMKd0tFVGhmN216WGZyUHNlT3ZyTkNJeng2QW95V2FUWkdUaGFLTDUvT2VRL0dMdFV4dzQxRktkVkR5SENPTFFWYwo1Rjh5RWhGb0VkeW5vZ1FjTG1GV2hSc0ZUMnNjbEVoc3hZWkNEcXJLZFA5RXk2djgwMktNcEI4L28wdjY4dmc4Cm5RdEVCTHYvdk5VdVh3bWpyb2ZzaXZyOUVoMFpTY2VzbVFoZFBkWDZqMDVRZG81akNNZmxkMER3Z0N0QVJuYmgKNnJBUGxKditaZVNxS0gyOVYyM1JYK2RJL1plUVdjajJxYy9kMkZqT0RsbHRBNXd0eEJmWDMyM1gxUlJsdUFwawp3bzRiK2l2aFhhb2FYSkh5d1NlcW9vaG1IcWcvdmQvazRIS2pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVoTU94L1FkRUFoU0NGZk9zdVEwdzhVWndjM1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCNzIrdlhvdlZUS0JVR2hBQS9jZ1cxZXBqZWJZOWNEdXJ3T1JvOFRDZ1VyRmJWUzQ5djdndk9aCm1lRWtWVnp4c3drUnlWZitwK0VmVUhSVVBBaW5Tb3NqdndnZFVWaWpPeWxtRXlkS0NnT0wzcnJHU0czTG9LblAKOE84MVdpZWhQUHdvMmVHRSttNkdoSFR1eFJhU1IzeWg1Wis4Z1NTd0ZlS1k5YWlGWnY4eDcvVlo4V0VKdWFvdQp3OHVGSjVMZmNwNlYzbThGWjB6aFkwb3krelF6cGVjUTJjcTRTanNxUC9ET1lYTXNVWVF2QTF3NzVOWWNTMXJwCjdXdDI3T2dJTU1GdjJKOG5LQjdNTzY4ak05YU9rNFV3QnhIOXJXT25LUEk0cW45ZTlrdWkxeDQ4eVB4U25OeHcKMUtRTC84SWVneE43RDU3YVlIdXd5YnlXNERORmd0UT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd0pIKzV6OEtVdzdEVXFxdXRqN29oZjVsMllTTFlqZTZPbmxPQ1g2QVlDaXhJa0pICjBzQ2hFNFgrNXMxMzZ6N0hqcjZ6UWlNOGVnS01sbWsyUms0V2lpK2Z6bmtQeGk3Vk1jT05SU25WUThod2ppMEYKWE9SZk1oSVJhQkhjcDZJRUhDNWhWb1ViQlU5ckhKUkliTVdHUWc2cXluVC9STXVyL05OaWpLUWZQNk5MK3ZMNApQSjBMUkFTNy83elZMbDhKbzY2SDdJcjYvUklkR1VuSHJKa0lYVDNWK285T1VIYU9Zd2pINVhkQThJQXJRRVoyCjRlcXdENVNiL21Ya3FpaDl2VmR0MFYvblNQMlhrRm5JOXFuUDNkaFl6ZzVaYlFPY0xjUVgxOTl0MTlVVVpiZ0sKWk1LT0cvb3I0VjJxR2x5UjhzRW5xcUtJWmg2b1A3M2Y1T0J5b3dJREFRQUJBb0lCQVFDZE1VL3Jnamt5VFpYQgprRlJucmZodkVKZ2hOQ0gzUGRoRnpTbVhkR3pra2JMdWJUNWwyaHBpYm5vQisyMU5XWVRhais2U0tXTS9rWDhqCmRLVDZSTm4vV1JyUkYxOTUvbGJIZFlLSEY3dmZ4ZW1qRlRzUWRkY0RiMTVJSG5TSlhpYU92b2wwYjlqN3Y3V0cKc2NCaEVlZ2pXZ2V1bGt5ZDRzZjA3TFRBYTJTYXM0Mmp4Q1Q3Z3kya3NxMXZUMDZKZWNsa2Rsd2F6dkhWMnhndApQVVVzNVVRdGtmUE5yQTNaeTlYcXZFTTNkcElIVEh0aUdWVWtQMXpQVkI4VUZzQmdKUitWdzA2d282VmZqTFdHClhINmM5cjJPVjlZd3JUeHArSG5SdHpxUG5RQ3lVdWhXV0JjN2RDWXBRb2RXakFUQzBrT2NmTkQ2b0hieUIzNFUKc1B1NkQ3enBBb0dCQU95anZJUU5ZdjVRQXgyU3plRVBFSytzTjViYmhkS1hXZ2ZSaHRDbXREdlVPWGhCMkxwMgp1SUUycGNReEVaQ28zSjBHVi9wbkltRTlKbU9sdWN3TFZod2lEZ2FWVVNTZUxFMXhVMUpBOFBvNHFpSkR5bEt6CldzNlNLajEyWEFoQTIwM1d0NzJYaGx0K1h2T0tQUDF6bUZWc3Rwa0xrUnNIbEhreDFXOHZiQXZ2QW9HQkFOQlQKUVp3UDZUQUdleHVZVm1PUVViMTArdFlxM0ZFY20vOTZFVVVVamNoT1NBNndadHRCKzM4TCt0RzZhSm02THJwNQpLNzhueWM5cUdmZklLb2Jad3BpSE43YnQ4enczMWVsclVVTmFCaXdka0JSckdOQi9QdDNxVGdtNUNMTXE3MHJvCjNnb0hrMjBnNXdwZ2hQNEd4MnZlNWRBd0NFUHd3ZjFYOWQycElDQ05Bb0dBV3Q1dEw1QXNhVmUwT3BENitlZGQKRXZoZ3lFODN6aXhNYUNBdlVzUVJCY0J5NlJqdjducFVVMW4yd2FYT0J1eXcrcU5LK1Y3Tk51WFNiZ1ZmbVZqcApFaGlKcGtHRVRUbG43YjBNcjlNOE5mbTRhenY0MzFUOEU4TFE4WlVYdGh1aG12eE94a0QvV1BibjQwRThObDlECktkcDdLNzNqVkt2T2VkT0hFQkQzdm9VQ2dZQTRYLzltUXl3QWNoQ0loQzRFblg1eFBhSFBxU09iMDVrbmhwbjcKenJjYm1JdUpaaFUvaWxpTHBldEhMQ0c0VUJqckgzVkdNbmM3YU9RRUdLZmhmRFpiM21PbVhqZ3ZlSkNyclAzOQpzdlB1cGtWaU1TVXk3dXhOVTJXdzNlREwwM2VVRnZaWFVudUQwWjZVUVZCY0NldVhkbWRNY21NYU42SFhkQ0UxCnpkbkMxUUtCZ0F1ZnMzKzMyQ3MvUDV4QzBiV0RHMGZzbjk3b3JuRHJGWTIvdzlPWHcyM0JYZWhVT3JQOEluYnEKV04yK09jeW1hakluM1p6U2hWcEhFd244aGpuRFV5NlN0RzJnbDF1YnR3MnlTZjhYYWU0Rkw0WGxYdThjWk9zZgpDSWh1NTFiQjRkeHhNUEZHMHhTNytpVncrNTBhOHF4L3JOOHF4VDd5MVM4c0V5dllidStSCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQ29xd3Z6d1BadXdhQ2twaCtXQzdGekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFM01UTTFOalF3V2hjTk1qWXdOVEUyTVRNMQpOalF3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREFrZjduUHdwVERzTlNxcTYyUHVpRi9tWFpoSXRpTjdvNmVVNEpmb0JnS0xFaVFrZlMKd0tFVGhmN216WGZyUHNlT3ZyTkNJeng2QW95V2FUWkdUaGFLTDUvT2VRL0dMdFV4dzQxRktkVkR5SENPTFFWYwo1Rjh5RWhGb0VkeW5vZ1FjTG1GV2hSc0ZUMnNjbEVoc3hZWkNEcXJLZFA5RXk2djgwMktNcEI4L28wdjY4dmc4Cm5RdEVCTHYvdk5VdVh3bWpyb2ZzaXZyOUVoMFpTY2VzbVFoZFBkWDZqMDVRZG81akNNZmxkMER3Z0N0QVJuYmgKNnJBUGxKditaZVNxS0gyOVYyM1JYK2RJL1plUVdjajJxYy9kMkZqT0RsbHRBNXd0eEJmWDMyM1gxUlJsdUFwawp3bzRiK2l2aFhhb2FYSkh5d1NlcW9vaG1IcWcvdmQvazRIS2pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVoTU94L1FkRUFoU0NGZk9zdVEwdzhVWndjM1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCNzIrdlhvdlZUS0JVR2hBQS9jZ1cxZXBqZWJZOWNEdXJ3T1JvOFRDZ1VyRmJWUzQ5djdndk9aCm1lRWtWVnp4c3drUnlWZitwK0VmVUhSVVBBaW5Tb3NqdndnZFVWaWpPeWxtRXlkS0NnT0wzcnJHU0czTG9LblAKOE84MVdpZWhQUHdvMmVHRSttNkdoSFR1eFJhU1IzeWg1Wis4Z1NTd0ZlS1k5YWlGWnY4eDcvVlo4V0VKdWFvdQp3OHVGSjVMZmNwNlYzbThGWjB6aFkwb3krelF6cGVjUTJjcTRTanNxUC9ET1lYTXNVWVF2QTF3NzVOWWNTMXJwCjdXdDI3T2dJTU1GdjJKOG5LQjdNTzY4ak05YU9rNFV3QnhIOXJXT25LUEk0cW45ZTlrdWkxeDQ4eVB4U25OeHcKMUtRTC84SWVneE43RDU3YVlIdXd5YnlXNERORmd0UT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd0pIKzV6OEtVdzdEVXFxdXRqN29oZjVsMllTTFlqZTZPbmxPQ1g2QVlDaXhJa0pICjBzQ2hFNFgrNXMxMzZ6N0hqcjZ6UWlNOGVnS01sbWsyUms0V2lpK2Z6bmtQeGk3Vk1jT05SU25WUThod2ppMEYKWE9SZk1oSVJhQkhjcDZJRUhDNWhWb1ViQlU5ckhKUkliTVdHUWc2cXluVC9STXVyL05OaWpLUWZQNk5MK3ZMNApQSjBMUkFTNy83elZMbDhKbzY2SDdJcjYvUklkR1VuSHJKa0lYVDNWK285T1VIYU9Zd2pINVhkQThJQXJRRVoyCjRlcXdENVNiL21Ya3FpaDl2VmR0MFYvblNQMlhrRm5JOXFuUDNkaFl6ZzVaYlFPY0xjUVgxOTl0MTlVVVpiZ0sKWk1LT0cvb3I0VjJxR2x5UjhzRW5xcUtJWmg2b1A3M2Y1T0J5b3dJREFRQUJBb0lCQVFDZE1VL3Jnamt5VFpYQgprRlJucmZodkVKZ2hOQ0gzUGRoRnpTbVhkR3pra2JMdWJUNWwyaHBpYm5vQisyMU5XWVRhais2U0tXTS9rWDhqCmRLVDZSTm4vV1JyUkYxOTUvbGJIZFlLSEY3dmZ4ZW1qRlRzUWRkY0RiMTVJSG5TSlhpYU92b2wwYjlqN3Y3V0cKc2NCaEVlZ2pXZ2V1bGt5ZDRzZjA3TFRBYTJTYXM0Mmp4Q1Q3Z3kya3NxMXZUMDZKZWNsa2Rsd2F6dkhWMnhndApQVVVzNVVRdGtmUE5yQTNaeTlYcXZFTTNkcElIVEh0aUdWVWtQMXpQVkI4VUZzQmdKUitWdzA2d282VmZqTFdHClhINmM5cjJPVjlZd3JUeHArSG5SdHpxUG5RQ3lVdWhXV0JjN2RDWXBRb2RXakFUQzBrT2NmTkQ2b0hieUIzNFUKc1B1NkQ3enBBb0dCQU95anZJUU5ZdjVRQXgyU3plRVBFSytzTjViYmhkS1hXZ2ZSaHRDbXREdlVPWGhCMkxwMgp1SUUycGNReEVaQ28zSjBHVi9wbkltRTlKbU9sdWN3TFZod2lEZ2FWVVNTZUxFMXhVMUpBOFBvNHFpSkR5bEt6CldzNlNLajEyWEFoQTIwM1d0NzJYaGx0K1h2T0tQUDF6bUZWc3Rwa0xrUnNIbEhreDFXOHZiQXZ2QW9HQkFOQlQKUVp3UDZUQUdleHVZVm1PUVViMTArdFlxM0ZFY20vOTZFVVVVamNoT1NBNndadHRCKzM4TCt0RzZhSm02THJwNQpLNzhueWM5cUdmZklLb2Jad3BpSE43YnQ4enczMWVsclVVTmFCaXdka0JSckdOQi9QdDNxVGdtNUNMTXE3MHJvCjNnb0hrMjBnNXdwZ2hQNEd4MnZlNWRBd0NFUHd3ZjFYOWQycElDQ05Bb0dBV3Q1dEw1QXNhVmUwT3BENitlZGQKRXZoZ3lFODN6aXhNYUNBdlVzUVJCY0J5NlJqdjducFVVMW4yd2FYT0J1eXcrcU5LK1Y3Tk51WFNiZ1ZmbVZqcApFaGlKcGtHRVRUbG43YjBNcjlNOE5mbTRhenY0MzFUOEU4TFE4WlVYdGh1aG12eE94a0QvV1BibjQwRThObDlECktkcDdLNzNqVkt2T2VkT0hFQkQzdm9VQ2dZQTRYLzltUXl3QWNoQ0loQzRFblg1eFBhSFBxU09iMDVrbmhwbjcKenJjYm1JdUpaaFUvaWxpTHBldEhMQ0c0VUJqckgzVkdNbmM3YU9RRUdLZmhmRFpiM21PbVhqZ3ZlSkNyclAzOQpzdlB1cGtWaU1TVXk3dXhOVTJXdzNlREwwM2VVRnZaWFVudUQwWjZVUVZCY0NldVhkbWRNY21NYU42SFhkQ0UxCnpkbkMxUUtCZ0F1ZnMzKzMyQ3MvUDV4QzBiV0RHMGZzbjk3b3JuRHJGWTIvdzlPWHcyM0JYZWhVT3JQOEluYnEKV04yK09jeW1hakluM1p6U2hWcEhFd244aGpuRFV5NlN0RzJnbDF1YnR3MnlTZjhYYWU0Rkw0WGxYdThjWk9zZgpDSWh1NTFiQjRkeHhNUEZHMHhTNytpVncrNTBhOHF4L3JOOHF4VDd5MVM4c0V5dllidStSCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQ29xd3Z6d1BadXdhQ2twaCtXQzdGekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFM01UTTFOalF3V2hjTk1qWXdOVEUyTVRNMQpOalF3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREFrZjduUHdwVERzTlNxcTYyUHVpRi9tWFpoSXRpTjdvNmVVNEpmb0JnS0xFaVFrZlMKd0tFVGhmN216WGZyUHNlT3ZyTkNJeng2QW95V2FUWkdUaGFLTDUvT2VRL0dMdFV4dzQxRktkVkR5SENPTFFWYwo1Rjh5RWhGb0VkeW5vZ1FjTG1GV2hSc0ZUMnNjbEVoc3hZWkNEcXJLZFA5RXk2djgwMktNcEI4L28wdjY4dmc4Cm5RdEVCTHYvdk5VdVh3bWpyb2ZzaXZyOUVoMFpTY2VzbVFoZFBkWDZqMDVRZG81akNNZmxkMER3Z0N0QVJuYmgKNnJBUGxKditaZVNxS0gyOVYyM1JYK2RJL1plUVdjajJxYy9kMkZqT0RsbHRBNXd0eEJmWDMyM1gxUlJsdUFwawp3bzRiK2l2aFhhb2FYSkh5d1NlcW9vaG1IcWcvdmQvazRIS2pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVoTU94L1FkRUFoU0NGZk9zdVEwdzhVWndjM1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCNzIrdlhvdlZUS0JVR2hBQS9jZ1cxZXBqZWJZOWNEdXJ3T1JvOFRDZ1VyRmJWUzQ5djdndk9aCm1lRWtWVnp4c3drUnlWZitwK0VmVUhSVVBBaW5Tb3NqdndnZFVWaWpPeWxtRXlkS0NnT0wzcnJHU0czTG9LblAKOE84MVdpZWhQUHdvMmVHRSttNkdoSFR1eFJhU1IzeWg1Wis4Z1NTd0ZlS1k5YWlGWnY4eDcvVlo4V0VKdWFvdQp3OHVGSjVMZmNwNlYzbThGWjB6aFkwb3krelF6cGVjUTJjcTRTanNxUC9ET1lYTXNVWVF2QTF3NzVOWWNTMXJwCjdXdDI3T2dJTU1GdjJKOG5LQjdNTzY4ak05YU9rNFV3QnhIOXJXT25LUEk0cW45ZTlrdWkxeDQ4eVB4U25OeHcKMUtRTC84SWVneE43RDU3YVlIdXd5YnlXNERORmd0UT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRRVEwUUFNaHBpVHhndkcySnJvRENqREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFM01UTTFOalF4V2hjTk1qWXdOVEUyTVRNMQpOalF4V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDcVF6K05Od0FFL05NL2RHRkVXNDA3T2ZBYkk0bjkKdStCblVrUkdndWM2YS90WjBtQVdQSjRSV0xQcEVJSy9uZXRIVnY4YjhMODBoa2VlZVZxODZPMGlxNjdhVzF4cQppNkYrRnpGT1I0ZGJMdUV1dmR6anpCbTExY3VrUHBTM3ZxVHcyM05GV29sbGF2QXJ6K0NhOFF2OWxRdTNyZ2RNCjdBeXd3TGZScUFGRWJna0VzUkVPL0R3OEtwMmM5VllJcXd1VmJFbGl5VzZvMFFkdm12amI2Y0t1ZjhKd1lrdXYKVWd0ampUeTRLQ1ozbS9aWUZXUTVGSXY4cEVrMFU4aVZxWThGQVNDUC9pNmxZbVhTQWZFSXYvZmtjMWp0OGFMeQpGbHhWYXN5eDVMR2RseGpQMVQwa0VCK25nTjBMWWNTc3hIaTJoQVVTNHdzTVZVMG9uckJxdkFycEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZJVERzZjBIUkFJVWdoWHpyTGtOTVBGRwpjSE4wTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFBQ1FmR3p4U2RNOGRwOHdybHVHY201YmlvTkl5QTl1ZVRETEhnN1BXS2Y2cGMxQVcKcU1MYWFQSlY3RE0rZ1ZobzQ4L3gxUGpvSTRlVUp4VUtBWmYyODJDY0QrcjNQZHJjSURoVGpEMDZtZUxKSTdYdgpYakgzV0ZyR3hjbkhvVkFRTkg3ckFMeDRCRXBMclhkZVkrL1hkMVpCUUxsWVRCdGZ2WkE1dWRuWTBNSVd3dWZ1CldpNXVLU29TRzJ3RkFrdjNPSU9HZjRuRURuNEp6QlI2ejIwOUJXOUYzb2RUQjF4NGtXZFBZYmtndHZpTXorQU4KMThKbE04bUlzaWYzL1hHTERhWnA5UmE5dWt6LzlFUEIyRDZ6V1RBQWV0aEswMVZpR20zWDBHb1RKd0U5MjUxQQpMaktCMGNhQ1U0UVk4a1I0R05ZcitDTmVHdUtCK2R2dFord1hzdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcWtNL2pUY0FCUHpUUDNSaFJGdU5Pem53R3lPSi9idmdaMUpFUm9Mbk9tdjdXZEpnCkZqeWVFVml6NlJDQ3Y1M3JSMWIvRy9DL05JWkhubmxhdk9qdElxdXUybHRjYW91aGZoY3hUa2VIV3k3aExyM2MKNDh3WnRkWExwRDZVdDc2azhOdHpSVnFKWldyd0s4L2dtdkVML1pVTHQ2NEhUT3dNc01DMzBhZ0JSRzRKQkxFUgpEdnc4UENxZG5QVldDS3NMbFd4SllzbHVxTkVIYjVyNDIrbkNybi9DY0dKTHIxSUxZNDA4dUNnbWQ1djJXQlZrCk9SU0wvS1JKTkZQSWxhbVBCUUVnai80dXBXSmwwZ0h4Q0wvMzVITlk3ZkdpOGhaY1ZXck1zZVN4blpjWXo5VTkKSkJBZnA0RGRDMkhFck1SNHRvUUZFdU1MREZWTktKNndhcndLNlFJREFRQUJBb0lCQUNuUkdtcTBkMnpDSzZBSwpGVm1Vb3J0Skg0K0t5dmxtaTFiVS9hL1R0cmJDanBrZzhqaUQ2czZYMnBnRFZobDV6NjlWenBJdUxzZlhzdjlaCkR0QVc1U2IrdzVNZG5UVU4xandCdGpwamx2cnVLS0F5UVc0eFVwODJReTJ6c1JMdjM5TElFeWVWZE9sVHVta0kKUlVISXNnazE4Z3JLMDBBeE9XeXY2SFcxclpvQWhlajRNaHhhaDZUeC9PMG5vV3orOXAvRkxjeHhJbFFrellWOQpPUnIxRlRmZ0Zic1FhejVDT3VyejdlWFRveS8xVC9TaTVuVU1vVHZDTTJVMXh4VDV2YWRVRzQwVW9XejVXbjNWCiswRGUxVHpzQnc0RHdvb056a01ER2svaFdQdmx2R2lFclg5aytoVEliMDF3bUVrVXhiRjVlMTdLbHdTVnhMVk0KRy8rOHk0RUNnWUVBMEttR3AvdEFUb2xqaDNud05Yd015YndvM2pWczJSM2FrU2lUQ3Q2Tml4YmhVVGF2SVRJUwo4V0xlN0FsbXlBUlJ2RlR6RCtuZkhhR3d4SDJHM0tkcHpVY3BVdnQyRXpCeGpkYVJ3N090T3VJbEhLVHNuQ3RzCjhZcXhROW1XRHgxeHNkZlUrV01HUzlBZ2xGSmp2ZVlXaWdTanRrVTk4eHZPYTRXaGVjWW1rb3NDZ1lFQTBPT1gKNllPQVVYWE9McFJ4VFFJdHVQWlhEVUExcTFmMFpsWWc0KzlrbktxZXZCNGVkQTJTcldNdUxLV1I1TUZITEo4VQpxbk1LVXo5cDNLVFhhZnB6WDM5NEUwbDFqZkczTnNsTXFTYmFaeENKTmNPQThqTE9zVVNZZnQrQVh0ckNSN0pDCkU5a3NpaVN5S05IdXFzSGtKNWp6Y1lqWHBDcmFNMmFxZlRLeHl0c0NnWUEvZ0toTGJTcVgvRFgvSC93YnV1SUYKYnk4YzJUT0VMQks5aEpTamhUR2NkOTBnb3p6UEpIY2hZVTZvbFAvanRYVE9sU2ZYMnZ3Yy8zMVZmMEpRMnQ1WApLK1lHckNLMkdsTWtzSDF5Q3JlWXFRUlVZRmpsK2sxUWdUNExnU2VxOS9JSEJzRjVHRXJ0UGF6OGxzcG1HNlVXClllMFU1cVBBM2VDSFZvYmJFWlBobXdLQmdIYkxxSDQxdWdrWnZTdENZbmtRTHg2TWdnOVlIKzJVOUxvcWEwUVYKeGh0TzhUMDh4OGJxWFN0Y1IwcyswZ3pOV29QbTZLTFREK0V1SkM5R1UvZkNabEMrTm5TSmgyQTFRaVBYTVZEVgpkc204WHJ3RHRsYUhUSU1GNXMvb25hSFVPVDc3QXBjMUlCNWtKaW9PMGZPc2x1dHFFYkRVeVFabEZIaTgvMko2CkxTQ1hBb0dCQUlpVEV2TGpWZmZDbm5taFhGc3RjTlFZSExXTURNeTl0TEFINVdIY083OFAvOWVjQm5SL1Z6K0sKN1pJcjVLRlRVcjIyMG0xVmtXN3VwNUU2MVZPV1k3bkF1Z2Z1ZzJIaEJ6QlpqT0g0Y3RGbFFMTE41MFVVYk41MAppZUhqWCt6RkNkOTNxMWIxUjRaMktsSFQ3RDkrQ2tUODBCeDY1VTRQM2R5eGM0OTB6SXFECi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQ29xd3Z6d1BadXdhQ2twaCtXQzdGekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFM01UTTFOalF3V2hjTk1qWXdOVEUyTVRNMQpOalF3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREFrZjduUHdwVERzTlNxcTYyUHVpRi9tWFpoSXRpTjdvNmVVNEpmb0JnS0xFaVFrZlMKd0tFVGhmN216WGZyUHNlT3ZyTkNJeng2QW95V2FUWkdUaGFLTDUvT2VRL0dMdFV4dzQxRktkVkR5SENPTFFWYwo1Rjh5RWhGb0VkeW5vZ1FjTG1GV2hSc0ZUMnNjbEVoc3hZWkNEcXJLZFA5RXk2djgwMktNcEI4L28wdjY4dmc4Cm5RdEVCTHYvdk5VdVh3bWpyb2ZzaXZyOUVoMFpTY2VzbVFoZFBkWDZqMDVRZG81akNNZmxkMER3Z0N0QVJuYmgKNnJBUGxKditaZVNxS0gyOVYyM1JYK2RJL1plUVdjajJxYy9kMkZqT0RsbHRBNXd0eEJmWDMyM1gxUlJsdUFwawp3bzRiK2l2aFhhb2FYSkh5d1NlcW9vaG1IcWcvdmQvazRIS2pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVoTU94L1FkRUFoU0NGZk9zdVEwdzhVWndjM1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCNzIrdlhvdlZUS0JVR2hBQS9jZ1cxZXBqZWJZOWNEdXJ3T1JvOFRDZ1VyRmJWUzQ5djdndk9aCm1lRWtWVnp4c3drUnlWZitwK0VmVUhSVVBBaW5Tb3NqdndnZFVWaWpPeWxtRXlkS0NnT0wzcnJHU0czTG9LblAKOE84MVdpZWhQUHdvMmVHRSttNkdoSFR1eFJhU1IzeWg1Wis4Z1NTd0ZlS1k5YWlGWnY4eDcvVlo4V0VKdWFvdQp3OHVGSjVMZmNwNlYzbThGWjB6aFkwb3krelF6cGVjUTJjcTRTanNxUC9ET1lYTXNVWVF2QTF3NzVOWWNTMXJwCjdXdDI3T2dJTU1GdjJKOG5LQjdNTzY4ak05YU9rNFV3QnhIOXJXT25LUEk0cW45ZTlrdWkxeDQ4eVB4U25OeHcKMUtRTC84SWVneE43RDU3YVlIdXd5YnlXNERORmd0UT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZVENDQWttZ0F3SUJBZ0lSQUlLRzBpMWloWlE2eEtLYjFLWmpwNG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeE56RXpOVFkwTVZvWERUSTJNRFV4TmpFegpOVFkwTVZvd0x6RXRNQ3NHQTFVRUF3d2tLaTVuY21WNWNtOWpheTF2Y0hNdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE1VFhnTzduVUdVT3UKT0dsZDhjNUh3MVFaVlh4YzFzOVVUTzZldjVKOS9aWHRYeEc4eXBmaEl6SUdmcnpUb0x3SHBxZDFRWGVId0V2YgoveFFFWkgvV0I5elZUS2htYTlHU3NyWnpMVC9aMnpuTVZQeUtSbXZabXVxS1E4WjZzSmZnM3F1VGpTRGQxQk93CmN2a05NMGltQ1VxK3daeXJXZ3lsbnpjY2xHRU5YTU9ZekkxSzd6N0tFbE05Zkp2QUlSQnNlTzNIMk43M1BTTnMKbDdyQjBHRTVRQnQ3TStzdTNvTGlSOFVoSDFpUXkwN3VETE5YOEQxa1ptQ3dBclJtdUxOd3BDTGJnRHNyNmRkeAprV1FuczNMTTVRZ0pEbk1NOGYxamhicnhCeGRBWktvRndvL0UyeVgxZXVSOFlZQm8yQlgzS3RTY3NNRStVSXorCkxGZmRlV044VHdJREFRQUJvNEdTTUlHUE1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlNFdzdIOQpCMFFDRklJVjg2eTVEVER4Um5CemREQXZCZ05WSFJFRUtEQW1naVFxTG1keVpYbHliMk5yTFc5d2N5NW9kV0ppCmJHVXRaM0p3WXk1amFXeHBkVzB1YVc4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJR0pGMDEzLzZMYU5FdGQKNVVpNXdRZmN4eUNDRmJ6OGZYMExCMitpN3o0LzhoU2pxTkxGUDg5eG50Sk9RZ1ZzWXhqYzBETTJ1Wnd3anpmRQpoTTQ0VEhsT1FNMFFaejJuT3Btbjl5NzdRbXFsS2JFUVhBLzlnLzBkemkyZXNUN1ZNc0dmN1ZVaVFaRmRJbUQ3CmQwWkZKYXN2UVhwMkVHbEtwY2FUU1hIVTlwWUJUR2t4cS95Nkt5V0tDcTBGYlVQblRhSXZ2SVZRRFFHb1BRODAKOWVqcm5aejdSUWt4K3VSZjk4WGM1TTdoZjczTTFWUmRML1RIREEwcHZ4dFJMOTk3NnVwRjA5RS9YQThFQnM0SgpUekYwNCtnWXFsUDF2ZHdKeFlRMThtMEI4SkFQdkxkN1JoZEJtV1kvVUdpTkVCUmhqb3NXTGFETWpEWVdFZVd3CnhLS0MyaVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBNVRYZ083blVHVU91T0dsZDhjNUh3MVFaVlh4YzFzOVVUTzZldjVKOS9aWHRYeEc4CnlwZmhJeklHZnJ6VG9Md0hwcWQxUVhlSHdFdmIveFFFWkgvV0I5elZUS2htYTlHU3NyWnpMVC9aMnpuTVZQeUsKUm12Wm11cUtROFo2c0pmZzNxdVRqU0RkMUJPd2N2a05NMGltQ1VxK3daeXJXZ3lsbnpjY2xHRU5YTU9ZekkxSwo3ejdLRWxNOWZKdkFJUkJzZU8zSDJONzNQU05zbDdyQjBHRTVRQnQ3TStzdTNvTGlSOFVoSDFpUXkwN3VETE5YCjhEMWtabUN3QXJSbXVMTndwQ0xiZ0RzcjZkZHhrV1FuczNMTTVRZ0pEbk1NOGYxamhicnhCeGRBWktvRndvL0UKMnlYMWV1UjhZWUJvMkJYM0t0U2NzTUUrVUl6K0xGZmRlV044VHdJREFRQUJBb0lCQUF3QXprVlNiZkVFd2xMaAo4YkdBQS9JT3JXVDBwa2Y1ZzRpajFseGg1NGNvR3M0bnQ2TkVZTjNlK01nYVMxclhmZThVUmVldndzUW5OTlllCnpqd1ZGYmhEc0VmYmFjR3JyK3I3OHZ3am85ei9JZHd4Zld4Q3FacWJQYkplNm4zazlqbXk4bjhwZ1hSaHM1UFIKeHdjd2ZzRnQwSitDL05ZeVkxbjdJTndFV1JiS2JnbzNKTjkwR0U0Q2RHU1UvK3Rxckc0aU10Ny9uWkV4ZllQdgpHaFpWK3M2YkgzTmRsZWVSY0M0ZjRTcVJxT0NqZGdLc3FRN000ZEo0S2lGUkE0WEcwSkJXc2F1Q3FTaWxOV05LCnpxbDRQMnVKS1JlcnhtK2k3enpHMHdmNzhWNHJZaFJ4cjd3eklpQUxuOEZpTm9Qb2FOMnlkV0JXd3VldVZ2K2kKdWltQ3NnRUNnWUVBKzlERDNvMDNLS1k5SjB6Zk1jOFdvZWZZNG5Ta09Sb3I1M05CeDhJQ2x4dEgyYlN5NnNLdApXM0Iwa2UvcHl2bmdQRmlCZWZYcDBxU21ualpFKzRYYVJlUitmSWJHTFhnaWQvMWtPSkI1SmlVRTVPd084K2pDCjZJeEVpZndENlFWK3RWL0U5SkxEY1RMeEtyVHVLdE5namk2N0xHT3MzcGVPdmdLTnJCbTlIV0VDZ1lFQTZRVHkKcW94VGJ5T3M0YjdaZGRLdGE2QWFNUlozM2JRTFR3Z1UzMlRrTjVVcTVqd0Nkd3NzcTBaTm9PZWRENlJhZ1lIZQpwRzdYLzVyS2IyQXcvMGVQUzZIY1VIMERSQVFIZUtWS1lXUVp6d3ZCSjZjWnBaeUZLQXl6NFhhUWpoMHNmU2R2Ck0zK3EyTWZSNnFsdzFTSUhaMVgxWjd6MUdnVklXQzhJSG84R3g2OENnWUJUZHB5Vk5VVWxDZ1NXOUJtK1RwOTMKeG5yU2hFcXlTb1JtMElMckROa0M4SjNlQU5DVWt6WVdhcTJZZVdhS1Nrd1NkRnRsNnlZM0ZTL01uTHc4aWQ4UQo3MjBsSlI2bWozME5QRVZ0b2lVbGlYdVh6TTRmOWZRMFU5bWJ5cFlaTkNNTlJ0TG5KWVgyRFNaMk8wWDlsOVlYCkNsSXJvbFgzNlUvOGxxZ1NkTzJEd1FLQmdBTTlOVjVYaXdWZGVwYTh2MnNhM1p4RVlualNOaUpYMFZ4czRWVmwKb3FKL0tWUi8rd3pLay9saGhjeTV5MzRmSzc3bkhrQXM1a1hBVWhZUVFUNGJNWXU4bVVKcEtuVjBsT0lCY2pJKwpZUGwyMFYyS3ZobUdQbmViRFprUnU5cXQzeU55TytKOFlOU1ltbnRubFpEdzR5ZDFrMjY0dXJOODVVK01mOUZrCjdaUXpBb0dBUFJVcFdJVC9OUzJadUIxMldjdWQva2dYK2lTYWZWUjJrYkc4cDlVUHh0MnR5YldUQ2dudG5jS3YKSVZJd0wzYVpNZVBoWllFTEhOMHNiNGQ5RU93T2ZVVUN5S1ZjTkx2QStKNlgwaTVTczVTb2l6WmpBZDlqaEZodQpqYnZ3RmZ2SW5oWEtmbElpVVRIUlBzeTMwMzZkLy9HVW43WVVidUJxYTJmYXZaUWU2ZlU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: af6dfa5593ba9853a9ddcf6526f507915b131358cfe7d8e85f135258e2def2b2
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 157ff778ffd2a3446cb197d94c0a19ddbc5ad72cbbeb4232c1f5873d02aa515e
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: greyrock-ops.greyrock.io
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
